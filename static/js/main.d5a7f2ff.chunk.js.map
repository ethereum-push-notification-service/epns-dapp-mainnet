{"version":3,"sources":["helpers/CryptoHelper.js","serviceWorker.js","connectors.ts","hooks.ts","config/index.js","helpers/EPNSCoreHelper.js","components/NotificationToast.js","components/AliasVerificationModal.js","components/ViewInfoItem.js","segments/Info.tsx","redux/slices/notificationSlice.js","components/DisplayNotice.js","segments/Feedbox.tsx","api/index.js","assets/Device.js","singletons/ChannelsDataStore.js","redux/slices/channelSlice.js","components/ViewChannelItem.js","segments/ViewChannels.tsx","assets/icons/index.js","components/SendNotifications.tsx","components/AddDelegateModal.js","components/RemoveDelegateModal.js","components/ActivateChannelModal.js","redux/slices/adminSlice.js","components/ChannelSettingsDropdown.tsx","components/ChannelSettings.jsx","components/ChannelDetails.js","segments/ChannelOwnerDashboard.js","segments/ChannelCreationDashboard.js","singletons/UsersDataStore.js","redux/slices/contractSlice.js","pages/Home.js","components/BlockiesIdenticon.js","components/Profile.tsx","components/Bell.js","segments/Header.tsx","App.tsx","redux/store.js","index.js","components/CreateChannel.js","../../contracts/src/addresses.js","../../contracts/src/index.js","assets/searchicon.svg","components/blockies.js","components/SharedStyling.js"],"names":["CryptoJS","require","CryptoHelper","encryptWithAES","message","key","AES","encrypt","toString","decryptWithAES","decrypt","enc","Utf8","encryptWithECIES","publicKey","a","compressedKey","EthCrypto","compress","this","encryptWithPublicKey","encryptedSecret","decryptWithECIES","privateKey","decryptWithPrivateKey","pubKeyUint8Array","Uint8Array","from","Buffer","convertedKeyAsUint8Array","publicKeyConvert","convertedPublicKeyHex","pubKey","then","encryptedBuffers","cipher","iv","ephemPublicKey","ciphertext","mac","input","keyConvert","concat","buf","encrypted","length","keyConvertBuffer","uncompressedKey","twoStripped","substring","encryptedBuffer","decryptedBuffer","encryptionDecryptionPublicToPrivateTest","startTime","Date","console","log","publicKeyByPrivateKey","msg","encryptionTime","getTime","decryptMsg","decryptionTime","outputMsgPayload","secret","subject","calltoaction","imageurl","pkey","secretEncrypted","asubE","amsgE","actaE","aimgE","makeid","result","toISOString","characters","charactersLength","i","charAt","Math","floor","random","Boolean","window","location","hostname","match","config","RPC_URLS","3","process","REACT_APP_RPC_URL_3","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","ledger","LedgerConnector","chainId","url","portis","TrezorConnector","manifestEmail","manifestAppUrl","PortisConnector","dAppId","networks","dotenv","etherscanToken","EPNSCoreHelper","getOwnerInfo","contract","Promise","resolve","reject","governance","response","catch","err","getUserInfo","user","users","mappings","addr","getChannelAddressFromID","channelID","channelById","getChannelInfo","channel","channels","getChannelEvent","startBlock","updateBlock","filter","filters","AddChannel","block","UpdateChannel","queryFilter","filteredResponse","forEach","item","args","ethers","utils","toUtf8String","identity","getJsonFileFromIdentity","ids","split","fetch","json","getChannelJsonFromChannelAddress","channelStartBlock","toNumber","channelUpdateBlock","getChannelJsonFromUserAddress","getTotalNumberOfChannels","channelsCount","getChannelsMetaLatestToOldest","atIndex","numChannels","channelsInfo","channelArrays","assignedChannelID","push","promises","map","all","getTotalNumberOfUsers","usersCount","getPublicKey","address","getSubscribedStatus","isUserSubscribed","getTotalSubscribedChannels","subscribedCount","getFairShareOfUserAtBlock","userActivated","calcAllChannelsRatio","getPoolFunds","poolFunds","formatBigNumberToMetric","bignumber","convertToCurrency","div","metricFormatter","e","num","digits","si","value","symbol","toFixed","replace","NotificationWrapper","styled","Toaster","NotificationToast","notification","clearToast","LoaderToast","color","notificationTitle","notificationBody","toast","dark","onClick","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","AliasVerificationModal","onClose","onSuccess","verificationStatus","useWeb3React","account","active","error","library","signer","getSigner","modalRef","useRef","polygonCommsContract","Contract","addresses","epnsPolyComm","abis","epnsComm","useState","mainAdress","setMainAddress","loading","setLoading","useClickAway","Overlay","AliasModal","ref","align","textTransform","spacing","weight","bg","padding","CustomInput","required","placeholder","radius","border","onChange","target","margin","flex","self","disabled","verifyChannelAlias","tx","setTimeout","type","height","width","StyledInput","cursor","size","Input","Container","ChannelTitleLink","AppLink","AppLinkText","ChannelInfo","ChannelTitle","ViewInfoItem","href","rel","ContainerInfo","InfoBox","Info","React","controlAt","initialState","page","notifications","finishedFetching","contractSlice","createSlice","name","reducers","resetState","state","addPaginatedNotifications","action","payload","incrementPage","addNewNotification","setFinishedFetching","actions","Notice","span","props","theme","css","DisplayNotice","title","useEffect","animationIn","animationOut","durationOut","EmptyWrapper","Items","Feedbox","dispatch","useDispatch","useSelector","contracts","epnsCommReadProvider","loadNotifications","api","fetchNotifications","count","results","parsedResponse","parseApiResponse","handlePagination","id","oneNotification","index","cta","app","icon","image","Number","showWayPoint","onEnter","BASE_URL","postReq","path","obj","axios","post","headers","Device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","ChannelEvents","ChannelsDataStore","channelsMeta","channelsJson","subscribers","callbacks","epnsReadProvider","init","resetChannelsListeners","initChannelsListenersAsync","getChannelsCountAsync","removeAllListeners","listenForAddChannelAnyAsync","listenForAddChannelSelfAsync","listenForUpdateChannelAnyAsync","listenForUpdateChannelSelfAsync","listenForSubscribeAnyAsync","listenForSubscribeSelfAsync","listenForUnsubscribeAnyAsync","listenForUnsubscribeSelfAsync","on","ipfs","incrementChannelsCountAsync","Object","entries","callback","Subscribe","Unsubscribe","addCallbacks","callbackType","callbackID","removeCallbacks","incrementCount","getChannelsMetaAsync","startIndex","pageCount","stopIndex","channelIDs","getChannelMetaAsync","channelMetaData","channelAddress","getChannelMetaViaAddressAsync","getChannelSubscribers","cachedSubscribers","op","subs","data","getChannelJsonAsync","instance","CHANNNEL_DEACTIVATED_STATE","CHANNEL_BLOCKED_STATE","CHANNEL_ACTIVE_STATE","CHANNEL_BLACKLIST","channelsCache","setChannelMeta","cacheChannelInfo","meta","SkeletonWrapper","atW","atH","borderRadius","marginBottom","marginRight","ChannelLogo","ChannelLogoOuter","ChannelLogoInner","ChannelLogoImg","img","VerifiedBy","VerifierIcon","VerifierName","ChannelDesc","ChannelDescLabel","label","ChannelMeta","ChannelMetaBox","Subscribers","SubscribersCount","LineBreak","ChannelActions","ChannelActionButton","button","ActionTitle","hideit","ActionLoader","SkeletonButton","SubscribeButton","UnsubscribeButton","OwnerButton","ToasterMsg","ViewChannelItem","channelObjectProp","epnsWriteProvider","pushAdminAddress","ZERO_ADDRESS","canVerify","admin","isOwner","channelObject","setChannelObject","channelJson","setChannelJson","subscribed","setSubscribed","memberCount","setMemberCount","isPushAdmin","setIsPushAdmin","isVerified","setIsVerified","isBlocked","setIsBlocked","vLoading","setvLoading","bLoading","setBLoading","txInProgress","setTxInProgress","canUnverify","setCanUnverify","verifierDetails","setVerifierDetails","isChannelBlacklisted","includes","showToast","verifiedBy","fetchChannelJson","alert","channelState","EPNS_DOMAIN","verifyingContract","channelSubscribers","find","sub","toLowerCase","subscribe","subscribeAction","notificationToast","toaster","subscriber","_signTypedData","signature","txToast","contractAddress","res","update","render","TYPE","SUCCESS","ERROR","unsubscribeAction","unsubscriber","finally","src","style","display","marginLeft","info","blockChannel","INFO","verifyChannel","unverifyChannel","wait","Header","InputWrapper","SearchBar","CenteredContainerInfo","CenterContainer","SearchIconImage","ViewChannels","moreLoading","setMoreLoading","search","setSearch","channelToShow","setChannelToShow","loadingChannel","setLoadingChannel","trialCount","setTrialCount","channelsVisited","fetchInitialsChannelMeta","updateCurrentPage","loadMoreChannelMeta","newPageNumber","startingPoint","moreChannels","searchForChannel","query","t","timeout","clearTimeout","minHeight","className","searchIcon","alt","CloseIcon","xmlns","viewBox","data-name","transform","x2","fill","stroke","stroke-linecap","stroke-width","y2","NFTypes","LIMITER_KEYS","DropdownStyledParent","MultiRecipientsContainer","ModifiedContent","Content","DropdownHeader","DropdownStyled","Dropdown","DropdownStyledWhite","DropdownStyledParentWhite","CustomDropdownItem","SendNotifications","epnsCommWriteProvider","channelDetails","delegatees","nfProcessing","setNFProcessing","setChannelAddress","nfRecipient","setNFRecipient","multipleRecipients","setMultipleRecipients","tempRecipeint","setTempRecipient","nfType","setNFType","nfSub","setNFSub","nfSubEnabled","setNFSubEnabled","nfMsg","setNFMsg","nfCTA","setNFCTA","nfCTAEnabled","setNFCTAEnabled","nfMedia","setNFMedia","nfMediaEnabled","setNFMediaEnabled","nfInfo","setNFInfo","delegateeOptions","setDelegateeOptions","isChannelDeactivated","cannotDisplayDelegatees","oneDelegatee","bodyValidated","validated","handleSendMessage","preventDefault","communicatorContract","nsub","nmsg","asub","amsg","acta","aimg","k","publickey","storagePointer","isEmpty","jsonPayload","body","JSON","stringify","at","add","identityBytes","toUtf8Bytes","anotherSendTxPromise","sendNotification","field","trim","direction","justify","onSubmit","minWidth","options","option","d","Switch","checked","right","top","pos","z","oneRecipient","recipientAddress","filteredRecipients","rec","removeRecipient","onKeyPress","oldRecipients","Array","Set","text","borderBottom","rows","autocomplete","AddDelegateModal","addDelegate","RemoveDelegateModal","removeDelegate","ActivateChannelModal","activateChannel","setChannelStakeFees","channelStakeFees","popupRef","PopupOverlay","PopupSlider","Slider","defaultValue","onChangeCommitted","_","aria-labelledby","valueLabelDisplay","step","marks","min","max","setUserChannelDetails","setCanVerify","setDelegatees","DropdownWrapper","ActiveChannelWrapper","inactive","DeactivateButton","ChannelSettings","onCoreNetwork","ALLOWED_CORE_NETWORK","showActivateChannelPopup","setShowActivateChannelPopup","poolContrib","setPoolContrib","addDelegateLoading","setAddDelegateLoading","addModalOpen","setAddModalOpen","removeDelegateLoading","setRemoveDelegateLoading","removeModalOpen","setRemoveModalOpen","isChannelBlocked","channelInactive","poolContribution","daiContract","dai","erc20","fees","parseUnits","sendTransactionPromise","approve","epnscore","waitForTransaction","hash","reactivateChannel","deactivateChannel","amountToBeConverted","parseInt","pushValue","quote","PUSH","price","pow","walletAddress","setActive","SettingsWrapper","ChannelSettingsDropdown","Settings","ChannelDetails","verifyingChannel","setVerifyingChannel","creationDate","setCreationDate","channelIsActive","channelIsDeactivated","bn","getBlock","date","moment","timestamp","format","ChannelDetailsWrapper","SectionTop","ImageSection","Details","ChannelName","VerifyImage","ChanneStateText","SectionDes","SectionDate","Verified","VerifyingIcon","VerifyingName","ChannelOwnerDashboard","CreateChannel","ChannelCreationDashboard","UsersDataStore","userMeta","ownerMeta","resetUsersListeners","initUsersListenersAsync","getOwnerMetaAsync","getUsersCountAsync","getUserMetaAsync","listenForSubscribedAsync","listenForUnsubscribedAsync","publicKeyRegistered","listenForPublicKeyBroadcastAsync","incrementUsersCountAsync","setCoreReadProvider","setCoreWriteProvider","setCommunicatorReadProvider","setCommunicatorWriteProvider","setPushAdmin","Controls","ControlButton","ControlImage","ControlText","ControlChannelContainer","ControlChannelImage","ControlChannelText","Interface","Home","ReactGA","pageview","setControlAt","modalOpen","setModalOpen","adminStatusLoaded","setAdminStatusLoaded","aliasEthAccount","setAliasEthAccount","aliasVerified","setAliasVerified","channelAdmin","setChannelAdmin","coreProvider","getDefaultProvider","etherscan","aliasAddress","ethAddress","status","coreContractInstance","commAddress","epnsEthComm","commContractInstance","coreSignerInstance","communicatorSignerInstance","userClickedAt","pushChannelAdmin","checkUserForChannelOwnership","event","cb","eventChannelAddress","eventUserAddress","identityHex","userAddress","hex2ascii","toLocaleLowerCase","ipfsId","ipfsNotification","toastMessage","notificationObject","listenFornewNotifications","fetchDelegators","controlIndex","delegateAddress","delegators","channelOwners","channelInformationPromise","channelInformation","ownerAccount","getChannelVerfication","BlockiesIdenticon","seed","opts","bgcolor","scale","spotcolor","draw","prevProps","blockies","canvas","createElement","Component","Blocky","BlockyInner","Wallet","Profile","setAddress","ens","setENS","ensFetched","setENSFetched","lookupAddress","tadaaa","keyframes","BellImage","ringme","BellImageAbs","Badge","Bell","badgeCount","bellPressedCB","badge","setBadge","ring","setRing","setResetRinger","HeaderContainer","Section","Logo","PrimaryTheme","ThirdTheme","Connection","phase","context","deactivate","showLoginControls","setShowLoginControls","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","getErrorMessage","web3Connectors","Injected","logo","WalletConnect","Ledger","Portis","App","connector","activate","activatingConnector","setActivatingConnector","triedEager","tried","setTried","isAuthorized","useEagerConnect","suppress","ethereum","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","initialize","ParentContainer","HomeContainer","ProviderLogo","srcSet","maxWidth","keys","currentConnector","ProviderButton","ProviderImage","newestOnTop","rtl","pauseOnFocusLoss","header","ToastContainer","attrs","rootReducer","combineReducers","contractReducer","channelReducer","adminReducer","notificationReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","ApolloProvider","getLibrary","provider","gottenProvider","providers","Web3Provider","oldNetwork","reload","document","getElementById","navigator","serviceWorker","ready","registration","unregister","ALIAS_CHAINS","Step","activeBG","Line","h1","textarea","processing","setProcessing","processingInfo","setProcessingInfo","uploadDone","setUploadDone","stakeFeesChoosen","setStakeFeesChoosen","channelInfoDone","setChannelInfoDone","chainDetails","setChainDetails","channelName","setChannelName","channelAlias","setChannelAlias","channelInfo","setChannelInfo","channelURL","setChannelURL","channelFile","setChannelFile","stepFlow","setStepFlow","handleLogoSizeLimitation","base64","sizeOf","base64Data","pop","dimensions","success","handleCreateChannel","chainDetailsSplit","blockchain","chain_id","da","ca","createChannelWithFees","onChangeStatus","file","files","allFiles","f","reader","FileReader","readAsDataURL","onloadend","onDrop","maxFiles","multiple","accept","maxlength","classNamePrefix","colors","primary25","primary","selectedOption","paddingLeft","ceaErc20","aDai","staking","yieldFarmPUSH","yieldFarmLP","epnsToken","epnsLPToken","rockstar","batchMintNFT","NFTRewards","distributor","erc20Abi","ownable","ownableAbi","epnscoreAbi","epnsCommAbi","daiAbi","epnsTokenAbi","stakingAbi","yieldFarming","yieldFarmingAbi","rockstarAbi","erc721","ec721Abi","MerkleDistributorAbi","module","exports","randseed","rand","createColor","buildOpts","newOpts","charCodeAt","seedrand","renderIcon","imageData","dataWidth","ceil","mirrorWidth","y","row","x","r","slice","reverse","createImageData","sqrt","cc","getContext","fillStyle","fillRect","col","create","section","gradient","overflow","ItemBreak","Item","wrap","textAlign","filterHover","hover","tabletAlign","tabletTextAlign","ItemH","H2","bottom","arcRGB","h2","family","H3","h3","P","p","Span","left","B","Anchor","ul","li","hoverBG","A","Button","FormSubmision","opacity","tabletRight","tabletLeft","tabletTop","tabletBottom","tabletTransform","tabletOpacity","form","outline","hand","TextField"],"mappings":"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","file":"static/js/main.d5a7f2ff.chunk.js","sourcesContent":["import EthCrypto from 'eth-crypto';\nimport {encrypt, decrypt} from 'eccrypto';\nimport { publicKeyConvert, publicKeyVerify } from 'secp256k1-v4';\n\nvar CryptoJS = require(\"crypto-js\");\n\nconst CryptoHelper = {\n  // To Encrypt with AES\n  encryptWithAES: function(message, key) {\n    return CryptoJS.AES.encrypt(message, key).toString();\n  },\n  // To Decrypt with AES\n  decryptWithAES: function(message, key) {\n    let bytes  = CryptoJS.AES.decrypt(message, key);\n    return bytes.toString(CryptoJS.enc.Utf8);\n  },\n  // To Form Encryted Secret, no more than 15 characters supported\n  encryptWithECIES: async function(message, publicKey) {\n    const compressedKey = EthCrypto.publicKey.compress(publicKey);\n\n    const encryptedSecret = await this.encryptWithPublicKey(message, compressedKey);\n\n    // Not using it since sqlite2 has some error with this\n    // const compressedEncryptedSecret = EthCrypto.hex.compress(encryptedSecret);\n\n    return encryptedSecret;\n  },\n  // To Form Decrypted Secret, no more than 15 characters supported\n  decryptWithECIES: async function(message, privateKey) {\n    // Message is always compressed, not using because sqlite2 has some error with this\n    //const uncompressedMessage = EthCrypto.hex.decompress(message).substr(2); // to remove 0x\n\n    return await this.decryptWithPrivateKey(message, privateKey);\n  },\n  // Encryption with public key\n  encryptWithPublicKey: async function(message, publicKey) {\n    // Convert compressed public key, starts with 03 or 04\n    const pubKeyUint8Array = Uint8Array.from(\n      new Buffer(publicKey, 'hex')\n    );\n    //console.log(\"[ENCRYPTION] Public Key Uint8Array: \" + pubKeyUint8Array);\n\n    const convertedKeyAsUint8Array = publicKeyConvert(pubKeyUint8Array, false);\n    //console.log(\"[ENCRYPTION] Public Key Converted: \" + convertedKeyAsUint8Array);\n\n    const convertedPublicKeyHex = new Buffer(convertedKeyAsUint8Array);\n    //console.log(\"[ENCRYPTION] Converted Public Key Buffer: \" + convertedPublicKeyHex);\n\n    const pubKey = new Buffer(convertedPublicKeyHex, 'hex');\n    //console.log(\"[ENCRYPTION] pubkey getting sentout for encrypt: \" + pubKey);\n\n    return encrypt(\n        pubKey,\n        Buffer(message)\n    ).then(encryptedBuffers => {\n      const cipher = {\n          iv: encryptedBuffers.iv.toString('hex'),\n          ephemPublicKey: encryptedBuffers.ephemPublicKey.toString('hex'),\n          ciphertext: encryptedBuffers.ciphertext.toString('hex'),\n          mac: encryptedBuffers.mac.toString('hex')\n      };\n      // use compressed key because it's smaller\n      // const compressedKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(cipher.ephemPublicKey), true)).toString('hex')\n      const input = Uint8Array.from(\n        new Buffer(cipher.ephemPublicKey, 'hex')\n      );\n      const keyConvert = publicKeyConvert(input, true)\n      // console.log(\"[ENCRYPTION] Coverted key: \" + keyConvert);\n\n      const keyConvertBuffer = new Buffer(keyConvert);\n      // console.log(\"[ENCRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\n      // console.log(keyConvertBuffer);\n\n      //console.log(keyConvert);\n      const compressedKey = keyConvertBuffer.toString('hex')\n      // console.log(\"[ENCRYPTION] Compressed key in buffer : \");\n      // console.log(compressedKey);\n\n      const ret = Buffer.concat([\n        new Buffer(cipher.iv, 'hex'), // 16bit\n        new Buffer(compressedKey, 'hex'), // 33bit\n        new Buffer(cipher.mac, 'hex'), // 32bit\n        new Buffer(cipher.ciphertext, 'hex') // var bit\n      ]).toString('hex')\n\n      return ret\n    });\n  },\n  // Decryption with public key\n  decryptWithPrivateKey: async function(message, privateKey) {\n    let encrypted = message;\n    const buf = new Buffer(encrypted, 'hex');\n    // console.log(\"[DECRYPTION] Buffer Passed: \" + buf);\n\n    encrypted = {\n      iv: buf.toString('hex', 0, 16),\n      ephemPublicKey: buf.toString('hex', 16, 49),\n      mac: buf.toString('hex', 49, 81),\n      ciphertext: buf.toString('hex', 81, buf.length)\n    };\n    // decompress publicKey\n    // encrypted.ephemPublicKey = new Buffer.from(publicKeyConvert(Web3Helper.getUint8ArrayFromHexStr(encrypted.ephemPublicKey), true)).toString('hex')\n    const input = Uint8Array.from(new Buffer(encrypted.ephemPublicKey, 'hex'));\n    const keyConvert = publicKeyConvert(input, false)\n    // console.log(\"[DECRYPTION] Coverted key: \" + keyConvert);\n\n    const keyConvertBuffer = new Buffer(keyConvert);\n    // console.log(\"[DECRYPTION] Coverted key in buffer : \" + keyConvertBuffer);\n    // console.log(keyConvertBuffer);\n\n    //console.log(keyConvert);\n    const uncompressedKey = keyConvertBuffer.toString('hex')\n    // console.log(\"[DECRYPTION] Uncompressed key in buffer : \");\n    // console.log(uncompressedKey);\n\n    encrypted.ephemPublicKey = uncompressedKey;\n    const twoStripped = privateKey.substring(2)\n\n    const encryptedBuffer = {\n      iv: new Buffer(encrypted.iv, 'hex'),\n      ephemPublicKey: new Buffer(encrypted.ephemPublicKey, 'hex'),\n      ciphertext: new Buffer(encrypted.ciphertext, 'hex'),\n      mac: new Buffer(encrypted.mac, 'hex')\n    };\n\n    return decrypt(\n      new Buffer(twoStripped, 'hex'),\n      encryptedBuffer\n    ).then(decryptedBuffer => decryptedBuffer.toString());\n  },\n  // Testing of Encryption and Decryption from Public to Private key\n  encryptionDecryptionPublicToPrivateTest: async function(privateKey) {\n    const startTime = new Date();\n    console.log(\"[ENCRYPTION / DECRYPTION TEST STARTED] - \" + startTime);\n\n    const publicKey = EthCrypto.publicKeyByPrivateKey(privateKey);\n    const compressedKey = EthCrypto.publicKey.compress(publicKey); // is String\n    //console.log(compressedKey);\n\n    // const bytesCompKey = Uint8Array.from(compressedKey);\n    //console.log(bytesCompKey);\n\n    const msgToEncrypt = \"PartialStringAS\";\n    const msg = await this.encryptWithPublicKey(msgToEncrypt, compressedKey);\n    console.log(\"Encryped Message With compressed public key:\" + msg);\n\n    const encryptionTime = new Date().getTime() - startTime.getTime();\n    console.log(\"[ENCRYPTION / DECRYPTION ENCRYPTION DONE] - \" + encryptionTime / 1000 + \" secs\");\n\n    // Decrypt this message\n    const decryptMsg = await this.decryptWithPrivateKey(msg, privateKey);\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTED MESSAGE] - '\" + decryptMsg + \"'\");\n\n    const decryptionTime = new Date().getTime() - startTime.getTime() - encryptionTime;\n    console.log(\"[ENCRYPTION / DECRYPTION DECRYPTION DONE] - \" + decryptionTime / 1000 + \" secs\");\n  },\n  // To output messge payload if required\n  outputMsgPayload: async function(secret, subject, message, calltoaction, imageurl, pkey) {\n    // Output AES\n    console.log(\"[AES ENCRYTED FORMAT (\" + new Date() + \")\");\n    console.log(\"---------------------\");\n    console.log(\"secret --> \");\n    const secretEncrypted = await this.encryptWithECIES(secret, pkey);\n    const asubE = this.encryptWithAES(subject, secret);\n    const amsgE = this.encryptWithAES(message, secret);\n    const actaE = this.encryptWithAES(calltoaction, secret);\n    const aimgE = this.encryptWithAES(imageurl, secret);\n\n    console.log(secretEncrypted);\n    console.log(\"asub --> \");\n    console.log(asubE);\n    console.log(\"amsg --> \");\n    console.log(amsgE);\n    console.log(\"acta --> \");\n    console.log(actaE);\n    console.log(\"aimg --> \");\n    console.log(aimgE);\n    console.log(\"decrypted secret --> \");\n    console.log(await this.decryptWithECIES(secretEncrypted, pkey));\n    console.log(\"decrypted asub --> \");\n    console.log(this.decryptWithAES(asubE, secret));\n    console.log(\"decrypted amsg --> \");\n    console.log(this.decryptWithAES(amsgE, secret));\n    console.log(\"decrypted acta --> \");\n    console.log(this.decryptWithAES(actaE, secret));\n    console.log(\"decrypted aimg --> \");\n    console.log(this.decryptWithAES(aimgE, secret));\n  },\n  makeid: function (length) {\n     var result           = '[' + new Date().toISOString() + '] ';\n     var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n     var charactersLength = characters.length;\n     for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n     }\n     return result;\n  }\n};\n\nexport default CryptoHelper;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { PortisConnector } from '@web3-react/portis-connector'\n// import { NetworkConnector } from '@web3-react/network-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { LedgerConnector } from '@web3-react/ledger-connector'\nimport { TrezorConnector } from '@web3-react/trezor-connector'\n// import { FrameConnector } from '@web3-react/frame-connector'\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\n// import { FortmaticConnector } from '@web3-react/fortmatic-connector'\n// import { SquarelinkConnector } from '@web3-react/squarelink-connector'\n// import { TorusConnector } from '@web3-react/torus-connector'\n\nrequire('dotenv').config();\nconst SUPPORTED_CHAIN_IDS = [\n  1 ,//for ropsten\n  137, //for mumbai\n];\nconst POLLING_INTERVAL = 12000\nconst RPC_URLS: { [chainId: number]: string } = {\n  3: process.env.REACT_APP_RPC_URL_3 as string\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: SUPPORTED_CHAIN_IDS })\n\n// export const network = new NetworkConnector({\n//   urls: { 3: RPC_URLS[3] },\n//   defaultChainId: 3,\n//   pollingInterval: POLLING_INTERVAL\n// })\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { 3: RPC_URLS[3] },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL\n})\n//\n// export const walletlink = new WalletLinkConnector({\n//   url: RPC_URLS[1],\n//   appName: 'web3-react example'\n// })\n//\nexport const ledger = new LedgerConnector({ chainId: 3, url: RPC_URLS[3], pollingInterval: POLLING_INTERVAL })\n\nexport const trezor = new TrezorConnector({\n  chainId: 3,\n  url: RPC_URLS[3],\n  pollingInterval: POLLING_INTERVAL,\n  manifestEmail: 'support@epns.io',\n  manifestAppUrl: 'https://staging-app.epns.io'\n})\n\n//\n// export const frame = new FrameConnector({ supportedChainIds: [1] })\n//\n// export const authereum = new AuthereumConnector({ chainId: 42 })\n//\n// export const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY as string, chainId: 4 })\n\nexport const portis = new PortisConnector({ dAppId: 'cfefa032-9afd-4833-bfb4-2b0cb7ec3413' as string, networks: [3, 100] })\n\n// export const squarelink = new SquarelinkConnector({\n//   clientId: process.env.SQUARELINK_CLIENT_ID as string,\n//   networks: [1, 100]\n// })\n\n// export const torus = new TorusConnector({ chainId: 1 })\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from './connectors'\n\nrequire('dotenv').config();\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}\n","import dotenv from \"dotenv\";\ndotenv.config();\n\nexport default  {\n    etherscanToken: process.env.REACT_APP_INFURA_API_KEY || \"\"\n}","import React from \"react\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { ethers } from \"ethers\";\n//import { parseEther, bigNumber } from 'ethers/utils'\n\n// FeedDB Helper Function\nconst EPNSCoreHelper = {\n  // To get owner info\n  getOwnerInfo: async (contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.governance()\n        .then(response => {\n          if (enableLogs) console.log(\"getOwnerInfo() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getOwnerInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To get user info\n  getUserInfo: async (user, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(user)\n        .then(response => {\n          const mappings = { ...response };\n          mappings.addr = user;\n\n          if (enableLogs) console.log(\"getUserInfo() --> %o\", mappings);\n          resolve(mappings);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getUserInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel address from it's id\n  getChannelAddressFromID: async (channelID, contract) => {\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.channelById(channelID)\n        .then(response => {\n          // console.log(\"getChannelAddressFromID() --> %o\", response.toString());\n          resolve(response.toString());\n        })\n        .catch(err => { console.log(\"!!!Error, getChannelAddressFromID() --> %o\", err); reject(err); });\n    })\n  },\n  // To retrieve a channel's Info from channel address\n  getChannelInfo: async (channel, contract) => {\n    const enableLogs = 0;\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      contract.channels(channel)\n        .then(response => {\n          // Add an extra field for future info\n          const mappings = { ...response };\n          mappings.addr = channel;\n\n          if (enableLogs) console.log(\"getChannelInfo() --> %o\", mappings);\n          resolve(mappings);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelInfo() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // To retrieve a channel's AddChannel event\n  getChannelEvent: async (channel, startBlock, updateBlock, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n\n      // To get channel ipfs hash from channel info\n      let filter = contract.filters.AddChannel(channel);\n      let block = startBlock;\n      if (startBlock != updateBlock) {\n        filter = contract.filters.UpdateChannel(channel);\n        block = updateBlock;\n      }\n\n      contract.queryFilter(filter, block, block)\n        .then(response => {\n          let filteredResponse;\n\n          if (enableLogs) console.log(\"getChannelEvent() --> Finding: %s in | %o |\", channel, response );\n\n          response.forEach(function (item) {\n            if (item.args.channel.toString() == channel.toString()) {\n              if (enableLogs) console.log(\"getChannelEvent() --> Selected Channel %o: \", item);\n              filteredResponse = ethers.utils.toUtf8String(item.args.identity);\n            }\n          });\n\n          if (enableLogs) console.log(\"getChannelEvent() --> Filtered Channel: %o\", filteredResponse);\n          resolve(filteredResponse);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelEvent() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Retrive IPFS File from ipfshash\n  getJsonFileFromIdentity: async(identity, channel) => {\n    const enableLogs = 0;\n\n\n    return new Promise ((resolve, reject) => {\n      // Split Channel Identity, delimeter of identity is \"+\"\n      if(!identity){\n        reject(\"There is no identity file for channel:\",channel);\n      }\n      const ids = identity?.split(\"+\") || []; // First segment is storage type, second is the pointer to it\n\n      if (ids[0] == 1) {\n        // IPFS HASH\n        // Form Gateway URL\n        const url = \"https://ipfs.io/ipfs/\" + ids[1];\n        fetch(url)\n          .then(response => response.json())\n          .then(response => {\n            if (enableLogs) console.log(\"getJsonFileFromIdentity() --> %o\", response);\n            resolve(response);\n          })\n          .catch(err => {\n            console.log(\"!!!Error, getJsonFileFromIdentity() --> %o\", err);\n            reject(err);\n          });\n      }\n\n    });\n  },\n  // Helper to get Channel from Channel's address\n  getChannelJsonFromChannelAddress: async (channel, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      EPNSCoreHelper.getChannelInfo(channel, contract)\n        .then(response => EPNSCoreHelper.getChannelEvent(channel, response.channelStartBlock.toNumber(), response.channelUpdateBlock.toNumber(), contract))\n        .then(response => EPNSCoreHelper.getJsonFileFromIdentity(response, channel))\n        .then(response => {\n          if (enableLogs) console.log(\"getChannelJsonFromChannelAddress() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelJsonFromChannelAddress() --> %o\", err);\n          reject(err);\n        });\n    });\n  },\n  // Helper to get Channel from User's address\n  getChannelJsonFromUserAddress: async (user, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel info from a channel address\n      // EPNSCoreHelper.getUserInfo(user, contract)\n      //   .then(response => EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract))\n        EPNSCoreHelper.getChannelJsonFromChannelAddress(user, contract)\n        .then(response => {\n          if (enableLogs) console.log(\"getChannelJsonFromUserAddress() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelJsonFromUserAddress() --> %o\", err);\n          reject(err);\n        });\n    });\n  },\n  // Get Total Number of Channels\n  getTotalNumberOfChannels: async (contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.channelsCount()\n        .then(response => {\n          if (enableLogs) console.log(\"getTotalNumberOfChannels() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getTotalNumberOfChannels() --> %o\", err);\n          // reject(err);\n          resolve(0)\n        });\n    })\n  },\n  // Get channels address given number of channels, , atIndex: -1 is start from latest, numChannels: -1 is return all\n  getChannelsMetaLatestToOldest: async (atIndex, numChannels, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      EPNSCoreHelper.getTotalNumberOfChannels(contract)\n        .then(async (response) => {\n          let channelsInfo = [];\n          const channelsCount = response;\n\n          if (atIndex > channelsCount || atIndex == -1) {\n            atIndex = channelsCount - 1;\n          }\n\n          if (numChannels == -1) {\n            numChannels = channelsCount;\n          }\n\n          // Get channels\n          let channelArrays = [];\n\n          // prefil and then refil\n          let count = 0;\n          for (let i = numChannels - 1; i >= 0; i--) {\n            const assignedChannelID = atIndex - i;\n            channelArrays.push(assignedChannelID);\n          }\n\n          const promises = channelArrays.map(async (channelID) => {\n            await EPNSCoreHelper.getChannelAddressFromID(channelID, contract)\n              .then(response => EPNSCoreHelper.getChannelInfo(response, contract))\n              .then(response => {\n                if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(%d, %d) --> %o\", channelID, numChannels, channelsInfo);\n                channelsInfo = [response, ...channelsInfo];\n              })\n              .catch(err => console.log(\"Error in channel: %d | skipping...\", channelID))\n          });\n\n          // wait until all promises are resolved\n          await Promise.all(promises);\n\n          if (enableLogs) console.log(\"getChannelsMetaLatestToOldest(Index: %d, Number: %d) --> %o\", atIndex, numChannels, channelsInfo);\n          resolve(channelsInfo);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getChannelsMetaLatestToOldest() --> %o\", err);\n          reject(err);\n        })\n    });\n  },\n  // Get Total Number of Users\n  getTotalNumberOfUsers: async (contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.usersCount()\n        .then(response => {\n          console.log(\"getTotalNumberOfUsers() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => { console.log(\"!!!Error, getTotalNumberOfUsers() --> %o\", err); reject(err); });\n    })\n  },\n  // To retrieve public key of a user\n  getPublicKey: async (address, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // To get channel ipfs hash from channel info\n      let filteredResponse;\n      contract.queryFilter('PublicKeyRegistered')\n        .then(response => {\n\n          response.forEach(function (item) {\n            if (item.args[0] == address) {\n              filteredResponse = item;\n            }\n          });\n\n          if (enableLogs) console.log(\"Public Key Registry Response: \" + response);\n          if (enableLogs) console.log(\"Public Key Registry Filtered: \" + filteredResponse);\n\n          if (!filteredResponse || filteredResponse.length == 0) {\n            resolve(null)\n          }\n          else {\n            resolve(filteredResponse.args[1]);\n          }\n\n        })\n        .catch((err) => {\n          console.log(err);\n          reject(err);\n        });\n    })\n  },\n  // Get Total Subsbribed Channels\n  getSubscribedStatus: async (user, channel, contract) => {\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.isUserSubscribed(channel, user)\n        .then(response => {\n          // console.log(\"getSubscribedStatus() --> %o\", {response, user, channel});\n          resolve(response);\n        })\n        .catch(err => { console.log(\"!!!Error, getSubscribedStatus() --> %o\", err); reject(err); });\n    })\n  },\n  // Get Total Subsbribed Channels\n  getTotalSubscribedChannels: async (user, contract) => {\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users[user].subscribedCount()\n        .then(response => {\n          console.log(\"getTotalSubscribedChannels() --> %o\", response.toNumber());\n          resolve(response.toNumber());\n        })\n        .catch(err => { console.log(\"!!!Error, getTotalSubscribedChannels() --> %o\", err); reject(err); });\n    })\n  },\n  // Get Fair Share\n  getFairShareOfUserAtBlock: async(user, block, contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      // Get User Info from EPNS Core\n      contract.users(user)\n        .then((response) => {\n          if (response.userActivated) {\n            contract.calcAllChannelsRatio(user, block)\n              .then(response => {\n                if (enableLogs) console.log(\"calcAllChannelsRatio() --> %o\", response);\n                resolve(response);\n              })\n              .catch(err => {\n                console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\n                reject(err);\n              });\n          }\n          else {\n            if (enableLogs) console.log(\"!!!Warning, calcAllChannelsRatio() --> User not activated\");\n            reject(\"User not activated\");\n          }\n        })\n        .catch(err => {\n          console.log(\"!!!Error, calcAllChannelsRatio() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Get Pool Funds\n  getPoolFunds: async(contract) => {\n    const enableLogs = 0;\n\n    return new Promise ((resolve, reject) => {\n      contract.poolFunds()\n        .then(response => {\n          if (enableLogs) console.log(\"getPoolFunds() --> %o\", response);\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"!!!Error, getPoolFunds() --> %o\", err);\n          reject(err);\n        });\n    })\n  },\n  // Helper Functions\n  // To format Big Number\n  formatBigNumberToMetric: (bignumber, convertToCurrency) => {\n    try {\n      if (convertToCurrency) {\n        bignumber = bignumber.div(100000000000000);\n        bignumber = bignumber.div(10000);\n      }\n      bignumber = bignumber.toNumber();\n      return EPNSCoreHelper.metricFormatter(bignumber, 2);\n    }\n    catch (e) {\n      console.log(e);\n      return \"---\";\n    }\n  },\n  // Metric Formatter, thanks: https://stackoverflow.com/questions/9461621/format-a-number-as-2-5k-if-a-thousand-or-more-otherwise-900\n  metricFormatter: (num, digits) => {\n    var si = [\n      { value: 1, symbol: \"\" },\n      { value: 1E3, symbol: \"k\" },\n      { value: 1E6, symbol: \"M\" },\n      { value: 1E9, symbol: \"G\" },\n      { value: 1E12, symbol: \"T\" },\n      { value: 1E15, symbol: \"P\" },\n      { value: 1E18, symbol: \"E\" }\n    ];\n    var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n    var i;\n    for (i = si.length - 1; i > 0; i--) {\n      if (num >= si[i].value) {\n        break;\n      }\n    }\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n  },\n\n}\n\nexport default EPNSCoreHelper;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport { useWeb3React } from '@web3-react/core'\nimport { addresses, abis } from \"@project/contracts\";\nimport EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\nimport { toast } from 'react-toastify';\nimport moment from 'moment';\n\nfunction NotificationToast({ notification, clearToast }) {\n\n  // toast customize\n  const LoaderToast = ({color }) => (\n      <Toaster>\n      <div>{notification.notificationTitle}</div>\n      <div>{notification.notificationBody}</div>\n      </Toaster>\n  )\n \n  // Render\n  return (\n    <NotificationWrapper>{\n    toast.dark(<LoaderToast onClick={clearToast} color=\"#35c5f3\"/>, {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        })\n    }\n    </NotificationWrapper>\n  );\n}\n\nconst NotificationWrapper = styled.div`\n  display: none;\n`;\n\nconst Toaster = styled.div`\n  align-items: center;\n  margin: 0px 10px;\n`\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`\n\n\n\n// Export Default\nexport default NotificationToast;\n","import React, {useRef, useState} from 'react';\nimport { useClick, useClickAway } from 'react-use';\nimport styled from 'styled-components';\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport Loader from 'react-loader-spinner';\n\nimport {Item, H2, H3, Span, Button, Input} from 'components/SharedStyling';\n\nconst ethers = require('ethers');\n\n\nexport default function AliasVerificationModal({\n    onClose,onSuccess, verificationStatus\n}) {\n    const { active, error, account, library, chainId } = useWeb3React();\n    const signer = library.getSigner(account);\n\n    const modalRef = useRef(null);\n    const polygonCommsContract = new ethers.Contract(addresses.epnsPolyComm, abis.epnsComm, signer);\n    const [mainAdress, setMainAddress] = useState('');\n    const [loading, setLoading] = useState('');\n\n    // Form signer and contract connection\n    useClickAway(modalRef, onClose);\n\n    const submitAlias = () => {\n        setLoading('loading')\n        const anotherSendTxPromise = polygonCommsContract.verifyChannelAlias(mainAdress);\n        anotherSendTxPromise\n        .then(async (tx) => {\n            console.log(tx);\n            setLoading(\"Transaction Sent!\");\n\n            setTimeout(() => {\n                onSuccess();\n                onClose();\n            }, 2000);\n\n            // await tx.wait(1);\n            // setLoading(\"Transaction Mined!\");\n        })\n        .catch(() => {\n            setLoading('There was an error');\n            setTimeout(() => {\n                setLoading('')\n            }, 2000)\n        })\n    };\n    \n\n    return (\n        <Overlay>\n            <AliasModal ref={modalRef}>\n                <Item align=\"flex-start\">\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                    <Span weight=\"200\">Verify </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Alias</Span>\n                    </H2>\n                    {\n                        verificationStatus === null ?\n                        (\n                            <H3>There has been an error in the verification of your alias, Please contact the admin</H3>\n                        ) : (\n                            <H3>Before you can use this channel on this chain, you first need to verify your Alias.</H3>\n                        )\n                    }\n                </Item>\n                {\n                    verificationStatus !== null && (\n                        <>\n                            <Item align=\"flex-start\">\n                                <CustomInput\n                                    required\n                                    placeholder=\"Enter ethereum wallet address of this channel\"\n                                    radius=\"4px\"\n                                    padding=\"12px\"\n                                    border=\"1px solid #674c9f\"\n                                    bg=\"#fff\"\n                                    value={mainAdress}\n                                    onChange={(e) => {setMainAddress(e.target.value)}}\n                                />\n                            </Item>\n                            <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                                <Button\n                                    bg='#e20880'\n                                    color='#fff'\n                                    flex=\"1\"\n                                    radius=\"0px\"\n                                    padding=\"20px 10px\"\n                                    disabled={mainAdress.length !== 42}\n                                    onClick={submitAlias}\n                                >\n                                    { loading && <Loader\n                                        type=\"Oval\"\n                                        color=\"#FFF\"\n                                        height={16}\n                                        width={16}\n                                        />\n                                    }\n                                    <StyledInput\n                                        cursor=\"hand\"\n                                        textTransform=\"uppercase\"\n                                        color=\"#fff\" weight=\"400\"\n                                        size=\"0.8em\" spacing=\"0.2em\"\n                                        value={loading ? loading : \"Verify Alias\"}\n                                    />\n                                </Button>\n                            </Item>\n                        </>\n                    )\n                }\n            </AliasModal>\n        </Overlay>\n    )\n}\n\nconst StyledInput = styled(Input)`\n    width: 100%;\n    text-align: center;\n    caret-color: transparent;\n`\n\nconst CustomInput = styled(Input)`\n    box-sizing: border-box;\n    width: 100%;\n    margin: 20px 0px;\n`;\n\nconst Overlay = styled.div`\n    top: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0,0,0,0.85);\n    height: 100%;\n    width: 100%;\n    z-index: 1000;\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow-y: scroll;\n`;\n\nconst AliasModal = styled.div`\n    padding: 20px 30px;\n    background: white;\n`;","import React from \"react\";\nimport styled, { css } from 'styled-components';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Loader from 'react-loader-spinner';\n\nimport { useWeb3React } from '@web3-react/core';\n\n\n// Other Information URLs\nfunction ViewInfoItem() {\n  // render\n  return (\n    <>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <>\n          <AppLinkText>\n            <AppLink href={`${process.env.REACT_APP_BROWSER_EXTENSION_URL}`} target=\"_blank\" rel=\"nofollow\">\n              Download EPNS Browser Extension\n            </AppLink>\n          </AppLinkText>\n          \n          </>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <>\n          <AppLinkText>\n            <AppLink href={`${process.env.REACT_APP_IOS_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\n              Download EPNS App (iOS)\n            </AppLink>\n          </AppLinkText>\n           For iOS Users\n          </>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <>\n          <AppLinkText>\n            <AppLink href={`${process.env.REACT_APP_ANDROID_STAGING_DAPP_URL}`} target=\"_blank\" rel=\"nofollow\">\n              Download EPNS App (Android)\n            </AppLink>\n          </AppLinkText>\n           For Android Users\n          </>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    <Container >\n      <ChannelInfo>\n        <ChannelTitle>\n          <ChannelTitleLink href= \"#\" target=\"_blank\" rel=\"nofollow\">\n            Click here for our How to Guides\n          </ChannelTitleLink>\n        </ChannelTitle>\n      </ChannelInfo>\n    </Container>\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  // display: flex;\n  // flex-wrap: wrap;\n\n  background: #fff;\n  border-radius: 10px;\n  border: 1px solid rgb(237, 237, 237);\n\n  margin: 15px 0px;\n  justify-content: center;\n  padding: 10px;\n`\n\nconst ChannelTitleLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\nconst AppLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\nconst AppLinkText = styled.div`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n`\nconst ChannelInfo = styled.div`\n  flex: 1;\n  margin: 5px 10px;\n  min-width: 120px;\n  flex-grow: 4;\n  flex-direction: column;\n  display: flex;\n`\n\nconst ChannelTitle = styled.div`\n  margin-bottom: 5px;\n`\n\n// Export Default\nexport default ViewInfoItem;\n","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport Loader from 'react-loader-spinner'\n\nimport { useWeb3React } from '@web3-react/core'\n\nimport ViewInfoItem from \"components/ViewInfoItem\";\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\n// Other Information section\nfunction Info() {\n  const { account, library } = useWeb3React();\n\n  const [controlAt, setControlAt] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n\n  return (\n    <Container>\n      {loading &&\n        <ContainerInfo>\n          <Loader\n           type=\"Oval\"\n           color=\"#35c5f3\"\n           height={40}\n           width={40}\n          />\n        </ContainerInfo>\n      }\n\n      {!loading && controlAt == 0 && \n      <>\n        <InfoBox>\n          <ViewInfoItem/>\n        </InfoBox>\n      </>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n\n  max-height: 80vh;\n`\n\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`\nconst InfoBox = styled.div`\n  padding: 10px 20px;\n  display: block;\n  align-self: stretch;\n  background: #fafafa;\n`\n\n\n// Export Default\nexport default Info;\n","/**\n * This file helps us maintain the notifications fetched in state, so when tabs are switched we can retain the notification information\n */\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    page: 1, //the current page\n    notifications: [],// the actual notifications\n    finishedFetching: false\n}\n\nexport const contractSlice = createSlice({\n    name: \"notifications\",\n    initialState,\n    reducers: {\n        resetState: (state) => {\n            state.page = initialState.page;\n            state.notifications = initialState.notifications;\n            state.finishedFetching = initialState.finishedFetching;\n        },\n        addPaginatedNotifications: (state, action) => {\n            state.notifications = [ ...state.notifications, ...action.payload ];\n            state.page += 1;\n        },\n        incrementPage: (state) => {\n            state.page += 1;\n        },\n        addNewNotification: (state, action) => {\n            state.notifications = [{...action.payload}, ...state.notifications]\n        },\n        setFinishedFetching: (state) => {\n            state.finishedFetching = true;\n        }\n    }\n});\n\nexport const {\n    addPaginatedNotifications,\n    incrementPage,\n    addNewNotification,\n    setFinishedFetching,\n    resetState\n} = contractSlice.actions;\n\nexport default contractSlice.reducer;","import React from \"react\";\nimport styled, { css } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\n// Create Header\nfunction DisplayNotice({ title, theme }) {\n  React.useEffect(() => {\n\n  }, [title, theme]);\n\n  // to create blockies\n\n  return (\n    <Container>\n      <AnimateOnChange\n        animationIn=\"fadeIn\"\n        animationOut=\"fadeOut\"\n        durationOut={200}\n      >\n        <Notice theme={theme}>{title}</Notice>\n      </AnimateOnChange>\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n  font-weight: 400;\n\n  ${props => props.theme === 'primary' && css`\n    background: #e20880;\n  `};\n\n  ${props => props.theme === 'secondary' && css`\n    background: #35c5f3;\n  `};\n\n  ${props => props.theme === 'third' && css`\n    background: #674c9f;\n  `};\n`\n\n// Export Default\nexport default DisplayNotice;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"react-loader-spinner\";\nimport { Waypoint } from \"react-waypoint\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  api,\n  utils,\n  NotificationItem,\n} from \"@epnsproject/frontend-sdk\";\nimport {\n  addPaginatedNotifications,\n  incrementPage,\n  setFinishedFetching,\n  resetState\n} from \"redux/slices/notificationSlice\";\nimport DisplayNotice from \"components/DisplayNotice\";\n\nconst NOTIFICATIONS_PER_PAGE = 10;\n// Create Header\nfunction Feedbox() {\n  const dispatch = useDispatch();\n  const { account } = useWeb3React();\n  const { epnsCommReadProvider } = useSelector((state: any) => state.contracts);\n  const { notifications, page, finishedFetching } = useSelector(\n    (state: any) => state.notifications\n  );\n\n  const [loading, setLoading] = React.useState(false);\n\n  const loadNotifications = async () => {\n    if (loading || finishedFetching) return;\n    setLoading(true);\n    try {\n      const { count, results } = await api.fetchNotifications(\n        account,\n        NOTIFICATIONS_PER_PAGE,\n        page\n      );\n      const parsedResponse = utils.parseApiResponse(results);\n      dispatch(addPaginatedNotifications(parsedResponse));\n      if (count === 0) {\n        dispatch(setFinishedFetching());\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  React.useEffect(() => {\n    if (account) {\n      loadNotifications();\n      return () => {\n        dispatch(resetState());\n      }\n    }\n  }, [account]);\n\n  //function to query more notifications\n  const handlePagination = async () => {\n    loadNotifications();\n    dispatch(incrementPage());\n  };\n\n  const showWayPoint = (index: any) => {\n    return Number(index) === notifications.length - 1 && !finishedFetching;\n  };\n\n  // Render\n  return (\n    <>\n      <Container>\n        {notifications && (\n          <Items id=\"scrollstyle-secondary\">\n            {notifications.map((oneNotification, index) => {\n              const { cta, title, message, app, icon, image } = oneNotification;\n\n              // render the notification item\n              return (\n                <div key={`${message}+${title}`}>\n                  {showWayPoint(index) && (\n                    <Waypoint onEnter={() => handlePagination()} />\n                  )}\n                  <NotificationItem\n                    notificationTitle={title}\n                    notificationBody={message}\n                    cta={cta}\n                    app={app}\n                    icon={icon}\n                    image={image}\n                  />\n                </div>\n              );\n            })}\n          </Items>\n        )}\n        {loading && (\n          <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\n        )}\n        {!loading && !notifications.length && (\n          <EmptyWrapper>\n            <DisplayNotice\n              title=\"You currently have no notifications... you can try subscribing to some more channels\"\n              theme=\"primary\"\n            />\n          </EmptyWrapper>\n        )}\n      </Container>\n    </>\n  );\n}\n\nconst EmptyWrapper = styled.div`\n  padding-top: 50px;\n  padding-bottom: 50px;\n`;\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`;\n// css styles\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n  max-height: 100vh;\n\n  // padding: 20px;\n  // font-size: 16px;\n  // display: flex;\n  // font-weight: 200;\n  // align-content: center;\n  // align-items: center;\n  // justify-content: center;\n  // width: 100%;\n  // min-height: 40vh;\n`;\n\n// Export Default\nexport default Feedbox;\n","import axios from \"axios\";\n\n// const BASE_URL = \"https://backend-staging.epns.io/apis\";\nconst BASE_URL = \"https://backend-prod.epns.io/apis\";\n// const BASE_URL = \"http://localhost:4000/apis\"; //for local push node\n\n/**\n * A function used to make get requests throughout the entire application\n * @param {String} path e.g /feeds/get_feeds, this represents the route of the enpoint to call\n * @returns {Promise}\n */\nexport const getReq = async (path) => {\n    try {\n      const response = await axios.get(BASE_URL + path);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n/**\n * A function used to make post requests to the backend\n * @param {String} path e.g /feeds/get_feeds, this represents the route of the enpoint to call\n * @param {Object} obj \n * @returns {Promise}\n */\nexport const postReq = async (path, obj) => {\n  try {\n    const response = await axios.post(BASE_URL + path, obj, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};\n","const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px'\n}\n\nexport const Device = {\n  mobileS: `(max-width: ${size.mobileS})`,\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobileL})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  laptopL: `(max-width: ${size.laptopL})`,\n  desktop: `(max-width: ${size.desktop})`,\n  desktopL: `(max-width: ${size.desktop})`\n};\n","import EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\nimport { ethers } from \"ethers\";\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { postReq } from \"api\";\n\n// STATIC SINGLETON\nexport const ChannelEvents = {\n  ADD_CHANNEL_ANY: \"AddChannelAny\",\n  ADD_CHANNEL_SELF: \"AddChannelSelf\",\n  UPDATE_CHANNEL_ANY: \"UpdateChannelAny\",\n  UPDATE_CHANNEL_SELF: \"UpdateChannelSelf\",\n  SUBSCRIBER_ANY_CHANNEL: \"SubscriberAnyChannel\",\n  SUBSCRIBER_SELF_CHANNEL: \"SubscriberSelfChannel\",\n  UNSUBSCRIBER_ANY_CHANNEL: \"UnsubscriberAnyChannel\",\n  UNSUBSCRIBER_SELF_CHANNEL: \"UnsubscriberSelfChannel\",\n};\n\nexport default class ChannelsDataStore {\n  static instance = ChannelsDataStore.instance || new ChannelsDataStore();\n\n  state = {\n    channelsCount: -1,\n    channelsMeta: {},\n    channelsJson: {},\n    subscribers: {},\n\n    callbacks: [],\n\n    account: null,\n    epnsReadProvider: null,\n    epnsCommReadProvider: null,\n  };\n\n  // init\n  init = (account, epnsReadProvider, epnsCommReadProvider) => {\n    // set account\n    this.state.account = account;\n\n    // First attach listeners then overwrite the old one if any\n    this.resetChannelsListeners();\n    this.state.epnsReadProvider = epnsReadProvider;\n    this.state.epnsCommReadProvider = epnsCommReadProvider;\n    this.initChannelsListenersAsync();\n\n    // next get store channels count\n    this.getChannelsCountAsync();\n  };\n\n  // RESET LISTENERS\n  resetChannelsListeners = () => {\n    // only proceed if a read provider is attached\n    if (this.state.epnsReadProvider) {\n      this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\n      this.state.epnsReadProvider.removeAllListeners(\"UpdateChannel\");\n      this.state.epnsCommReadProvider.removeAllListeners(\"Subscribe\");\n      this.state.epnsCommReadProvider.removeAllListeners(\"Unsubscribe\");\n    }\n  };\n\n  // init LISTENERS\n  initChannelsListenersAsync = async () => {\n    // Add Listeners\n    await this.listenForAddChannelAnyAsync();\n    await this.listenForAddChannelSelfAsync();\n\n    await this.listenForUpdateChannelAnyAsync();\n    await this.listenForUpdateChannelSelfAsync();\n\n    // use the communicator contract for the below\n    await this.listenForSubscribeAnyAsync();\n    await this.listenForSubscribeSelfAsync();\n    await this.listenForUnsubscribeAnyAsync();\n    await this.listenForUnsubscribeSelfAsync();\n  };\n\n  // 1. Add Any Channel Listeners\n  listenForAddChannelAnyAsync = async () => {\n    const contract = this.state.epnsReadProvider;\n    let filter = contract.filters.AddChannel(null, null);\n\n    contract.on(filter, async (channel, ipfs) => {\n      // Do own stuff\n      await this.incrementChannelsCountAsync(1);\n\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.ADD_CHANNEL_ANY]\n        )) {\n          if (callback) {\n            callback(channel, ipfs);\n          }\n        }\n      }\n    });\n  };\n\n  // 2. Add Self Channel Listener\n  listenForAddChannelSelfAsync = async () => {\n    const contract = this.state.epnsReadProvider;\n    let filter = contract.filters.AddChannel(this.state.account, null);\n\n    contract.on(filter, async (channel, ipfs) => {\n      // Do own stuff\n      // Nothing to do, just do callback\n\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.ADD_CHANNEL_SELF]\n        )) {\n          if (callback) {\n            callback(channel, ipfs);\n          }\n        }\n      }\n    });\n  };\n\n  // 3. Update Any Channel Listener\n  listenForUpdateChannelAnyAsync = async () => {\n    const contract = this.state.epnsReadProvider;\n    let filter = contract.filters.UpdateChannel(null, null);\n\n    contract.on(filter, async (channel, ipfs) => {\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_ANY]\n        )) {\n          if (callback) {\n            callback(channel, ipfs);\n          }\n        }\n      }\n    });\n  };\n\n  // 4. Update Self Channel Listener\n  listenForUpdateChannelSelfAsync = async () => {\n    const contract = this.state.epnsReadProvider;\n    let filter = contract.filters.UpdateChannel(this.state.account, null);\n\n    contract.on(filter, async (channel, ipfs) => {\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.UPDATE_CHANNEL_SELF]\n        )) {\n          if (callback) {\n            callback(channel, ipfs);\n          }\n        }\n      }\n    });\n  };\n\n  // 5. Subscriber Any\n  listenForSubscribeAnyAsync = async () => {\n    const contract = this.state.epnsCommReadProvider;\n    let filter = contract.filters.Subscribe(null, null);\n\n    contract.on(filter, async (channel, user) => {\n      //   // Do own stuff\n      //   if (this.state.channelsMeta[channel]) {\n      //     const channelID = this.state.channelsMeta[channel];\n      //     let count = this.state.channelsMeta[channelID].memberCount.toNumber();\n      //     count = count + 1;\n      //     this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\n      //   }\n\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.SUBSCRIBER_ANY_CHANNEL]\n        )) {\n          if (callback) {\n            callback(channel, user);\n          }\n        }\n      }\n    });\n  };\n\n  // 6. Subscriber Self\n  listenForSubscribeSelfAsync = async () => {\n    const contract = this.state.epnsCommReadProvider;\n    let filter = contract.filters.Subscribe(this.state.account, null);\n\n    contract.on(filter, async (channel, user) => {\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.SUBSCRIBER_SELF_CHANNEL]\n        )) {\n          if (callback) {\n            callback(channel, user);\n          }\n        }\n      }\n    });\n  };\n\n  // 7. Unsubscribe Any\n  listenForUnsubscribeAnyAsync = async () => {\n    const contract = this.state.epnsCommReadProvider;\n    let filter = contract.filters.Unsubscribe(null, null);\n\n    contract.on(filter, async (channel, user) => {\n      // Do own stuff\n      // if (this.state.channelsMeta[channel]) {\n      //   const channelID = this.state.channelsMeta[channel];\n      //   let count = this.state.channelsMeta[channelID].memberCount.toNumber();\n      //   count = count - 1;\n      //   this.state.channelsMeta[channelID].memberCount = bigNumberify(count);\n      // }\n\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.UNSUBSCRIBER_ANY_CHANNEL]\n        )) {\n          if (callback) {\n            callback(channel, user);\n          }\n        }\n      }\n    });\n  };\n\n  // 8. Unsubscribe Self\n  listenForUnsubscribeSelfAsync = async () => {\n    const contract = this.state.epnsCommReadProvider;\n    let filter = contract.filters.Unsubscribe(this.state.account, null);\n\n    contract.on(filter, async (channel, user) => {\n      // then perform callbacks\n      if (this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]) {\n        for (let [callbackID, callback] of Object.entries(\n          this.state.callbacks[ChannelEvents.UNSUBSCRIBER_SELF_CHANNEL]\n        )) {\n          if (callback) {\n            callback(channel, user);\n          }\n        }\n      }\n    });\n  };\n\n  // FOR CALLBACKS\n  addCallbacks = (callbackType, callbackID, callback) => {\n    // first check if callback already exists\n    if (!this.state.callbacks[callbackType]) {\n      this.state.callbacks[callbackType] = {};\n    }\n\n    if (!this.state.callbacks[callbackType][callbackID]) {\n      this.state.callbacks[callbackType][callbackID] = callback;\n    }\n  };\n\n  removeCallbacks = (callbackType, callbackID) => {\n    // first check if callback already exists\n    if (this.state.callbacks[callbackType][callbackID]) {\n      this.state.callbacks[callbackType][callbackID] = null;\n    }\n  };\n\n  // CHANNELS COUNT\n  getChannelsCountAsync = async () => {\n    const enableLogs = 0;\n\n    return new Promise(async (resolve, reject) => {\n      if (this.state.channelsCount == -1) {\n        // Count not set, get and set it first\n        const count = EPNSCoreHelper.getTotalNumberOfChannels(\n          this.state.epnsReadProvider\n        )\n          .then((response) => {\n            this.state.channelsCount = response;\n\n            if (enableLogs)\n              console.log(\"getChannelsCountAsync() --> %o\", response);\n            resolve(this.state.channelsCount);\n          })\n          .catch((err) => {\n            console.log(\"!!!Error, getChannelsCountAsync() --> %o\", err);\n            reject(err);\n          });\n      } else {\n        resolve(this.state.channelsCount);\n      }\n    });\n  };\n\n  incrementChannelsCountAsync = async (incrementCount) => {\n    return new Promise((resolve, reject) => {\n      this.getChannelsCountAsync()\n        .then((response) => {\n          this.state.channelsCount = response + incrementCount;\n          console.log(\n            \"incrementChannelsCountAsync() --> %d\",\n            this.state.channelsCount\n          );\n          resolve(this.state.channelsCount);\n        })\n        .catch((err) => {\n          console.log(\"!!!Error, incrementChannelsCountAsync() --> %o\", err);\n          reject(err);\n        });\n    });\n  };\n\n  // CHANNELS META FUNCTIONS\n  // To get channels meta\n  // get channels meta in a paginated format\n  // by passing in the starting index and the number of items per page\n  getChannelsMetaAsync = async (startIndex, pageCount) => {\n    return new Promise(async (resolve, reject) => {\n      // get total number of channels\n      const channelsCount = await this.getChannelsCountAsync();\n      let stopIndex = startIndex + pageCount;\n\n      // if the stop index is -1 then get all channels\n      if (stopIndex == -1 || stopIndex > channelsCount) {\n        stopIndex = channelsCount;\n      }\n\n      // initialise an array with the values from 0 to the length of the number of channels\n      let channelIDs = [];\n\n      for (let i = startIndex; i < stopIndex; i++) {\n        channelIDs.push(i);\n      }\n      console.log({ channelIDs });\n\n      const promises = channelIDs.map(async (channelID) => {\n        // Match the cache\n        return this.getChannelMetaAsync(channelID)\n          .then((response) => response)\n          .catch((err) =>\n            console.log(\n              \"!!!Error (but skipping), getChannelMetaAsync() --> %o\",\n              err\n            )\n          );\n      });\n\n      // wait until all promises are resolved\n      const channelMetaData = await Promise.all(promises);\n\n      // return channels meta\n      // console.log(\"getChannelsMetaAsync(From %d to %d) --> %o\", startIndex, stopIndex, channelMetaData);\n      resolve(channelMetaData);\n    });\n  };\n\n  // To get a single channel meta via id\n  getChannelMetaAsync = async (channelID) => {\n    return new Promise(async (resolve, reject) => {\n      if (this.state.channelsMeta[channelID]) {\n        console.log(\n          \"getChannelMetaAsync() [CACHED] --> %o\",\n          this.state.channelsMeta[channelID]\n        );\n        resolve(this.state.channelsMeta[channelID]);\n      } else {\n        let channelAddress;\n\n        await EPNSCoreHelper.getChannelAddressFromID(\n          channelID,\n          this.state.epnsReadProvider\n        )\n          .then(async (response) => {\n            channelAddress = response;\n            await this.getChannelMetaViaAddressAsync(channelAddress).then(\n              (response) => {\n                // update the channel cache before resolving\n                this.state.channelsMeta[channelID] = response;\n                this.state.channelsMeta[channelAddress] = channelID;\n\n                // resolve\n                // console.log(\"getChannelMetaAsync() [Address: %s] --> %o\", channelAddress, response);\n                resolve(response);\n              }\n            );\n          })\n          .catch((err) => {\n            console.log(\"!!!Error, getChannelMetaAsync() --> %o\", err);\n            reject(err);\n          });\n      }\n    });\n  };\n\n  // To get a single channel meta via address\n  getChannelMetaViaAddressAsync = async (channelAddress) => {\n    return new Promise(async (resolve, reject) => {\n      if (this.state.channelsMeta[channelAddress]) {\n        const channelID = this.state.channelsMeta[channelAddress];\n\n        console.log(\n          \"getChannelMetaViaAddressAsync() [CACHED] --> %o\",\n          this.state.channelsMeta[channelID]\n        );\n        resolve(this.state.channelsMeta[channelID]);\n      } else {\n        // Can't cache this :(, no way to know channel id\n        await EPNSCoreHelper.getChannelInfo(\n          channelAddress,\n          this.state.epnsReadProvider\n        )\n          .then((response) => {\n            // resolve\n            // console.log(\"getChannelMetaViaAddressAsync() [Address: %s] --> %o\", channelAddress, response);\n            resolve(response);\n          })\n          .catch((err) => {\n            console.log(\n              \"!!!Error, getChannelMetaViaAddressAsync() --> %o\",\n              err\n            );\n            reject(err);\n          });\n      }\n    });\n  };\n\n  getChannelSubscribers = async (channelAddress) => {\n    const cachedSubscribers = this.state.subscribers[channelAddress];\n    if (cachedSubscribers) {\n      return cachedSubscribers;\n    }\n    return postReq(\"/channels/get_subscribers\", {\n      channel: channelAddress,\n      op: \"read\",\n    })\n      .then(({ data }) => {\n        const subs = data.subscribers;\n        this.state.subscribers[channelAddress] = subs;\n        return subs\n      })\n      .catch((err) => {\n        console.log(`getChannelSubscribers => ${err.message}`);\n        return [];\n      });\n  };\n\n  // CHANNELS INFO FUNCTIONS\n  // To get a single channel meta via id\n  getChannelJsonAsync = async (channelAddress) => {\n    return new Promise(async (resolve, reject) => {\n      if (this.state.channelsJson[channelAddress]) {\n        // console.log(\"getChannelJsonAsync() [CACHED] --> %o\", this.state.channelsJson[channelAddress]);\n        resolve(this.state.channelsJson[channelAddress]);\n      } else {\n        await EPNSCoreHelper.getChannelJsonFromChannelAddress(\n          channelAddress,\n          this.state.epnsReadProvider\n        )\n          .then((response) => {\n            // First set the cache\n            this.state.channelsJson[channelAddress] = response;\n\n            // resolve\n            // console.log(\"getChannelJsonAsync() [Address: %s] --> %o\", channelAddress, response);\n            resolve(response);\n          })\n          .catch((err) => {\n            console.log(\"!!!Error, getChannelJsonAsync() --> %o\", err);\n            reject(err);\n          });\n      }\n    });\n  };\n}\n","/**\n * This file helps us maintain the channels fetched in state, such that when we leave the tab, the channels can be fetched from memory\n */\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  CHANNNEL_DEACTIVATED_STATE: 2,\n  CHANNEL_BLOCKED_STATE: 3,\n  CHANNEL_ACTIVE_STATE: 1,\n  CHANNEL_BLACKLIST: [], //a list of channels\n  page: 0,\n  channels: [], // the channels meta-data\n  channelsCache: {}, // a mapping of channel address to channel details\n};\n\nexport const contractSlice = createSlice({\n  name: \"channels\",\n  initialState,\n  reducers: {\n    setChannelMeta: (state, action) => {\n      state.channels = action.payload;\n    },\n    incrementPage: (state) => {\n      state.page += 1;\n    },\n    cacheChannelInfo: (state, action) => {\n      const { address, meta } = action.payload;\n      state.channelsCache[address] = meta;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  setChannelMeta,\n  incrementPage,\n  cacheChannelInfo,\n} = contractSlice.actions;\n\nexport default contractSlice.reducer;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Device } from \"assets/Device\";\n\nimport { toast as toaster } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport Loader from \"react-loader-spinner\";\nimport Skeleton from \"@yisheng90/react-loading\";\nimport { IoMdPeople } from \"react-icons/io\";\nimport { GoVerified } from \"react-icons/go\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport NotificationToast from \"components/NotificationToast\";\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\nimport { postReq } from \"api\";\nimport { cacheChannelInfo } from \"redux/slices/channelSlice\";\n\n// Create Header\nfunction ViewChannelItem({ channelObjectProp }) {\n  const dispatch = useDispatch();\n  const {\n    epnsReadProvider,\n    epnsWriteProvider,\n    epnsCommReadProvider,\n    pushAdminAddress,\n    ZERO_ADDRESS,\n  } = useSelector((state) => state.contracts);\n  const { canVerify } = useSelector((state) => state.admin);\n  const { channelsCache, CHANNEL_BLACKLIST } = useSelector((state) => state.channels);\n  const { account, library, chainId } = useWeb3React();\n  const isOwner = channelObjectProp.addr === account;\n\n  const [channelObject, setChannelObject] = React.useState({});\n  const [channelJson, setChannelJson] = React.useState({});\n  const [subscribed, setSubscribed] = React.useState(true);\n  const [loading, setLoading] = React.useState(true);\n  const [memberCount, setMemberCount] = React.useState(0);\n  const [isPushAdmin, setIsPushAdmin] = React.useState(false);\n  const [isVerified, setIsVerified] = React.useState(false);\n  const [isBlocked, setIsBlocked] = React.useState(false);\n  const [vLoading, setvLoading] = React.useState(false);\n  const [bLoading, setBLoading] = React.useState(false);\n  const [txInProgress, setTxInProgress] = React.useState(false);\n  const [canUnverify, setCanUnverify] = React.useState(false);\n  const [verifierDetails, setVerifierDetails] = React.useState(null);\n\n  // ------ toast related section\n  const isChannelBlacklisted = CHANNEL_BLACKLIST.includes(channelObject.addr);\n  const [toast, showToast] = React.useState(null);\n  const clearToast = () => showToast(null);\n\n  //clear toast variable after it is shown\n  React.useEffect(() => {\n    if (toast) {\n      clearToast();\n    }\n  }, [toast]);\n  // ------ toast related section\n\n  React.useEffect(() => {\n    if (!channelObject.addr) return;\n    if (channelObject.verifiedBy) {\n      // procced as usual\n      fetchChannelJson().catch((err) => alert(err.message));\n      setIsBlocked(\n        channelObject.channelState === 3 || channelObject.channelState === 2 //dont display channel if blocked //dont display channel if deactivated\n      );\n    } else {\n      // if this key (verifiedBy) is not present it means we are searching and should fetch the channel object from chain again\n      epnsReadProvider.channels(channelObject.addr).then((response) => {\n        setChannelObject({ ...response, addr: channelObject.addr });\n        fetchChannelJson();\n      });\n    }\n  }, [account, channelObject, chainId]);\n\n  React.useEffect(() => {\n    if (!channelObjectProp) return;\n    setChannelObject(channelObjectProp);\n  }, [channelObjectProp]);\n\n  React.useEffect(() => {\n    if (!isVerified || channelObject?.verifiedBy === ZERO_ADDRESS) return;\n    ChannelsDataStore.instance\n      .getChannelJsonAsync(channelObject.verifiedBy)\n      .then((verifierDetails) => {\n        setVerifierDetails(verifierDetails);\n      })\n      .catch((err) => {\n        console.log(channelObject.verifiedBy, err);\n      });\n  \n  }, [isVerified, channelObject]);\n\n  const EPNS_DOMAIN = {\n    name: \"EPNS COMM V1\",\n    chainId: chainId,\n    verifyingContract: epnsCommReadProvider.address,\n  };\n  // to fetch channels\n  const fetchChannelJson = async () => {\n    try {\n      let channelJson = {};\n      if (channelsCache[channelObject.addr]) {\n        channelJson = channelsCache[channelObject.addr];\n      } else {\n        channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(\n          channelObject.addr\n        );\n        dispatch(\n          cacheChannelInfo({\n            address: channelObject.addr,\n            meta: channelJson,\n          })\n        );\n      }\n      const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(\n        channelObject.addr\n      );\n      const subscribed = channelSubscribers.find((sub) => {\n        return sub.toLowerCase() === account.toLowerCase();\n      });\n\n      setIsPushAdmin(pushAdminAddress === account);\n      setMemberCount(channelSubscribers.length);\n      setSubscribed(subscribed);\n      setIsVerified(\n        Boolean(\n          channelObject.verifiedBy !== ZERO_ADDRESS ||\n            channelObject.addr === pushAdminAddress\n        )\n      );\n      setCanUnverify(channelObject.verifiedBy == account);\n      setChannelJson({ ...channelJson, addr: channelObject.addr });\n      setLoading(false);\n    } catch (err) {\n      setIsBlocked(true);\n    }\n  };\n\n  // toast customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader type=\"Oval\" color={color} height={30} width={30} />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  );\n\n  // to subscribe\n  const subscribe = async () => {\n    subscribeAction(false);\n  };\n\n  // Toastify\n  let notificationToast = () =>\n    toaster.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\" />, {\n      position: \"bottom-right\",\n      autoClose: false,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n  const verifyChannel = () => {\n    setvLoading(true);\n    // post op\n    epnsWriteProvider\n      .verifyChannel(channelObject.addr)\n      .then(async (tx) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toaster.update(notificationToast(), {\n          render: \"Transaction sent\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        // await tx.wait(1);\n        // console.log (\"Transaction Mined!\");\n        setIsVerified(true);\n      })\n      .catch((err) => {\n        console.log(\"!!!Error verifyChannel() --> %o\", err);\n        toaster.update(notificationToast(), {\n          render: \"Transacion Failed: \" + err.error?.message || \"Unknown Error\",\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n      })\n      .finally(() => {\n        setvLoading(false);\n      });\n  };\n\n  const unverifyChannel = () => {\n    setvLoading(true);\n    epnsWriteProvider\n      .unverifyChannel(channelObject.addr)\n      .then(async (tx) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toaster.update(notificationToast(), {\n          render: \"Transaction sent\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        await tx.wait(1);\n        console.log(\"Transaction Mined!\");\n        setIsVerified(false);\n      })\n      .catch((err) => {\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\n        toaster.update(notificationToast(), {\n          render: \"Transacion Failed: \" + err.error?.message || \"Unknown Error\",\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n      });\n    setvLoading(false);\n  };\n  const blockChannel = () => {\n    setBLoading(true);\n    epnsWriteProvider\n      .blockChannel(channelObject.addr)\n      .then(async (tx) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toaster.update(notificationToast(), {\n          render: \"Transaction Sent\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        // await tx.wait(1);\n        // console.log (\"Transaction Mined!\");\n      })\n      .catch((err) => {\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\n        toaster.update(notificationToast(), {\n          render: \"Transacion Failed: \" + err.error.message,\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n      })\n      .finally(() => {\n        // post op\n        setBLoading(false);\n        setIsBlocked(true);\n      });\n  };\n\n  const subscribeAction = async () => {\n    setTxInProgress(true);\n    let txToast;\n    try {\n      const type = {\n        Subscribe: [\n          { name: \"channel\", type: \"address\" },\n          { name: \"subscriber\", type: \"address\" },\n          { name: \"action\", type: \"string\" },\n        ],\n      };\n      const message = {\n        channel: channelObject.addr,\n        subscriber: account,\n        action: \"Subscribe\",\n      };\n\n      const signature = await library\n        .getSigner(account)\n        ._signTypedData(EPNS_DOMAIN, type, message);\n      txToast = toaster.dark(\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\n        {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        }\n      );\n\n      postReq(\"/channels/subscribe_offchain\", {\n        signature,\n        message,\n        op: \"write\",\n        chainId,\n        contractAddress: epnsCommReadProvider.address,\n      }).then((res) => {\n        setSubscribed(true);\n        setMemberCount(memberCount + 1);\n        toaster.update(txToast, {\n          render: \"Sucesfully opted into channel !\",\n          type: toaster.TYPE.SUCCESS,\n          autoClose: 5000,\n        });\n        console.log(res);\n        setTxInProgress(false);\n      });\n    } catch (err) {\n      toaster.update(txToast, {\n        render: \"There was an error opting into channel (\" + err.message + \")\",\n        type: toaster.TYPE.ERROR,\n        autoClose: 5000,\n      });\n      console.log(err);\n    } finally {\n      setTxInProgress(false);\n    }\n  };\n\n  const unsubscribeAction = async () => {\n    let txToast;\n    try {\n      const type = {\n        Unsubscribe: [\n          { name: \"channel\", type: \"address\" },\n          { name: \"unsubscriber\", type: \"address\" },\n          { name: \"action\", type: \"string\" },\n        ],\n      };\n      const message = {\n        channel: channelObject.addr,\n        unsubscriber: account,\n        action: \"Unsubscribe\",\n      };\n      const signature = await library\n        .getSigner(account)\n        ._signTypedData(EPNS_DOMAIN, type, message);\n\n      txToast = toaster.dark(\n        <LoaderToast msg=\"Waiting for Confirmation...\" color=\"#35c5f3\" />,\n        {\n          position: \"bottom-right\",\n          autoClose: false,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        }\n      );\n\n      postReq(\"/channels/unsubscribe_offchain\", {\n        signature,\n        message,\n        op: \"write\",\n        chainId,\n        contractAddress: epnsCommReadProvider.address,\n      })\n        .then((res) => {\n          setSubscribed(false);\n          setMemberCount(memberCount + 1);\n          toaster.update(txToast, {\n            render: \"Sucesfully opted out of channel !\",\n            type: toaster.TYPE.SUCCESS,\n            autoClose: 5000,\n          });\n          console.log(res);\n        })\n        .catch((err) => {\n          toaster.update(txToast, {\n            render:\n              \"There was an error opting into channel (\" + err.message + \")\",\n            type: toaster.TYPE.ERROR,\n            autoClose: 5000,\n          });\n          console.log(err);\n        })\n        .finally(() => {\n          setTxInProgress(false);\n        });\n    } finally {\n      setTxInProgress(false);\n    }\n  };\n\n  if (isBlocked) return <></>;\n  if(isChannelBlacklisted) return <></>;\n\n  // render\n  return (\n    <Container key={channelObject.addr}>\n      <ChannelLogo>\n        <ChannelLogoOuter>\n          <ChannelLogoInner>\n            {loading ? (\n              <Skeleton color=\"#eee\" width=\"100%\" height=\"100%\" />\n            ) : (\n              <ChannelLogoImg src={`${channelJson.icon}`} />\n            )}\n          </ChannelLogoInner>\n        </ChannelLogoOuter>\n      </ChannelLogo>\n\n      <ChannelInfo>\n        <ChannelTitle>\n          {loading ? (\n            <Skeleton color=\"#eee\" width=\"50%\" height={24} />\n          ) : (\n            <ChannelTitleLink\n              href={channelJson.url}\n              target=\"_blank\"\n              rel=\"nofollow\"\n            >\n              {channelJson.name}\n              {isVerified && (\n                <Subscribers style={{ display: \"inline\", marginLeft: \"8px\" }}>\n                  <GoVerified size={18} color=\"#35c4f3\" />\n                </Subscribers>\n              )}\n            </ChannelTitleLink>\n          )}\n        </ChannelTitle>\n\n        <ChannelDesc>\n          {loading ? (\n            <>\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\n              </SkeletonWrapper>\n\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"100%\" height={5} />\n              </SkeletonWrapper>\n\n              <SkeletonWrapper atH={5} atW={100}>\n                <Skeleton color=\"#eee\" width=\"40%\" height={5} />\n              </SkeletonWrapper>\n            </>\n          ) : (\n            <ChannelDescLabel>{channelJson.info}</ChannelDescLabel>\n          )}\n        </ChannelDesc>\n\n        <ChannelMeta>\n          {loading ? (\n            <>\n              <SkeletonWrapper atH={10} atW={30} marginBottom=\"0\">\n                <Skeleton />\n              </SkeletonWrapper>\n            </>\n          ) : (\n            <>\n              <Subscribers>\n                <IoMdPeople size={20} color=\"#ccc\" />\n                <SubscribersCount>{memberCount}</SubscribersCount>\n              </Subscribers>\n              {verifierDetails && (\n                  <Subscribers>\n                    <VerifiedBy>Verified by:</VerifiedBy>\n                    <VerifierIcon src={verifierDetails.icon}/>\n                    <VerifierName>{verifierDetails.name}</VerifierName>\n                  </Subscribers>\n              )}\n            </>\n          )}\n        </ChannelMeta>\n      </ChannelInfo>\n      {!!account && !!library && (\n        <>\n          <LineBreak />\n          <ChannelActions>\n            {loading && (\n              <SkeletonButton>\n                <Skeleton />\n              </SkeletonButton>\n            )}\n            {!loading && isPushAdmin && (\n              <SubscribeButton onClick={blockChannel} disabled={bLoading}>\n                {bLoading && (\n                  <ActionLoader>\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                  </ActionLoader>\n                )}\n                <ActionTitle hideit={bLoading}>Block channel</ActionTitle>\n              </SubscribeButton>\n            )}\n            {!loading && (isPushAdmin || canVerify) && !isVerified && (\n              <SubscribeButton onClick={verifyChannel} disabled={vLoading}>\n                {vLoading && (\n                  <ActionLoader>\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                  </ActionLoader>\n                )}\n                <ActionTitle hideit={vLoading}>Verify Channel</ActionTitle>\n              </SubscribeButton>\n            )}\n            {!loading && (isPushAdmin || canUnverify) && isVerified && (\n              <UnsubscribeButton onClick={unverifyChannel} disabled={vLoading}>\n                {vLoading && (\n                  <ActionLoader>\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                  </ActionLoader>\n                )}\n                <ActionTitle hideit={vLoading}>Unverify Channel</ActionTitle>\n              </UnsubscribeButton>\n            )}\n            {!loading && !subscribed && (\n              <SubscribeButton onClick={subscribe} disabled={txInProgress}>\n                {txInProgress && (\n                  <ActionLoader>\n                    <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                  </ActionLoader>\n                )}\n                <ActionTitle hideit={txInProgress}>Opt-In</ActionTitle>\n              </SubscribeButton>\n            )}\n            {!loading && subscribed && (\n              <>\n                {isOwner && <OwnerButton disabled>Owner</OwnerButton>}\n                {!isOwner && (\n                  <UnsubscribeButton\n                    onClick={unsubscribeAction}\n                    disabled={txInProgress}\n                  >\n                    {txInProgress && (\n                      <ActionLoader>\n                        <Loader\n                          type=\"Oval\"\n                          color=\"#FFF\"\n                          height={16}\n                          width={16}\n                        />\n                      </ActionLoader>\n                    )}\n                    <ActionTitle hideit={txInProgress}>Opt-Out</ActionTitle>\n                  </UnsubscribeButton>\n                )}\n              </>\n            )}\n          </ChannelActions>\n        </>\n      )}\n      {toast && (\n        <NotificationToast notification={toast} clearToast={clearToast} />\n      )}\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-wrap: wrap;\n\n  background: #fff;\n  border-radius: 10px;\n  border: 1px solid rgb(237, 237, 237);\n\n  margin: 15px 0px;\n  justify-content: center;\n  padding: 10px;\n`;\n\nconst SkeletonWrapper = styled.div`\n  overflow: hidden;\n  width: ${(props) => props.atW + \"%\" || \"100%\"};\n  height: ${(props) => props.atH}px;\n  border-radius: ${(props) => props.borderRadius || 10}px;\n  margin-bottom: ${(props) => props.marginBottom || 5}px;\n  margin-right: ${(props) => props.marginRight || 0}px;\n`;\n\nconst ChannelLogo = styled.div`\n  max-width: 100px;\n  min-width: 32px;\n  flex: 1;\n  margin: 5px;\n  padding: 10px;\n  border: 2px solid #fafafa;\n  overflow: hidden;\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-self: flex-start;\n`;\n\nconst ChannelLogoOuter = styled.div`\n  padding-top: 100%;\n  position: relative;\n`;\n\nconst ChannelLogoInner = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  border-radius: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ChannelLogoImg = styled.img`\n  object-fit: contain;\n  width: 100%;\n  border-radius: 20px;\n  overflow: hidden;\n`;\n\nconst ChannelInfo = styled.div`\n  flex: 1;\n  margin: 5px 10px;\n  min-width: 120px;\n  flex-grow: 4;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst ChannelTitle = styled.div`\n  margin-bottom: 5px;\n`;\n\nconst ChannelTitleLink = styled.a`\n  text-decoration: none;\n  font-weight: 600;\n  color: #e20880;\n  font-size: 20px;\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n    pointer: hand;\n  }\n`;\n\nconst VerifiedBy = styled.span`\n  color: #ec008c;\n  font-size: 16px;\n  line-height: 20px;\n  letter-spacing: 0.05em;\n  font-weight: 600;\n  display: inline-block;\n  margin-left: 10px;\n`;\n\nconst VerifierIcon = styled.img`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  margin-left: 6px;\n  margin-right: 4px;\n`;\nconst VerifierName = styled.span`\n  font-weight: 400;\n  color: black;\n  font-size: 16px;\n  letter-spacing: 0em;\n`;\n\nconst ChannelDesc = styled.div`\n  flex: 1;\n  display: flex;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.75);\n  font-weight: 400;\n  flex-direction: column;\n`;\n\nconst ChannelDescLabel = styled.label`\n  flex: 1;\n`;\n\nconst ChannelMeta = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  font-size: 13px;\n`;\n\nconst ChannelMetaBox = styled.label`\n  margin: 0px 5px;\n  color: #fff;\n  font-weight: 600;\n  padding: 2px 8px;\n  border-radius: 10px;\n  font-size: 11px;\n`;\n\nconst Subscribers = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst SubscribersCount = styled(ChannelMetaBox)`\n  background: #35c4f3;\n`;\n\nconst Pool = styled.div`\n  margin: 0px 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst PoolShare = styled(ChannelMetaBox)`\n  background: #674c9f;\n`;\n\nconst LineBreak = styled.div`\n  display: none;\n  flex-basis: 100%;\n  height: 0;\n\n  @media ${Device.tablet} {\n    display: block;\n  }\n`;\n\nconst ChannelActions = styled.div`\n  margin: 5px;\n  flex-grow: 1;\n  // max-width: 250px;\n  display: flex;\n  justify-content: flex-end;\n  // justify-content: center;\n  align-items: center;\n`;\n\nconst ChannelActionButton = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n  ${(props) =>\n    props.disabled &&\n    css`\n      &:hover {\n        opacity: 1;\n        cursor: default;\n        pointer: default;\n      }\n      &:active {\n        opacity: 1;\n        cursor: default;\n        pointer: default;\n      }\n    `}\n`;\n\nconst ActionTitle = styled.span`\n  ${(props) =>\n    props.hideit &&\n    css`\n      visibility: hidden;\n    `};\n`;\n\nconst ActionLoader = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SkeletonButton = styled.div`\n  border: 0;\n  outline: 0;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 10px;\n  border-radius: 5px;\n  flex: 1;\n`;\n\nconst SubscribeButton = styled(ChannelActionButton)`\n  background: #e20880;\n  min-width:80px;\n`;\n\nconst UnsubscribeButton = styled(ChannelActionButton)`\n  background: #674c9f;\n  min-width:80px;\n`;\n\nconst OwnerButton = styled(ChannelActionButton)`\n  background: #35c5f3;\n`;\n\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`;\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`;\n\n// Export Default\nexport default ViewChannelItem;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"react-loader-spinner\";\nimport { Waypoint } from \"react-waypoint\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postReq } from \"api\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport searchIcon from \"assets/searchicon.svg\";\n\nimport DisplayNotice from \"components/DisplayNotice\";\nimport ViewChannelItem from \"components/ViewChannelItem\";\nimport Faucets from \"components/Faucets\";\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\nimport { setChannelMeta, incrementPage } from \"redux/slices/channelSlice\";\n\nconst CHANNELS_PER_PAGE = 10; //pagination parameter which indicates how many channels to return over one iteration\nconst SEARCH_TRIAL_LIMIT = 5; //ONLY TRY SEARCHING 5 TIMES BEFORE GIVING UP\nconst DEBOUNCE_TIMEOUT = 500; //time in millisecond which we want to wait for then to finish typing\n\n// Create Header\nfunction ViewChannels() {\n  const dispatch = useDispatch();\n  const { account, chainId } = useWeb3React();\n  const { channels, page } = useSelector((state: any) => state.channels);\n  const { ZERO_ADDRESS } = useSelector((state: any) => state.contracts);\n\n  const [loading, setLoading] = React.useState(false);\n  const [moreLoading, setMoreLoading] = React.useState(false);\n  const [search, setSearch] = React.useState(\"\");\n  const [channelToShow, setChannelToShow] = React.useState([]);\n  const [loadingChannel, setLoadingChannel] = React.useState(false);\n  const [trialCount, setTrialCount] = React.useState(0);\n\n  const channelsVisited = page * CHANNELS_PER_PAGE;\n\n  // fetch channel data if we are just getting to this pae\n  React.useEffect(() => {\n    setLoading(!channels.length); //if there are no channels initially then, set the loader\n    fetchInitialsChannelMeta();\n  }, [account, chainId]);\n\n  // to update a page\n  const updateCurrentPage = () => {\n    if (loading || moreLoading) return;\n    // fetch more channel information\n    setMoreLoading(true);\n    dispatch(incrementPage());\n    loadMoreChannelMeta(page + 1); //load the meta for the next page\n  };\n\n  // to fetch initial channels and logged in user data\n  const fetchInitialsChannelMeta = async () => {\n    // fetch the meta of the first `CHANNELS_PER_PAGE` channels\n    const channelsMeta = await ChannelsDataStore.instance.getChannelsMetaAsync(\n      channelsVisited,\n      CHANNELS_PER_PAGE\n    );\n    if (!channels.length) {\n      dispatch(setChannelMeta(channelsMeta));\n    }\n    setLoading(false);\n  };\n\n  // load more channels when we get to the bottom of the page\n  const loadMoreChannelMeta = async (newPageNumber: any) => {\n    const startingPoint = newPageNumber * CHANNELS_PER_PAGE;\n    const moreChannels = await ChannelsDataStore.instance.getChannelsMetaAsync(\n      startingPoint,\n      CHANNELS_PER_PAGE\n    );\n    dispatch(setChannelMeta([...channels, ...moreChannels]));\n    setMoreLoading(false);\n  };\n\n  // conditionally display the waymore bar which loads more information\n  // load more channels when we are at the bottom of the page\n  const showWayPoint = (index: any) => {\n    return Number(index) === channels.length - 1 && !search;\n  };\n\n  // Search Channels Feature\n  React.useEffect(() => {\n    if (!channels.length) return;\n    setChannelToShow(channels);\n  }, [channels]);\n\n  console.log('\\n\\n')\n  console.log('\\n\\n')\n  console.log({channels});\n\n  function searchForChannel() {\n    if (loadingChannel) return; //if we are already loading, do nothing\n    if (search) {\n      setLoadingChannel(true); //begin loading here\n      setChannelToShow([]); //maybe remove later\n      postReq(\"/channels/search\", {\n        query: search,\n        op: \"read\",\n      })\n        .then((data) => {\n          setChannelToShow(data.data.channels || []);\n          setLoadingChannel(false);\n        })\n        .catch(() => {\n          // if there's an error search for three times before giving up and displaying the normal channels\n          if (trialCount < SEARCH_TRIAL_LIMIT) {\n            setTrialCount((t) => t + 1);\n            searchForChannel(); //if theres an error, recursively search\n          } else {\n            setChannelToShow(channels);\n            setLoadingChannel(false);\n          }\n        });\n    } else {\n      // if no search item, then set it back to the channels\n      setLoadingChannel(false);\n      setChannelToShow(channels);\n    }\n  }\n\n  React.useEffect(() => {\n    // debounce request\n    // this is done so that we only make a request after the user stops typing\n    console.log({ channelToShow });\n    const timeout = setTimeout(searchForChannel, DEBOUNCE_TIMEOUT);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [search]);\n\n  return (\n    <>\n      <Container >\n        {!loading && channels.length == 0 ? (\n          <ContainerInfo>\n            <DisplayNotice\n              title=\"That's weird, No Channels in EPNS... world is ending... right?\"\n              theme=\"primary\"\n            />\n          </ContainerInfo>\n        ) : (\n          <Items id=\"scrollstyle-secondary\" style={{position:\"relative\",padding:\"0 1rem\"}}>\n            {!loading && (\n              <Header style={{minHeight: \"150px\"}}>\n                <InputWrapper>\n                  <SearchBar\n                    type=\"text\"\n                    value={search}\n                    onChange={(e: any) => setSearch(e.target.value)}\n                    className=\"input\"\n                    placeholder=\"Search By Name/Address\"\n                  />\n                  <SearchIconImage src={searchIcon} alt=\"\" />\n                </InputWrapper>\n              </Header>\n            )}\n\n            {/* render all channels depending on if we are searching or not */}\n            {(search ? channelToShow : channels)\n              .filter((channel: any) => channel && channel.addr !== ZERO_ADDRESS)\n              .map((channel: any, index: any) => (\n                <>\n                  <div key={channel.addr}>\n                    <ViewChannelItem channelObjectProp={channel} />\n                  </div>\n                  {showWayPoint(index) && (\n                    <Waypoint onEnter={updateCurrentPage} />\n                  )}\n                </>\n              ))}\n            {/* render all channels depending on if we are searching or not */}\n\n            {/* if we are in search mode and there are no channels then display error message */}\n            {search && !channelToShow?.length && !loadingChannel && (\n              <CenteredContainerInfo>\n                <DisplayNotice\n                  title=\"No channels match your query, please search for another name/address\"\n                  theme=\"third\"\n                />\n              </CenteredContainerInfo>\n            )}\n            {/* display loader if pagination is loading next batch of channelTotalList */}\n            {((moreLoading && channels.length) ||\n              loading ||\n              loadingChannel) && (\n              <CenterContainer>\n                <Loader type=\"Oval\" color=\"#35c5f3\" height={40} width={40} />\n              </CenterContainer>\n            )}\n          </Items>\n        )}\n      </Container>\n    </>\n  );\n}\n\n// css styles\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position:-webkit-sticky; \n  position:sticky;\n  top:0px;\n  z-index:2;\n  background:#fafafa;\n\n  @media(max-width:600px){\n    flex-direction:column;\n}\n`;\nconst InputWrapper = styled.div`\n  width: 50%;\n  position:relative;\n\n  @media(max-width:600px){\n    width:100%;\n    margin:2rem 0;\n  }\n`;\n\nconst SearchBar = styled.input`\n  width: 100%;\n  padding-right: 50px;\n  height: 60px;\n  padding-left: 40px;\n \n  background: rgb(255,255,255);\n  border: 1px solid rgba(169, 169, 169, 0.5);\n  box-sizing: border-box;\n  border-radius: 10px;\n  transition: 500ms;\n  text-transform: capitalize;\n  font-size: 16px;\n \n  input[type=\"reset\"] {\n    display: none;\n  }\n  &::placeholder{\n    letter-spacing: 0.15em;\n  }\n  &:hover,\n  &:active,\n  &:focus {\n    outline: none;\n  }\n  &:focus {\n    border: 1px solid #EC008C;\n  }\n`;\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  font-weight: 200;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n\n  max-height: 92vh;\n`;\n\nconst ContainerInfo = styled.div`\n  padding: 20px;\n`;\n\nconst CenteredContainerInfo = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CenterContainer = styled(ContainerInfo)`\n  width: fit-content;\n  margin: auto;\n`;\n\nconst Items = styled.div`\n  display: block;\n  align-self: stretch;\n  padding: 10px 20px;\n  overflow-y: scroll;\n  background: #fafafa;\n`;\n\n\nconst SearchIconImage = styled.img`\n  position: absolute;\n  right: 4px;\n  top: 4px;\n`;\n\n// Export Default\nexport default ViewChannels;\n","import React from 'react'\n\nexport const CloseIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.243\" height=\"10.243\" viewBox=\"0 0 16.243 16.243\">\n        <g id=\"Group_4723\" data-name=\"Group 4723\" transform=\"translate(2.121 2.121)\">\n            <g id=\"Group_4716\" data-name=\"Group 4716\" transform=\"translate(0)\">\n            <line id=\"Line_1079\" data-name=\"Line 1079\" x2=\"16.97\" transform=\"translate(0 12) rotate(-45)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\n            <line id=\"Line_1080\" data-name=\"Line 1080\" y2=\"16.97\" transform=\"translate(0 0) rotate(-45)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\n            </g>\n        </g>\n    </svg>\n);\n","import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport Dropdown from \"react-dropdown\";\nimport { FiLink } from \"react-icons/fi\";\nimport Loader from \"react-loader-spinner\";\nimport styled from \"styled-components\";\nimport { BsFillImageFill } from \"react-icons/bs\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n  Section,\n  Content,\n  Item,\n  ItemH,\n  H2,\n  H3,\n  Span,\n  Button,\n  FormSubmision,\n  Input,\n  TextField,\n} from \"components/SharedStyling\";\n\nimport \"react-dropdown/style.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nimport Switch from \"@material-ui/core/Switch\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport { CloseIcon } from \"assets/icons\";\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\nimport CryptoHelper from \"helpers/CryptoHelper\";\nconst ethers = require(\"ethers\");\n\n// Set Notification Form Type | 0 is reserved for protocol storage\nconst NFTypes = [\n  { value: \"1\", label: \"Broadcast (IPFS Payload)\" },\n  { value: \"2\", label: \"Secret (IPFS Payload)\" },\n  { value: \"3\", label: \"Targetted (IPFS Payload)\" },\n  { value: \"4\", label: \"Subset (IPFS Payload)\" },\n];\nconst LIMITER_KEYS = [\"Enter\", \",\"];\n\n// Create Header\nfunction SendNotifications() {\n  const { account } = useWeb3React();\n  const { epnsCommWriteProvider } = useSelector(\n    (state: any) => state.contracts\n  );\n  const { channelDetails, delegatees } = useSelector(\n    (state: any) => state.admin\n  );\n  const { CHANNNEL_DEACTIVATED_STATE } = useSelector(\n    (state: any) => state.channels\n  );\n\n  const [nfProcessing, setNFProcessing] = React.useState(0);\n  const [channelAddress, setChannelAddress] = React.useState(\"\");\n  const [nfRecipient, setNFRecipient] = React.useState(\"\");\n  const [multipleRecipients, setMultipleRecipients] = React.useState([]);\n  const [tempRecipeint, setTempRecipient] = React.useState(\"\"); // to temporarily hold the address of one recipient who would be entered into the recipeints array above.\n  const [nfType, setNFType] = React.useState(\"\");\n  const [nfSub, setNFSub] = React.useState(\"\");\n  const [nfSubEnabled, setNFSubEnabled] = React.useState(false);\n  const [nfMsg, setNFMsg] = React.useState(\"\");\n  const [nfCTA, setNFCTA] = React.useState(\"\");\n  const [nfCTAEnabled, setNFCTAEnabled] = React.useState(false);\n  const [nfMedia, setNFMedia] = React.useState(\"\");\n  const [nfMediaEnabled, setNFMediaEnabled] = React.useState(false);\n  const [nfInfo, setNFInfo] = React.useState(\"\");\n  const [delegateeOptions, setDelegateeOptions] = React.useState([]);\n\n  const isChannelDeactivated = channelDetails\n    ? channelDetails.channelState === CHANNNEL_DEACTIVATED_STATE\n    : false;\n  const cannotDisplayDelegatees =\n    (delegatees.length === 1 && delegatees[0].address === account) ||\n    !delegatees.length; //do not display delegatees dropdown if you are the only delegatee to yourself or there are no delegatess\n  // construct a list of channel delegators\n  React.useEffect(() => {\n    if (!account) return;\n    if (!delegatees || !delegatees.length) {\n      setChannelAddress(account);\n    } else {\n      setDelegateeOptions(\n        delegatees.map((oneDelegatee: any) => ({\n          value: oneDelegatee.address,\n          label: (\n            <CustomDropdownItem>\n              <img src={oneDelegatee.icon} alt=\"\" />\n              <div>{oneDelegatee.name}</div>\n            </CustomDropdownItem>\n          ),\n        }))\n      );\n      // default the channel address to the first one on the list which should be that of the user if they have a channel\n      setChannelAddress(delegatees[0].address);\n    }\n  }, [delegatees, account]);\n  console.log(delegateeOptions);\n\n  // on change for the subset type notifications input\n  const handleSubsetInputChange = (e: any) => {\n    // if the user enters in a comma or an enter then seperate the addresses\n    if (LIMITER_KEYS.includes(e.key)) {\n      e.preventDefault();\n      // if they enter a limiter key, then add the temp value to the recipeints list\n      // then clear the value of the temp text\n      setMultipleRecipients((oldRecipients) =>\n        // use this combination to remove duplicates\n        Array.from(new Set([...oldRecipients, tempRecipeint]))\n      );\n      setTempRecipient(\"\");\n    }\n  };\n  // when to remove a subscriber\n  const removeRecipient = (recipientAddress: any) => {\n    const filteredRecipients = multipleRecipients.filter(\n      (rec) => rec !== recipientAddress\n    );\n    setMultipleRecipients(filteredRecipients);\n  };\n\n  React.useEffect(() => {\n    const broadcastIds = [\"1\", \"4\"]; //id's of notifications which qualify as broadcast\n    setMultipleRecipients([]); //reset array when type changes/\n    if (broadcastIds.includes(nfType)) {\n      // This is broadcast, nfRecipient will be the same\n      setNFRecipient(account);\n    } else {\n      setNFRecipient(\"\");\n    }\n  }, [nfType]);\n\n  // validate the body being sent, return true if no errors\n  const bodyValidated = (notificationToast) => {\n    let validated = true;\n    // if we are sending for a subset and there\n    if (nfType === \"4\" && !multipleRecipients.length) {\n      toast.update(notificationToast, {\n        render:\n          \"Please enter at least two recipients in order to use subset notifications type\",\n        type: toast.TYPE.ERROR,\n        autoClose: 5000,\n      });\n      validated = false;\n    }\n    return validated;\n  };\n\n  const handleSendMessage = async (e) => {\n    // Check everything in order\n    e.preventDefault();\n\n    // Toastify\n    let notificationToast = toast.dark(\n      <LoaderToast msg=\"Preparing Notification\" color=\"#fff\" />,\n      {\n        position: \"bottom-right\",\n        autoClose: false,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      }\n    );\n\n    // do some validation\n    if (!bodyValidated(notificationToast)) return;\n\n    // Set to processing\n    setNFProcessing(1);\n\n    // Form signer and contract connection\n    const communicatorContract = epnsCommWriteProvider;\n    // define the epns comms contracts\n\n    // For payload basic\n    let nsub = nfSub;\n    let nmsg = nfMsg;\n    let secretEncrypted;\n\n    let asub = nfSub;\n    let amsg = nfMsg;\n    let acta = nfCTA;\n    let aimg = nfMedia;\n\n    // Decide type and storage\n    switch (nfType) {\n      // Broadcast Notification\n      case \"1\":\n        break;\n\n      // Targetted Notification\n      case \"3\":\n        break;\n\n      // Secret Notification\n      case \"2\":\n        // Create secret\n        let secret = CryptoHelper.makeid(14);\n\n        // Encrypt payload and change sub and nfMsg in notification\n        nsub = \"You have a secret message!\";\n        nmsg = \"Open the app to see your secret message!\";\n\n        // get public key from EPNSCoreHelper\n        let k = await EPNSCoreHelper.getPublicKey(\n          nfRecipient,\n          epnsCommWriteProvider\n        );\n        if (k == null) {\n          // No public key, can't encrypt\n          setNFInfo(\"Public Key Registration is required for encryption!\");\n          setNFProcessing(2);\n\n          toast.update(notificationToast, {\n            render: \"Unable to encrypt for this user, no public key registered\",\n            type: toast.TYPE.ERROR,\n            autoClose: 5000,\n          });\n\n          return;\n        }\n\n        let publickey = k.toString().substring(2);\n        //console.log(\"This is public Key: \" + publickey);\n\n        secretEncrypted = await CryptoHelper.encryptWithECIES(\n          secret,\n          publickey\n        );\n        asub = CryptoHelper.encryptWithAES(nfSub, secret);\n        amsg = CryptoHelper.encryptWithAES(nfMsg, secret);\n        acta = CryptoHelper.encryptWithAES(nfCTA, secret);\n        aimg = CryptoHelper.encryptWithAES(nfMedia, secret);\n        break;\n\n      // Targetted Notification\n      case \"4\":\n        break;\n\n      default:\n        break;\n    }\n\n    // Handle Storage\n    let storagePointer = \"\";\n\n    // IPFS PAYLOAD --> 1, 2, 3\n    if (nfType === \"1\" || nfType === \"2\" || nfType === \"3\" || nfType === \"4\") {\n      // Checks for optional fields\n      if (nfSubEnabled && isEmpty(nfSub)) {\n        setNFInfo(\"Enter Subject or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n\n        return;\n      }\n\n      if (nfMediaEnabled && isEmpty(nfMedia)) {\n        setNFInfo(\"Enter Media URL or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n        return;\n      }\n\n      if (nfCTAEnabled && isEmpty(nfCTA)) {\n        setNFInfo(\"Enter Call to Action Link or Disable it\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n        return;\n      }\n\n      if (isEmpty(nfMsg)) {\n        setNFInfo(\"Message cannot be empty\");\n        setNFProcessing(2);\n\n        toast.update(notificationToast, {\n          render: \"Incorrect Payload\",\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n        return;\n      }\n\n      const jsonPayload = {\n        notification: {\n          title: nsub,\n          body: nmsg,\n        },\n        data: {\n          type: nfType,\n          secret: secretEncrypted,\n          asub: asub,\n          amsg: amsg,\n          acta: acta,\n          aimg: aimg,\n        },\n      };\n\n      // if we are sending a subset type, then include recipients\n      if (nfType === \"4\") {\n        jsonPayload[\"recipients\"] = [...multipleRecipients];\n      }\n\n      const input = JSON.stringify(jsonPayload);\n\n      console.log(\"Uploding to IPFS...\");\n      toast.update(notificationToast, {\n        render: \"Uploding to IPFS...\",\n      });\n\n      const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\n\n      try {\n        storagePointer = await ipfs.add(input);\n      } catch (e) {\n        setNFProcessing(2);\n        setNFInfo(\"IPFS Upload Error\");\n      }\n\n      console.log(\"IPFS cid: %o\", storagePointer);\n      toast.update(notificationToast, {\n        render: \"IPFS HASH: \" + storagePointer,\n      });\n    }\n\n    // Prepare Identity and send notification\n    const identity = nfType + \"+\" + storagePointer;\n    const identityBytes = ethers.utils.toUtf8Bytes(identity);\n\n    var anotherSendTxPromise;\n\n    anotherSendTxPromise = communicatorContract.sendNotification(\n      channelAddress,\n      nfRecipient,\n      identityBytes\n    );\n\n    console.log(\"Sending Transaction... \");\n    toast.update(notificationToast, {\n      render: \"Sending Notification...\",\n    });\n\n    anotherSendTxPromise\n      .then(async (tx) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toast.update(notificationToast, {\n          render: \"Notification Sent\",\n          type: toast.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        await tx.wait(1);\n        console.log(\"Transaction Mined!\");\n\n        setNFProcessing(2);\n        setNFType(\"\");\n        setNFInfo(\"Notification Sent\");\n\n        toast.update(notificationToast, {\n          render: \"Transaction Mined / Notification Sent\",\n          type: toast.TYPE.SUCCESS,\n          autoClose: 5000,\n        });\n      })\n      .catch((err) => {\n        console.log(\"!!!Error handleSendMessage() --> %o\", err);\n        setNFInfo(\"Transaction Failed, please try again\");\n\n        toast.update(notificationToast, {\n          render: \"Transacion Failed: \" + err,\n          type: toast.TYPE.ERROR,\n          autoClose: 5000,\n        });\n        setNFProcessing(0);\n      });\n  };\n\n  const isEmpty = (field: any) => {\n    if (field.trim().length == 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n  // toast customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader type=\"Oval\" color={color} height={30} width={30} />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  );\n\n  return (\n    <>\n      <Section>\n        <Content padding=\"10px 20px 20px\">\n          <Item align=\"flex-start\">\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n              <Span weight=\"200\">Send </Span>\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\n                Notification\n              </Span>\n            </H2>\n            {!isChannelDeactivated ? (\n              <H3>\n                EPNS supports four types of notifications (for now!).{\" \"}\n                <b>Groups</b>, <b>Secrets</b>, <b>Targetted</b> and{\" \"}\n                <b>Subsets</b>.\n              </H3>\n            ) : (\n              <H3>This channel has been deactivated, please reactivate it!.</H3>\n            )}\n          </Item>\n        </Content>\n      </Section>\n\n      {!isChannelDeactivated && (\n        <Section>\n          <ModifiedContent>\n            <Item align=\"stretch\">\n              <FormSubmision\n                flex=\"1\"\n                direction=\"column\"\n                margin=\"0px\"\n                justify=\"center\"\n                size=\"1.1rem\"\n                onSubmit={handleSendMessage}\n              >\n                <Item margin=\"0px 20px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                  {!cannotDisplayDelegatees && (\n                    <Item\n                      flex=\"5\"\n                      justify=\"flex-start\"\n                      align=\"stretch\"\n                      minWidth=\"280px\"\n                    >\n                      <DropdownStyledParentWhite>\n                        <DropdownHeader>\n                          SEND NOTIFICATION ON BEHALF OF\n                        </DropdownHeader>\n                        <DropdownStyledWhite\n                          options={delegateeOptions}\n                          onChange={(option: any) => {\n                            setChannelAddress(option.value);\n                          }}\n                          value={delegateeOptions.find(\n                            (d) => d.value == channelAddress\n                          )}\n                        />\n                      </DropdownStyledParentWhite>\n                    </Item>\n                  )}\n\n                  <Input\n                    display=\"none\"\n                    value={nfType}\n                    onChange={(e) => {\n                      setNFType(e.target.value);\n                    }}\n                  />\n\n                  <Item\n                    flex=\"5\"\n                    justify=\"flex-start\"\n                    align=\"stretch\"\n                    minWidth=\"280px\"\n                  >\n                    <DropdownStyledParent>\n                      <DropdownStyled\n                        options={NFTypes}\n                        onChange={(option) => {\n                          setNFType(option.value);\n                          console.log(option);\n                        }}\n                        value={nfType}\n                        placeholder=\"Select Type of Notification to Send\"\n                      />\n                    </DropdownStyledParent>\n                  </Item>\n                  <Input\n                    display=\"none\"\n                    value={nfType}\n                    onChange={(e) => {\n                      setNFType(e.target.value);\n                    }}\n                  />\n\n                  {nfType && (\n                    <ItemH\n                      margin=\"0px 15px 15px 15px\"\n                      bg=\"#f1f1f1\"\n                      flex=\"1\"\n                      self=\"stretch\"\n                      justify=\"space-between\"\n                    >\n                      <ItemH margin=\"15px 10px\" flex=\"inital\">\n                        <Span\n                          margin=\"0px 10px 0px 0px\"\n                          weight=\"400\"\n                          spacing=\"0.1em\"\n                          textTransform=\"uppercase\"\n                          size=\"0.8em\"\n                          bg=\"#e20880\"\n                          color=\"#fff\"\n                          padding=\"5px 15px\"\n                          radius=\"30px\"\n                        >\n                          Enable Subject\n                        </Span>\n                        <Switch\n                          color=\"primary\"\n                          size=\"small\"\n                          checked={nfSubEnabled}\n                          onChange={() => setNFSubEnabled(!nfSubEnabled)}\n                        />\n                      </ItemH>\n\n                      <ItemH margin=\"15px 10px\" flex=\"inital\">\n                        <Span\n                          margin=\"0px 10px 0px 0px\"\n                          weight=\"400\"\n                          spacing=\"0.1em\"\n                          textTransform=\"uppercase\"\n                          size=\"0.8em\"\n                          bg=\"#e20880\"\n                          color=\"#fff\"\n                          padding=\"5px 15px\"\n                          radius=\"30px\"\n                        >\n                          Enable Media\n                        </Span>\n                        <Switch\n                          color=\"primary\"\n                          size=\"small\"\n                          checked={nfMediaEnabled}\n                          onChange={() => setNFMediaEnabled(!nfMediaEnabled)}\n                        />\n                      </ItemH>\n\n                      <ItemH margin=\"15px 10px\" flex=\"inital\">\n                        <Span\n                          margin=\"0px 10px 0px 0px\"\n                          weight=\"400\"\n                          spacing=\"0.1em\"\n                          textTransform=\"uppercase\"\n                          size=\"0.8em\"\n                          bg=\"#e20880\"\n                          color=\"#fff\"\n                          padding=\"5px 15px\"\n                          radius=\"30px\"\n                        >\n                          Enable CTA\n                        </Span>\n                        <Switch\n                          color=\"primary\"\n                          size=\"small\"\n                          checked={nfCTAEnabled}\n                          onChange={() => setNFCTAEnabled(!nfCTAEnabled)}\n                        />\n                      </ItemH>\n                    </ItemH>\n                  )}\n                </Item>\n\n                {(nfType === \"2\" || nfType === \"3\") && (\n                  <Item\n                    margin=\"15px 20px 15px 20px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"stretch\"\n                  >\n                    <Input\n                      required\n                      placeholder=\"Enter recipient wallet address\"\n                      radius=\"4px\"\n                      padding=\"12px\"\n                      border=\"1px solid #674c9f\"\n                      bg=\"#fff\"\n                      value={nfRecipient}\n                      onChange={(e) => {\n                        setNFRecipient(e.target.value);\n                      }}\n                    />\n                    {nfRecipient.trim().length == 0 && (\n                      <Span\n                        padding=\"4px 10px\"\n                        right=\"0px\"\n                        top=\"0px\"\n                        pos=\"absolute\"\n                        color=\"#fff\"\n                        bg=\"#000\"\n                        size=\"0.7rem\"\n                        z=\"1\"\n                      >\n                        Recipient Wallet\n                      </Span>\n                    )}\n                  </Item>\n                )}\n\n                {nfType === \"4\" && (\n                  <>\n                    <MultiRecipientsContainer>\n                      {multipleRecipients.map((oneRecipient) => (\n                        <span key={oneRecipient}>\n                          {oneRecipient}\n                          <i onClick={() => removeRecipient(oneRecipient)}>\n                            <CloseIcon />\n                          </i>\n                        </span>\n                      ))}\n                    </MultiRecipientsContainer>\n                    <Item\n                      margin=\"15px 20px 15px 20px\"\n                      flex=\"1\"\n                      self=\"stretch\"\n                      align=\"stretch\"\n                    >\n                      <Input\n                        required={multipleRecipients.length === 0}\n                        placeholder=\"Enter recipients wallet addresses seperated by a comma or by pressing the enter key\"\n                        radius=\"4px\"\n                        padding=\"12px\"\n                        border=\"1px solid #674c9f\"\n                        bg=\"#fff\"\n                        value={tempRecipeint}\n                        onKeyPress={handleSubsetInputChange}\n                        onChange={(e) => {\n                          const text = e.target.value;\n                          if (!LIMITER_KEYS.includes(text)) {\n                            setTempRecipient(e.target.value);\n                          }\n                        }}\n                      />\n                      {nfRecipient.trim().length == 0 && (\n                        <Span\n                          padding=\"4px 10px\"\n                          right=\"0px\"\n                          top=\"0px\"\n                          pos=\"absolute\"\n                          color=\"#fff\"\n                          bg=\"#000\"\n                          size=\"0.7rem\"\n                          z=\"1\"\n                        >\n                          Recipient Wallet\n                        </Span>\n                      )}\n                    </Item>\n                  </>\n                )}\n\n                {nfType && nfSubEnabled && (\n                  <Item\n                    margin=\"15px 20px 15px 20px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"stretch\"\n                  >\n                    <Input\n                      required\n                      placeholder=\"Subject of Notification\"\n                      padding=\"12px\"\n                      borderBottom=\"1px solid #000\"\n                      weight=\"400\"\n                      size=\"1.2em\"\n                      bg=\"#fff\"\n                      value={nfSub}\n                      onChange={(e) => {\n                        setNFSub(e.target.value);\n                      }}\n                    />\n                    {nfSub.trim().length == 0 && (\n                      <Span\n                        padding=\"4px 10px\"\n                        right=\"0px\"\n                        top=\"0px\"\n                        pos=\"absolute\"\n                        color=\"#fff\"\n                        bg=\"#000\"\n                        size=\"0.7rem\"\n                        z=\"1\"\n                      >\n                        Subject\n                      </Span>\n                    )}\n                  </Item>\n                )}\n\n                {nfType && (\n                  <Item\n                    margin=\"15px 20px 15px 20px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"stretch\"\n                  >\n                    <TextField\n                      required\n                      placeholder=\"Notification Message\"\n                      rows=\"6\"\n                      radius=\"4px\"\n                      padding=\"12px\"\n                      weight=\"400\"\n                      border=\"1px solid #000\"\n                      bg=\"#fff\"\n                      value={nfMsg}\n                      onChange={(e) => {\n                        setNFMsg(e.target.value);\n                      }}\n                      autocomplete=\"off\"\n                    />\n                  </Item>\n                )}\n\n                {nfType && nfMediaEnabled && (\n                  <ItemH\n                    padding=\"15px 20px 15px 20px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"center\"\n                  >\n                    <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                      <BsFillImageFill size={24} color=\"#000\" />\n                    </Item>\n                    <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                      <Input\n                        required\n                        placeholder=\"Media URL for Notification\"\n                        padding=\"12px\"\n                        border=\"1px solid #000\"\n                        radius=\"4px\"\n                        weight=\"400\"\n                        bg=\"#f1f1f1\"\n                        value={nfMedia}\n                        onChange={(e) => {\n                          setNFMedia(e.target.value);\n                        }}\n                      />\n                      {nfMedia.trim().length == 0 && (\n                        <Span\n                          padding=\"4px 10px\"\n                          right=\"0px\"\n                          top=\"0px\"\n                          pos=\"absolute\"\n                          color=\"#fff\"\n                          bg=\"#000\"\n                          size=\"0.7rem\"\n                          z=\"1\"\n                        >\n                          Media URL\n                        </Span>\n                      )}\n                    </Item>\n                  </ItemH>\n                )}\n\n                {nfType && nfCTAEnabled && (\n                  <ItemH\n                    margin=\"15px 20px 15px 20px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"center\"\n                  >\n                    <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                      <FiLink size={24} color=\"#000\" />\n                    </Item>\n                    <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                      <Input\n                        required\n                        placeholder=\"Call to Action Link\"\n                        padding=\"12px\"\n                        border=\"1px solid #000\"\n                        radius=\"4px\"\n                        weight=\"400\"\n                        bg=\"#f1f1f1\"\n                        value={nfCTA}\n                        onChange={(e) => {\n                          setNFCTA(e.target.value);\n                        }}\n                      />\n                      {nfCTA.trim().length == 0 && (\n                        <Span\n                          padding=\"4px 10px\"\n                          right=\"0px\"\n                          top=\"0px\"\n                          pos=\"absolute\"\n                          color=\"#fff\"\n                          bg=\"#000\"\n                          size=\"0.7rem\"\n                          z=\"1\"\n                        >\n                          Call to Action URL\n                        </Span>\n                      )}\n                    </Item>\n                  </ItemH>\n                )}\n\n                {nfInfo && nfProcessing != 1 && (\n                  <Item\n                    color=\"#fff\"\n                    bg=\"#e1087f\"\n                    padding=\"10px 15px\"\n                    margin=\"15px 0px\"\n                  >\n                    <Span\n                      color=\"#fff\"\n                      textTransform=\"uppercase\"\n                      spacing=\"0.1em\"\n                      weight=\"400\"\n                      size=\"1em\"\n                    >\n                      {nfInfo}\n                    </Span>\n                  </Item>\n                )}\n\n                {nfType && (\n                  <Item\n                    margin=\"15px 0px 0px 0px\"\n                    flex=\"1\"\n                    self=\"stretch\"\n                    align=\"stretch\"\n                  >\n                    <Button\n                      bg=\"#e20880\"\n                      color=\"#fff\"\n                      flex=\"1\"\n                      radius=\"0px\"\n                      padding=\"20px 10px\"\n                      disabled={nfProcessing == 1 ? true : false}\n                    >\n                      {nfProcessing == 1 && (\n                        <Loader\n                          type=\"Oval\"\n                          color=\"#fff\"\n                          height={24}\n                          width={24}\n                        />\n                      )}\n                      {nfProcessing != 1 && (\n                        <Input\n                          cursor=\"hand\"\n                          textTransform=\"uppercase\"\n                          color=\"#fff\"\n                          weight=\"400\"\n                          size=\"0.8em\"\n                          spacing=\"0.2em\"\n                          type=\"submit\"\n                          value=\"Send Notification\"\n                        />\n                      )}\n                    </Button>\n                  </Item>\n                )}\n              </FormSubmision>\n            </Item>\n          </ModifiedContent>\n        </Section>\n      )}\n    </>\n  );\n}\n\n// css styles\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`;\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`;\n\nconst DropdownStyledParent = styled.div`\n  .is-open {\n    margin-bottom: 130px;\n  }\n`;\n\nconst MultiRecipientsContainer = styled.div`\n  width: 100%;\n  padding: 0px 20px;\n  padding-top: 10px;\n  box-sizing: border-box;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 7px 15px;\n\n  span {\n    color: white;\n    background: #e20880;\n    padding: 6px 10px;\n    border-radius: 5px;\n\n    i {\n      cursor: pointer;\n      margin-left: 25px;\n    }\n  }\n`;\n\nconst ModifiedContent = styled(Content)`\n  padding-top: 20px;\n  font-weight: 400;\n`;\n\nconst DropdownHeader = styled.div`\n  color: black;\n  padding: 10px;\n  letter-spacing: 3px;\n  font-size: 14px;\n`;\n\nconst DropdownStyled = styled(Dropdown)`\n  .Dropdown-control {\n    background-color: #000;\n    color: #fff;\n    padding: 12px 52px 12px 10px;\n    border: 1px solid #000;\n    border-radius: 4px;\n  }\n\n  .Dropdown-placeholder {\n    text-transform: uppercase;\n    font-weight: 400;\n    letter-spacing: 0.2em;\n    font-size: 0.8em;\n  }\n\n  .Dropdown-arrow {\n    top: 18px;\n    bottom: 0;\n    border-color: #fff transparent transparent;\n  }\n\n  .Dropdown-menu {\n    border: 1px solid #000;\n    box-shadow: none;\n    background-color: #000;\n    border-radius: 0px;\n    margin-top: -2px;\n    border-bottom-right-radius: 4px;\n    border-bottom-left-radius: 4px;\n  }\n\n  .Dropdown-option {\n    background-color: rgb(35 35 35);\n    color: #ffffff99;\n\n    text-transform: uppercase;\n    letter-spacing: 0.2em;\n    font-size: 0.7em;\n    padding: 15px 20px;\n  }\n\n  .Dropdown-option:hover {\n    background-color: #000000;\n    color: #fff;\n  }\n`;\n\nconst DropdownStyledWhite = styled(DropdownStyled)`\n  .Dropdown-control {\n    color: #000;\n    background: #fafafa;\n    border: 0px;\n    padding: 15px 52px 15px 10px;\n  }\n  .Dropdown-arrow {\n    border-color: #000 transparent transparent;\n    top: 30px;\n  }\n  .Dropdown-menu {\n    border: 0px;\n    background-color: #fafafa;\n  }\n  .Dropdown-option {\n    background-color: #fafafa;\n    color: black;\n    transition: 300ms;\n  }\n  .Dropdown-option:hover {\n    background-color: #e7e6e6;\n  }\n  .Dropdown-option.is-selected {\n    background-color: #f1efef;\n  }\n`;\n\nconst DropdownStyledParentWhite = styled(DropdownStyledParent)`\n  margin-bottom: 20px;\n  border: 1px solid rgba(169, 169, 169, 0.5);\n`;\n\nconst CustomDropdownItem = styled.div`\n  display: flex;\n  align-items: center;\n  img {\n    height: 30px;\n    width: 30px;\n    border-radius: 50%;\n    margin-right: 10px;\n  }\n  div {\n    color: black;\n    font-size: 16px;\n    letter-spacing: 2px;\n  }\n`;\n\n// Export Default\nexport default SendNotifications;\n","import React, {useRef, useState} from 'react';\nimport { useClick, useClickAway } from 'react-use';\nimport styled from 'styled-components';\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport Loader from 'react-loader-spinner';\n\nimport {Item, H2, H3, Span, Button, Input} from 'components/SharedStyling';\n\nconst ethers = require('ethers');\n\n\nexport default function AddDelegateModal({\n    onClose,onSuccess, addDelegate\n}) {\n\n    const modalRef = useRef(null);\n    const [mainAdress, setMainAddress] = useState('');\n    const [loading, setLoading] = useState('');\n\n    // Form signer and contract connection\n    useClickAway(modalRef, onClose);\n\n    const addDelegateFunction = () => {\n        setLoading('loading')\n        addDelegate(mainAdress)\n        .then(async (tx) => {\n            console.log(tx);\n            setLoading(\"Transaction Sent!\");\n\n            setTimeout(() => {\n                onSuccess();\n                onClose();\n            }, 2000);\n\n        })\n        .catch((err) => {\n            console.log({\n                err\n            })\n            setLoading('There was an error');\n            setTimeout(() => {\n                setLoading('')\n            }, 2000)\n        })\n    };\n    \n\n    return (\n        <Overlay>\n            <AliasModal ref={modalRef}>\n                <Item align=\"flex-start\">\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                    <Span weight=\"200\">Add </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Delegate</Span>\n                    </H2>\n                    <H3>Add an account who can send notifications on your behalf.</H3>\n                </Item>\n                <Item align=\"flex-start\">\n                    <CustomInput\n                        required\n                        placeholder=\"Enter the ethereum address\"\n                        radius=\"4px\"\n                        padding=\"12px\"\n                        border=\"1px solid #674c9f\"\n                        bg=\"#fff\"\n                        value={mainAdress}\n                        onChange={(e) => {setMainAddress(e.target.value)}}\n                    />\n                </Item>\n                <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                    <Button\n                        bg='#e20880'\n                        color='#fff'\n                        flex=\"1\"\n                        radius=\"0px\"\n                        padding=\"20px 10px\"\n                        disabled={mainAdress.length !== 42}\n                        onClick={addDelegateFunction}\n                    >\n                        { loading && <Loader\n                            type=\"Oval\"\n                            color=\"#FFF\"\n                            height={16}\n                            width={16}\n                            />\n                        }\n                        <StyledInput\n                            cursor=\"hand\"\n                            textTransform=\"uppercase\"\n                            color=\"#fff\" weight=\"400\"\n                            size=\"0.8em\" spacing=\"0.2em\"\n                            value={loading ? loading : \"Add Delegate\"}\n                        />\n                    </Button>\n                </Item>\n            </AliasModal>\n        </Overlay>\n    )\n}\n\nconst StyledInput = styled(Input)`\n    width: 100%;\n    text-align: center;\n    caret-color: transparent;\n`\n\nconst CustomInput = styled(Input)`\n    box-sizing: border-box;\n    width: 100%;\n    margin: 20px 0px;\n`;\n\nconst Overlay = styled.div`\n    top: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0,0,0,0.85);\n    height: 100%;\n    width: 100%;\n    z-index: 1000;\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow-y: scroll;\n`;\n\nconst AliasModal = styled.div`\n    padding: 20px 30px;\n    background: white;\n`;","import React, {useRef, useState} from 'react';\nimport { useClickAway } from 'react-use';\nimport styled from 'styled-components';\nimport Loader from 'react-loader-spinner';\n\nimport {Item, H2, H3, Span, Button, Input} from 'components/SharedStyling';\n\n\n\nexport default function RemoveDelegateModal({\n    onClose,onSuccess, removeDelegate\n}) {\n\n    const modalRef = useRef(null);\n    const [mainAdress, setMainAddress] = useState('');\n    const [loading, setLoading] = useState('');\n\n    // Form signer and contract connection\n    useClickAway(modalRef, onClose);\n\n    const addDelegateFunction = () => {\n        setLoading('loading')\n        removeDelegate(mainAdress)\n        .then(async (tx) => {\n            console.log(tx);\n            setLoading(\"Transaction Sent!\");\n\n            setTimeout(() => {\n                onSuccess();\n                onClose();\n            }, 2000);\n\n        })\n        .catch((err) => {\n            console.log({\n                err\n            })\n            setLoading('There was an error');\n            setTimeout(() => {\n                setLoading('')\n            }, 2000)\n        })\n    };\n    \n\n    return (\n        <Overlay>\n            <AliasModal ref={modalRef}>\n                <Item align=\"flex-start\">\n                    <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                    <Span weight=\"200\">Remove </Span><Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">Delegate</Span>\n                    </H2>\n                    <H3>Remove an account who can send notifications on your behalf.</H3>\n                </Item>\n                <Item align=\"flex-start\">\n                    <CustomInput\n                        required\n                        placeholder=\"Enter the ethereum address\"\n                        radius=\"4px\"\n                        padding=\"12px\"\n                        border=\"1px solid #674c9f\"\n                        bg=\"#fff\"\n                        value={mainAdress}\n                        onChange={(e) => {setMainAddress(e.target.value)}}\n                    />\n                </Item>\n                <Item margin=\"15px 0px 0px 0px\" flex=\"1\" self=\"stretch\" align=\"stretch\">\n                    <Button\n                        bg='#e20880'\n                        color='#fff'\n                        flex=\"1\"\n                        radius=\"0px\"\n                        padding=\"20px 10px\"\n                        disabled={mainAdress.length !== 42}\n                        onClick={addDelegateFunction}\n                    >\n                        { loading && <Loader\n                            type=\"Oval\"\n                            color=\"#FFF\"\n                            height={16}\n                            width={16}\n                            />\n                        }\n                        <StyledInput\n                            cursor=\"hand\"\n                            textTransform=\"uppercase\"\n                            color=\"#fff\" weight=\"400\"\n                            size=\"0.8em\" spacing=\"0.2em\"\n                            value={loading ? loading : \"Remove Delegate\"}\n                        />\n                    </Button>\n                </Item>\n            </AliasModal>\n        </Overlay>\n    )\n}\n\nconst StyledInput = styled(Input)`\n    width: 100%;\n    text-align: center;\n    caret-color: transparent;\n`\n\nconst CustomInput = styled(Input)`\n    box-sizing: border-box;\n    width: 100%;\n    margin: 20px 0px;\n`;\n\nconst Overlay = styled.div`\n    top: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0,0,0,0.85);\n    height: 100%;\n    width: 100%;\n    z-index: 1000;\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow-y: scroll;\n`;\n\nconst AliasModal = styled.div`\n    padding: 20px 30px;\n    background: white;\n`;","import React, { useRef, useState } from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport styled from \"styled-components\";\nimport Loader from \"react-loader-spinner\";\nimport { useClickAway } from \"react-use\";\nimport {\n  Section,\n  Content,\n  Item,\n  H3,\n  Span,\n  Button,\n} from \"components/SharedStyling\";\n\nconst MIN_STAKE_FEES = 50;\n\nexport default function ActivateChannelModal({\n  activateChannel,\n  loading,\n  setChannelStakeFees,\n  channelStakeFees,\n  onClose,\n}) {\n  const popupRef = React.useRef(null);\n  useClickAway(popupRef, onClose); //close the popoup when we click away\n  return (\n    <PopupOverlay>\n      <PopupSlider ref={popupRef}>\n        <Section>\n          <Content padding=\"50px 0px 0px 0px\">\n            <Item align=\"flex-start\" margin=\"0px 20px\">\n              <H3 color=\"#e20880\">Set your staking fees in DAI</H3>\n            </Item>\n\n            <Item\n              margin=\"-10px 20px 20px 20px\"\n              padding=\"20px 20px 10px 20px\"\n              bg=\"#f1f1f1\"\n            >\n              <Slider\n                defaultValue={MIN_STAKE_FEES}\n                onChangeCommitted={(_, value) =>\n                  setChannelStakeFees(Number(value))\n                }\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                step={MIN_STAKE_FEES}\n                marks\n                min={MIN_STAKE_FEES}\n                max={25000}\n              />\n              <Span\n                weight=\"400\"\n                size=\"1.0em\"\n                textTransform=\"uppercase\"\n                spacing=\"0.2em\"\n              >\n                Amount Staked: {channelStakeFees} DAI\n              </Span>\n            </Item>\n\n            <Item self=\"stretch\" align=\"stretch\" margin=\"20px 0px 0px 0px\">\n              <Button\n                bg=\"#e20880\"\n                color=\"#fff\"\n                flex=\"1\"\n                radius=\"0px\"\n                padding=\"20px 10px\"\n                onClick={activateChannel}\n              >\n                {loading ? (\n                  <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n                ) : (\n                  <Span\n                    color=\"#fff\"\n                    weight=\"400\"\n                    textTransform=\"uppercase\"\n                    spacing=\"0.1em\"\n                  >\n                    Reactivate Channel\n                  </Span>\n                )}\n              </Button>\n            </Item>\n          </Content>\n        </Section>\n      </PopupSlider>\n    </PopupOverlay>\n  );\n}\n\nconst PopupOverlay = styled.div`\n  background: rgba(0, 0, 0, 0.5);\n  height: 100vh;\n  width: 100vw;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst PopupSlider = styled.div`\n  height: 200px;\n  width: 70vw;\n  background: white;\n`;\n","/**\n * This file helps us to maintain the state of the logged in user user(if they have an account)\n * as well as the privilidges the logged in user has\n */\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    channelDetails: null,\n    canVerify: false,\n    delegatees: []\n};\n\nexport const contractSlice = createSlice({\n    name: \"admin\",\n    initialState,\n    reducers: {\n        setUserChannelDetails: (state, action) => {\n            state.channelDetails = action.payload;\n        },\n        setCanVerify: (state, action) => {\n            state.canVerify = action.payload;\n        },\n        setDelegatees: (state, action) => {\n            state.delegatees = action.payload;\n        }\n    }\n});\n\nexport const {\n    setUserChannelDetails,\n    setCanVerify,\n    setDelegatees\n} = contractSlice.actions;\n\nexport default contractSlice.reducer;","import React from \"react\";\nimport { Section, Content, Item } from \"components/SharedStyling\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled, { css } from \"styled-components\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { toast as toaster } from \"react-toastify\";\nimport { addresses, abis } from \"@project/contracts\";\nimport { postReq } from \"api\";\n\nimport { ALLOWED_CORE_NETWORK } from \"pages/Home\";\nimport AddDelegateModal from \"./AddDelegateModal\";\nimport RemoveDelegateModal from \"./RemoveDelegateModal\";\nimport ActivateChannelModal from \"./ActivateChannelModal\";\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\nimport { setUserChannelDetails } from \"redux/slices/adminSlice\";\n\nimport \"react-dropdown/style.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nimport Loader from \"react-loader-spinner\";\nconst ethers = require(\"ethers\");\n\nconst MIN_STAKE_FEES = 50;\n\n// Create Header\nfunction ChannelSettings() {\n  const dispatch = useDispatch();\n  const { account, library, chainId } = useWeb3React();\n  const { epnsWriteProvider, epnsCommWriteProvider } = useSelector(\n    (state: any) => state.contracts\n  );\n  const { channelDetails } = useSelector((state: any) => state.admin);\n  const {\n    CHANNNEL_DEACTIVATED_STATE,\n    CHANNEL_BLOCKED_STATE,\n    CHANNEL_ACTIVE_STATE,\n  } = useSelector((state: any) => state.channels);\n\n  const { channelState } = channelDetails;\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\n\n  const [loading, setLoading] = React.useState(false);\n  const [\n    showActivateChannelPopup,\n    setShowActivateChannelPopup,\n  ] = React.useState(false);\n  const [channelStakeFees, setChannelStakeFees] = React.useState(\n    MIN_STAKE_FEES\n  );\n  const [poolContrib, setPoolContrib] = React.useState(0);\n  const [addDelegateLoading, setAddDelegateLoading] = React.useState(false);\n  const [addModalOpen, setAddModalOpen] = React.useState(false);\n  const [removeDelegateLoading, setRemoveDelegateLoading] = React.useState(\n    false\n  );\n  const [removeModalOpen, setRemoveModalOpen] = React.useState(false);\n\n  // toaster customize\n  const LoaderToast = ({ msg, color }) => (\n    <Toaster>\n      <Loader type=\"Oval\" color={color} height={30} width={30} />\n      <ToasterMsg>{msg}</ToasterMsg>\n    </Toaster>\n  );\n\n  // Toastify\n  let notificationToast = () =>\n    toaster.dark(<LoaderToast msg=\"Preparing Notification\" color=\"#fff\" />, {\n      position: \"bottom-right\",\n      autoClose: false,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n  const isChannelDeactivated = channelState === CHANNNEL_DEACTIVATED_STATE;\n  const isChannelBlocked = channelState === CHANNEL_BLOCKED_STATE;\n  const channelInactive = isChannelBlocked || isChannelDeactivated;\n\n  React.useEffect(() => {\n    // To set channel info from a channel details\n    // setChannelState(channelDetails.channelState);\n    setPoolContrib(\n      +EPNSCoreHelper.formatBigNumberToMetric(\n        channelDetails.poolContribution,\n        true\n      )\n    );\n  }, [account]);\n\n  const toggleChannelActivationState = () => {\n    if (isChannelBlocked) return;\n    if (isChannelDeactivated) {\n      setShowActivateChannelPopup(true);\n    } else {\n      deactivateChannel();\n    }\n  };\n\n  /**\n   * Function to activate a channel that has been deactivated\n   */\n  const activateChannel = async () => {\n    // First Approve DAI\n    setLoading(true);\n    var signer = library.getSigner(account);\n    let daiContract = new ethers.Contract(addresses.dai, abis.erc20, signer);\n    const fees = ethers.utils.parseUnits(channelStakeFees.toString(), 18);\n    var sendTransactionPromise = daiContract.approve(addresses.epnscore, fees);\n    const tx = await sendTransactionPromise;\n\n    console.log(tx);\n    console.log(\"waiting for tx to finish\");\n\n    await library.waitForTransaction(tx.hash);\n    await epnsWriteProvider\n      .reactivateChannel(fees)\n      .then(async (tx: any) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toaster.update(notificationToast(), {\n          render: \"Reactivating Channel\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        await tx.wait(1);\n        toaster.update(notificationToast(), {\n          render: \"Channel Reactivated\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n        dispatch(\n          setUserChannelDetails({\n            ...channelDetails,\n            channelState: CHANNEL_ACTIVE_STATE,\n          })\n        );\n      })\n      .catch((err: any) => {\n        console.log(\"!!!Error reactivateChannel() --> %o\", err);\n        toaster.update(notificationToast(), {\n          render: \"Transacion Failed: \" + err.error?.message || err.message,\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n      })\n      .finally(() => {\n        setLoading(false);\n        setShowActivateChannelPopup(false);\n      });\n  };\n\n  /**\n   * Function to deactivate a channel that has been deactivated\n   */\n  const deactivateChannel = async () => {\n    setLoading(true);\n    if (!poolContrib) return;\n\n    const amountToBeConverted = parseInt(\"\" + poolContrib) - 10;\n    console.log(\"Amount To be converted==>\", amountToBeConverted);\n\n    const { data: response } = await postReq(\"/channels/get_dai_to_push\", {\n      value: amountToBeConverted,\n    });\n\n    const pushValue = response.response.data.quote.PUSH.price;\n    const amountsOut = pushValue * Math.pow(10, 18);\n\n    await epnsWriteProvider\n      // .deactivateChannel(amountsOut.toString().replace(/0+$/, \"\")) //use this to remove trailing zeros 1232323200000000 -> 12323232\n      .deactivateChannel(Math.floor(pushValue)) \n      .then(async (tx: any) => {\n        console.log(tx);\n        console.log(\"Transaction Sent!\");\n\n        toaster.update(notificationToast(), {\n          render: \"Transaction sending\",\n          type: toaster.TYPE.INFO,\n          autoClose: 5000,\n        });\n\n        await tx.wait(1);\n        console.log(\"Transaction Mined!\");\n        dispatch(\n          setUserChannelDetails({\n            ...channelDetails,\n            channelState: CHANNNEL_DEACTIVATED_STATE,\n          })\n        );\n      })\n      .catch((err: any) => {\n        console.log(\"!!!Error deactivateChannel() --> %o\", err);\n        console.log({\n          err,\n        });\n        toaster.update(notificationToast(), {\n          render: \"Transacion Failed: \" + err.error?.message || err,\n          type: toaster.TYPE.ERROR,\n          autoClose: 5000,\n        });\n      })\n      .finally(() => {\n        // post op\n        setLoading(false);\n      });\n  };\n\n  const addDelegate = async (walletAddress: string) => {\n    setAddDelegateLoading(true);\n    return epnsCommWriteProvider.addDelegate(walletAddress).finally(() => {\n      setAddDelegateLoading(false);\n    });\n  };\n\n  const removeDelegate = (walletAddress: string) => {\n    setRemoveDelegateLoading(true);\n    return epnsCommWriteProvider.removeDelegate(walletAddress).finally(() => {\n      setRemoveDelegateLoading(false);\n    });\n  };\n\n  if (!onCoreNetwork) {\n    //temporarily deactivate the deactivate button if not on core network\n    return <></>;\n  }\n\n  return (\n    <div>\n      <DropdownWrapper>\n        <DeactivateButton\n          isChannelDeactivated={isChannelDeactivated}\n          onClick={toggleChannelActivationState}\n        >\n          <ActionTitle>\n            {loading ? (\n              \"Loading ...\"\n            ) : isChannelBlocked ? (\n              \"Channel Blocked\"\n            ) : isChannelDeactivated ? (\n              \"Activate Channel\"\n            ) : (\n              \"Deactivate Channel\"\n            )}\n          </ActionTitle>\n        </DeactivateButton>\n        <ActiveChannelWrapper>\n          <ChannelActionButton\n            disabled={channelInactive}\n            onClick={() => !channelInactive && setAddModalOpen(true)}\n          >\n            <ActionTitle>\n              {addDelegateLoading ? (\n                <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n              ) : (\n                \"Add Delegate\"\n              )}\n            </ActionTitle>\n          </ChannelActionButton>\n\n          <ChannelActionButton\n            disabled={channelInactive}\n            onClick={() => !channelInactive && setRemoveModalOpen(true)}\n          >\n            <ActionTitle>\n              {removeDelegateLoading ? (\n                <Loader type=\"Oval\" color=\"#FFF\" height={16} width={16} />\n              ) : (\n                \"Remove Delegate\"\n              )}\n            </ActionTitle>\n          </ChannelActionButton>\n        </ActiveChannelWrapper>\n      </DropdownWrapper>\n      {/* modal to display the activate channel popup */}\n      {showActivateChannelPopup && (\n        <ActivateChannelModal\n          onClose={() => {\n            if (showActivateChannelPopup) {\n              setShowActivateChannelPopup(false);\n            }\n          }}\n          activateChannel={activateChannel}\n          loading={loading}\n          setChannelStakeFees={setChannelStakeFees}\n          channelStakeFees={channelStakeFees}\n        />\n      )}\n      {/* modal to add a delegate */}\n      {addModalOpen && (\n        <AddDelegateModal\n          onClose={() => setAddModalOpen(false)}\n          onSuccess={() => {\n            toaster.update(notificationToast(), {\n              render: \"Delegate Added\",\n              type: toaster.TYPE.INFO,\n              autoClose: 5000,\n            });\n          }}\n          addDelegate={addDelegate}\n        />\n      )}\n      {/* modal to remove a delegate */}\n      {removeModalOpen && (\n        <RemoveDelegateModal\n          onClose={() => {\n            setRemoveModalOpen(false);\n          }}\n          onSuccess={() => {\n            toaster.update(notificationToast(), {\n              render: \"Delegate Removed\",\n              type: toaster.TYPE.INFO,\n              autoClose: 5000,\n            });\n          }}\n          removeDelegate={removeDelegate}\n        />\n      )}\n    </div>\n  );\n}\n\n// css styles\nconst DropdownWrapper = styled.div`\n  position: absolute;\n  right: 20px;\n  display: flex;\n  flex-direction: column-reverse;\n  width: 220px;\n  height: 230px;\n  padding: 20px;\n  padding-top: 30px;\n\n  background: #ffffff;\n  border: 1px solid #a9a9a9;\n  box-sizing: border-box;\n  box-shadow: 0px 4px 30px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  justify-content: space-between;\n`;\n\nconst ActiveChannelWrapper = styled.div`\n  flex-direction: column;\n  gap: 20px;\n  display: ${(props) => (props.inactive ? \"none\" : \"flex\")};\n`;\n\nconst Toaster = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0px 10px;\n`;\n\nconst ActionTitle = styled.span`\n  ${(props: any) =>\n    props.hideit &&\n    css`\n      visibility: hidden;\n    `};\n`;\n\nconst ToasterMsg = styled.div`\n  margin: 0px 10px;\n`;\n\nconst DeactivateButton = styled.div`\n  text-decoration: underline;\n  color: ${(props) => (props.isChannelDeactivated ? \"#674C9F\" : \"#e20880\")};\n  text-align: center;\n  font-size: 16px;\n  line-height: 20px;\n  cursor: pointer;\n`;\n\nconst ChannelActionButton = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  color: #fff;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 400;\n  position: relative;\n  background-color: #674c9f;\n  &:hover {\n    opacity: ${(props) => (props.disabled ? 0.5 : 0.9)};\n    cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\n    pointer: hand;\n  }\n  &:active {\n    opacity: ${(props) => (props.disabled ? 0.5 : 0.75)};\n    cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\n    pointer: hand;\n  }\n  opacity: ${(props) => (props.disabled ? 0.5 : 1)};\n`;\n\nconst Settings = styled.img`\n  width: 40px;\n  height: 40px;\n  margin-left: auto;\n  margin-right: 30px;\n`;\n\n// Export Default\nexport default ChannelSettings;\n","import React from \"react\";\nimport { useClickAway } from \"react-use\";\nimport styled from \"styled-components\";\nimport ChannelSettingsDropdown from \"./ChannelSettingsDropdown\";\n\nexport default function ChannelSettings() {\n  const [active, setActive] = React.useState(false);\n  const modalRef = React.useRef(null);\n  const toggleActive = () => {\n    setActive((a) => !a);\n  };\n\n  useClickAway(modalRef, () => active && setActive(false));\n\n  return (\n    <SettingsWrapper ref={modalRef}>\n      <Settings\n        active={active}\n        onClick={toggleActive}\n        src=\"/Settings.svg\"\n        alt=\"\"\n      ></Settings>\n      {active && <ChannelSettingsDropdown />}\n    </SettingsWrapper>\n  );\n}\n\nconst SettingsWrapper = styled.div`\n  position: absolute;\n  top: 30px;\n  right: 30px;\n`;\n\nconst Settings = styled.img`\n  width: 40px;\n  height: 40px;\n  margin-left: auto;\n  margin-right: 30px;\n  cursor: pointer;\n  transition: 400ms;\n  transform: ${(props) => (props.active ? \"rotateZ(35deg)\" : \"none\")};\n`;\n","import React from \"react\";\nimport moment from \"moment\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\nimport { useWeb3React } from \"@web3-react/core\";\nconst DATE_FORMAT = \"DD/MM/YYYY\";\nexport default function ChannelDetails() {\n  const { library } = useWeb3React();\n  const { channelDetails, canVerify } = useSelector((state) => state.admin);\n  const { CHANNEL_ACTIVE_STATE, CHANNNEL_DEACTIVATED_STATE } = useSelector(\n    (state) => state.channels\n  );\n  const [verifyingChannel, setVerifyingChannel] = React.useState([]);\n  const [creationDate, setCreationDate] = React.useState(\"\");\n  const { channelState } = channelDetails;\n  const channelIsActive = channelState === CHANNEL_ACTIVE_STATE;\n  const channelIsDeactivated = channelState === CHANNNEL_DEACTIVATED_STATE;\n\n  React.useEffect(() => {\n    if (!channelDetails || !canVerify) return;\n    (async function() {\n      let channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(\n        channelDetails.verifiedBy\n      );\n      setVerifyingChannel(channelJson);\n    })();\n  }, [channelDetails, canVerify]);\n\n  React.useEffect(() => {\n    if (!channelDetails) return;\n    (async function() {\n      const bn = channelDetails.channelStartBlock.toString();\n      const block = await library.getBlock(+bn);\n      const date = moment(block.timestamp * 1000);//convert from millisecs\n      setCreationDate(date.format(DATE_FORMAT))\n    })();\n  }, [channelDetails]);\n\n  return (\n    <ChannelDetailsWrapper>\n      <SectionTop>\n        <ImageSection src={channelDetails.icon}></ImageSection>\n\n        <Details>\n          <ChannelName>\n            {channelDetails.name}\n            {canVerify && <VerifyImage src=\"/verify.png\"></VerifyImage>}\n          </ChannelName>\n          <ChanneStateText active={channelIsActive}>\n            {channelIsActive\n              ? \"ACTIVE\"\n              : channelIsDeactivated\n              ? \"DEACTIVATED\"\n              : \"BLOCKED\"}\n          </ChanneStateText>\n          <Subscribers>\n            <img src=\"/people.svg\"></img>\n            <SubscribersCount>\n              {channelDetails.subscribers.length}\n            </SubscribersCount>\n          </Subscribers>\n        </Details>\n      </SectionTop>\n\n      <SectionDes>{channelDetails.info}</SectionDes>\n\n      <SectionDate>\n        {canVerify && (\n          <Verified>\n            <span>verified by:</span>\n\n            <VerifyingIcon src={verifyingChannel.icon}></VerifyingIcon>\n            <VerifyingName>{verifyingChannel.name}</VerifyingName>\n          </Verified>\n        )}\n\n        <Date>\n          <span>created on:</span>\n          <span style={{ marginLeft: \"10px\" }}>{creationDate}</span>\n        </Date>\n      </SectionDate>\n\n      <hr />\n    </ChannelDetailsWrapper>\n  );\n}\n\nconst ChannelDetailsWrapper = styled.div`\n  padding: 30px;\n  padding-bottom: 0;\n`;\n\nconst SectionTop = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n\nconst ImageSection = styled.img`\n  width: 120px;\n  height: 120px;\n  border-radius: 50%;\n  margin-right: 20px;\n`;\nconst VerifyImage = styled.img`\n  width: 20px;\n  height: 25px;\n  margin-top: auto;\n  margin-bottom: auto;\n  margin-left: 8px;\n`;\n\nconst VerifyingIcon = styled.img`\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  margin-left: 6px;\n  margin-right: 5px;\n`;\n\nconst VerifyingName = styled.div``;\n\nconst Subscribers = styled.div`\n  height: fit-content;\n  display: flex;\n  align-items: center;\n`;\n\nconst ActiveIcon = styled.span`\n  width: 8px;\n  height: 8px;\n  background: #57c255;\n  border-radius: 50%;\n`;\n\nconst ChanneStateText = styled.span`\n  color: #57c255;\n  font-family: Source Sans Pro;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 18px;\n  line-height: 23px;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  color: ${(props) => (props.active ? \"#57c255\" : \"red\")};\n  margin-bottom: 8px;\n  display: flex;\n  align-items: center;\n\n  ${(props) =>\n    props.active &&\n    `\n        &::after {\n            width:8px;\n            height: 8px;\n            background: #57c255;\n            border-radius: 50%;\n            content: \"\";\n            display: inline-flex;\n            align-items: center;\n            margin-left: 6px;\n        }\n    `}\n`;\n\nconst SubscribersCount = styled.span`\n  margin-left: 5px;\n  padding-left: 8px;\n  padding-right: 8px;\n  height: 16px;\n  background: #35c5f3;\n  border-radius: 10px;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 17px;\n  display: inline-block;\n  color: #ffffff;\n`;\n\nconst Details = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst SectionLine = styled.div`\n  margin-left: 30px;\n  margin-right: 30px;\n`;\n\nconst Date = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 240px;\n  color: #674c9f;\n`;\n\nconst Verified = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  & > span {\n    color: #ec008c;\n    fontsize: 1em;\n    fontweight: bolder;\n  }\n`;\n\nconst ChannelName = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  font-family: Source Sans Pro;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 30px;\n  line-height: 38px;\n  margin-right: 8px;\n  text-transform: capitalize;\n  color: #e20880;\n`;\n\nconst SectionDate = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 25px;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  margin-bottom: 30px;\n`;\n\nconst SectionDes = styled.div`\n  font-family: Source Sans Pro;\n  font-style: normal;\n  font-weight: 300;\n  font-size: 24px;\n  line-height: 30px;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  color: #000000;\n  margin-bottom: 40px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Section, Content } from \"components/SharedStyling\";\n\nimport SendNotifications from \"components/SendNotifications\";\nimport ChannelSettings from \"components/ChannelSettings\";\nimport ChannelDetails from \"components/ChannelDetails\";\nimport CreateChannel from \"components/CreateChannel\";\nimport { useSelector } from \"react-redux\";\n\n// CREATE CHANNEL OWNER DASHBOARD\nfunction ChannelOwnerDashboard() {\n  const { channelDetails, delegatees } = useSelector((state) => state.admin);\n  return (\n    <>\n      <Section>\n        <ModifiedContent>\n          {/* display the create channel page if there are no details */}\n          {!channelDetails ? <CreateChannel /> : \"\"}\n          {/* display the create channel page if there are no details */}\n          {/* display the channel settings */}\n          {channelDetails ? <ChannelSettings /> : \"\"}\n          {/* display the channel settings */}\n          {/* display the details about the profile of the channel */}\n          {channelDetails ? <ChannelDetails /> : \"\"}\n          {/* display the details about the profile of the channel */}\n          {/* display the notifications settings */}\n          {channelDetails || delegatees?.length ? <SendNotifications /> : \"\"}\n          {/* display the notifications settings */}\n        </ModifiedContent>\n      </Section>\n    </>\n  );\n}\n\n// css styles\nconst ModifiedContent = styled(Content)`\n  padding: 0;\n  position: relative;\n`;\n\n// Export Default\nexport default ChannelOwnerDashboard;\n","import React from \"react\";\n\nimport styled, { css } from 'styled-components';\nimport {Section, Content} from 'components/SharedStyling';\n\nimport CreateChannel from 'components/CreateChannel';\n\n// CREATE CHANNEL OWNER DASHBOARD\nfunction ChannelCreationDashboard() {\n  React.useEffect(() => {\n\n  });\n\n  // RRENDER\n  return (\n    <>\n      <Section>\n        <Content padding=\"0px\">\n          <CreateChannel />\n        </Content>\n      </Section>\n    </>\n  );\n}\n\n// css styles\n\n\n// Export Default\nexport default ChannelCreationDashboard;\n","import EPNSCoreHelper from 'helpers/EPNSCoreHelper';\nimport { ethers } from \"ethers\";\n\nimport { addresses, abis } from \"@project/contracts\";\n\n// STATIC SINGLETON\nexport const UserEvents = {\n    SUBSCRIBED: \"Subscribed\",\n    UNSUBSCRIBED: \"Unsubscribed\",\n    PUBLIC_KEY_BROADCASTED: \"PublicKeyBroadcasted\",\n    CREATED_CHANNEL: \"CreatedChannel\",\n    DEACTIVATE_CHANNEL: \"DeactivateChannel\",\n}\n\nexport default class UsersDataStore {\n    static instance = UsersDataStore.instance || new UsersDataStore();\n\n    state = {\n      usersCount: -1,\n      userMeta: null,\n      ownerMeta: null,\n\n      callbacks: [],\n\n      account: null,\n      epnsReadProvider: null,\n      epnsCommReadProvider: null\n    }\n\n    // init\n    init = (account, epnsReadProvider, epnsCommReadProvider) => {\n      // set account\n      this.state.account = account;\n\n      // First attach listeners then overwrite the old one if any\n      this.resetUsersListeners();\n      this.state.epnsReadProvider = epnsReadProvider;\n      this.state.epnsCommReadProvider = epnsCommReadProvider;\n      this.initUsersListenersAsync();\n\n      // next get store user count & user meta\n      this.getOwnerMetaAsync();\n      this.getUsersCountAsync();\n      this.getUserMetaAsync();\n    }\n\n    // RESET LISTENERS\n    resetUsersListeners = () => {\n      // only proceed if a read provider is attached\n      if (this.state.epnsReadProvider) {\n        this.state.epnsCommReadProvider.removeAllListeners(\"Subscribe\");\n        this.state.epnsCommReadProvider.removeAllListeners(\"Unsubscribe\");\n        this.state.epnsCommReadProvider.removeAllListeners(\"PublicKeyRegistered\");\n        this.state.epnsReadProvider.removeAllListeners(\"AddChannel\");\n        this.state.epnsReadProvider.removeAllListeners(\"DeactivateChannel\");\n      }\n\n      // reset user meta as well\n      this.state.userMeta = null;\n    }\n\n    // init LISTENERS\n    initUsersListenersAsync = async () => {\n      // Add Listeners\n      await this.listenForSubscribedAsync();\n      await this.listenForUnsubscribedAsync();\n\n      if (!this.state.userMeta || (this.state.userMeta && !this.state.userMeta.publicKeyRegistered)) {\n        await this.listenForPublicKeyBroadcastAsync();\n      }\n    }\n\n    // 1. Listen for Subscribe Async\n    listenForSubscribedAsync = async () => {\n      // TODO use the right contract comms\n      // const contract = this.state.epnsReadProvider;\n      // let filter = contract.filters.Subscribe(null, this.state.account);\n\n      // if (this.state.userMeta) {\n      //   this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.add(1);\n      // }\n\n      // contract.on(filter, async (channel, user) => {\n      //   // then perform callbacks\n      //   if (this.state.callbacks[UserEvents.SUBSCRIBED]) {\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.SUBSCRIBED])) {\n      //       if (callback) { callback(channel, user); }\n      //     }\n      //   }\n      // });\n    }\n\n    // 2. Listen for Unsubscribe Async\n    listenForUnsubscribedAsync = async () => {\n      // TODO Use the COMMUNICATOR CONTRACT\n      // const contract = this.state.epnsReadProvider;\n      // let filter = contract.filters.Unsubscribe(null, this.state.account);\n\n      // if (this.state.userMeta) {\n      //   this.state.userMeta.subscribedCount = this.state.userMeta.subscribedCount.sub(1);\n      // }\n\n      // contract.on(filter, async (channel, user) => {\n      //   // then perform callbacks\n      //   if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\n      //       if (callback) { callback(channel, user); }\n      //     }\n      //   }\n      // });\n    }\n\n    // 3. Listen For Public Key Broadcast\n    listenForPublicKeyBroadcastAsync = async () => {\n        // TODO Use the COMMUNICATOR CONTRACT\n      // const contract = this.state.epnsReadProvider;\n      // let filter = contract.filters.PublicKeyRegistered(this.state.account, null);\n\n      // if (this.state.userMeta) {\n      //   this.state.userMeta.publicKeyRegistered = true;\n      // }\n\n      // contract.once(filter, async (channel, user) => {\n      //   // then perform callbacks\n      //   if (this.state.callbacks[UserEvents.UNSUBSCRIBED]) {\n      //     for (let [callbackID, callback] of Object.entries(this.state.callbacks[UserEvents.UNSUBSCRIBED])) {\n      //       if (callback) { callback(channel, user); }\n      //     }\n      //   }\n      // });\n    }\n\n    // FOR CALLBACKS\n    addCallbacks = (callbackType, callbackID, callback) => {\n      // first check if callback already exists\n      if (!this.state.callbacks[callbackType]) {\n        this.state.callbacks[callbackType] = {};\n      }\n\n      if (!this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = callback;\n      }\n    }\n\n    removeCallbacks = (callbackType, callbackID) => {\n      // first check if callback already exists\n      if (this.state.callbacks[callbackType][callbackID]) {\n        this.state.callbacks[callbackType][callbackID] = null;\n      }\n    }\n\n    // GET OWNER META\n    getOwnerMetaAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise ((resolve, reject) => {\n        if (this.state.ownerMeta) {\n          if (enableLogs) console.log(\"getOwnerMetaAsync() [CACHED] --> %o\", this.state.ownerMeta);\n          resolve(this.state.ownerMeta);\n        }\n        else {\n          EPNSCoreHelper.getOwnerInfo(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.ownerMeta = response;\n\n              if (enableLogs) console.log(\"getOwnerMetaAsync() --> %o\", response);\n              resolve(this.state.ownerMeta);\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getOwnerMetaAsync() --> %o\", err);\n              // reject(err);\n              resolve({})\n            });\n        }\n      });\n    }\n\n    // USERS COUNT\n    getUsersCountAsync = async () => {\n      return new Promise (async (resolve, reject) => {\n        if (this.state.channelsCount == -1) {\n          // Count not set, get and set it first\n          const count = EPNSCoreHelper.getTotalNumberOfUsers(this.state.epnsReadProvider)\n            .then(response => {\n              this.state.usersCount = response;\n              console.log(\"getUsersCountAsync() --> %o\", response);\n              resolve(this.state.usersCount)\n            })\n            .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\n        }\n        else {\n          resolve(this.state.usersCount);\n        }\n      });\n    }\n\n    incrementUsersCountAsync = async (incrementCount) => {\n      return new Promise ((resolve, reject) => {\n        this.getUsersCountAsync()\n          .then(response => {\n            this.state.usersCount = response + incrementCount;\n            console.log(\"incrementChannelsCountAsync() --> %d\", this.state.usersCount);\n            resolve(this.state.usersCount);\n          })\n          .catch(err => { console.log(\"!!!Error, getUsersCountAsync() --> %o\", err); reject(err); });\n      });\n    }\n\n    // GET USER META\n    getUserMetaAsync = async () => {\n      const enableLogs = 0;\n\n      return new Promise ((resolve, reject) => {\n        if (this.state.userMeta) {\n          if (enableLogs) console.log(\"getUserMetaAsync() [CACHED] --> %o\", this.state.userMeta);\n          resolve(this.state.userMeta);\n        }\n        else {\n          EPNSCoreHelper.getUserInfo(this.state.account, this.state.epnsCommReadProvider)\n            .then(response => {\n              this.state.userMeta = response;\n\n              if (enableLogs) console.log(\"getUserMetaAsync() --> %o\", this.state.userMeta);\n              resolve(this.state.userMeta);\n            })\n            .catch(err => {\n              console.log(\"!!!Error, getUserMetaAsync() --> %o\", err);\n              // reject(err);\n              console.log(err);\n              resolve({})\n          });\n        }\n      });\n    }\n\n}\n","/**\n * This file helps us maintain a global state of all contracts to be used across the application\n * This is used to prevent duplication of logic and instantiating contracts multiple times\n * This is also used to prevent passing props everywhere and making the code ugly\n */\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  ZERO_ADDRESS: \"0x0000000000000000000000000000000000000000\",\n  epnsReadProvider: null, // the core contract reader\n  epnsWriteProvider: null, // the core contract with signer\n  epnsCommReadProvider: null, // the communicator contract reader\n  epnsCommWriteProvider: null, // the communicator write contract with signer\n  pushAdminAddress: null, // the address of the push admin\n};\n\nexport const contractSlice = createSlice({\n  name: \"contracts\",\n  initialState,\n  reducers: {\n    setCoreReadProvider: (state, action) => {\n      state.epnsReadProvider = action.payload;\n    },\n    setCoreWriteProvider: (state, action) => {\n      state.epnsWriteProvider = action.payload;\n    },\n    setCommunicatorReadProvider: (state, action) => {\n      state.epnsCommReadProvider = action.payload;\n    },\n    setCommunicatorWriteProvider: (state, action) => {\n      state.epnsCommWriteProvider = action.payload;\n    },\n    setPushAdmin: (state, action) => {\n      state.pushAdminAddress = action.payload;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  setCoreReadProvider,\n  setCoreWriteProvider,\n  setCommunicatorReadProvider,\n  setCommunicatorWriteProvider,\n  setPushAdmin\n} = contractSlice.actions;\n\nexport default contractSlice.reducer;\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport { ethers } from \"ethers\";\nimport styled, { css } from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\nimport hex2ascii from \"hex2ascii\";\nimport { addresses, abis } from \"@project/contracts\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport config from \"config\";\nimport EPNSCoreHelper from \"helpers/EPNSCoreHelper\";\nimport NotificationToast from \"components/NotificationToast\";\nimport AliasVerificationodal from \"components/AliasVerificationModal\";\nimport Info from \"segments/Info\";\nimport Feedbox from \"segments/Feedbox\";\nimport ViewChannels from \"segments/ViewChannels\";\nimport ChannelOwnerDashboard from \"segments/ChannelOwnerDashboard\";\nimport ChannelCreationDashboard from \"segments/ChannelCreationDashboard\";\nimport ChannelsDataStore from \"singletons/ChannelsDataStore\";\nimport UsersDataStore from \"singletons/UsersDataStore\";\nimport { postReq } from \"api\";\nimport {\n  setCoreReadProvider,\n  setCoreWriteProvider,\n  setCommunicatorReadProvider,\n  setCommunicatorWriteProvider,\n  setPushAdmin,\n} from \"redux/slices/contractSlice\";\nimport {\n  setUserChannelDetails,\n  setCanVerify,\n  setDelegatees,\n} from \"redux/slices/adminSlice\";\nimport { addNewNotification } from \"redux/slices/notificationSlice\";\nexport const ALLOWED_CORE_NETWORK = 1; //chainId of network which we have deployed the core contract on\nconst CHANNEL_TAB = 0; //Default to 1 which is the channel tab\n\n// Create Header\nfunction Home() {\n  ReactGA.pageview(\"/home\");\n\n  const dispatch = useDispatch();\n  const { account, library, chainId } = useWeb3React();\n  const {\n    epnsReadProvider,\n    epnsWriteProvider,\n    epnsCommReadProvider,\n  } = useSelector((state) => state.contracts);\n\n  const onCoreNetwork = ALLOWED_CORE_NETWORK === chainId;\n  const INITIAL_OPEN_TAB = CHANNEL_TAB; //if they are not on a core network.redirect then to the notifications page\n\n  const [controlAt, setControlAt] = React.useState(0);\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [adminStatusLoaded, setAdminStatusLoaded] = React.useState(false);\n  const [aliasEthAccount, setAliasEthAccount] = React.useState(null);\n  const [aliasVerified, setAliasVerified] = React.useState(null); // null means error, false means unverified and true means verified\n  const [channelAdmin, setChannelAdmin] = React.useState(false);\n  const [channelJson, setChannelJson] = React.useState([]);\n\n  // toast related section\n  const [toast, showToast] = React.useState(null);\n  const clearToast = () => showToast(null);\n  const showNetworkToast = () => {\n    showToast({\n      notificationTitle: (\n        <span style={{ color: \"#e20880\" }}> Invalid Network </span>\n      ),\n      notificationBody:\n        \"Please connect to the Ethereum network to access channels\",\n    });\n  };\n  /**\n   * Event listener for new notifications\n   */\n  const listenFornewNotifications = () => {\n    const event = \"SendNotification\";\n    //callback function for listener\n    const cb = async (eventChannelAddress, eventUserAddress, identityHex) => {\n      const userAddress = account;\n      const identity = hex2ascii(identityHex);\n      const notificationId = identity\n        .concat(\"+\")\n        .concat(eventChannelAddress)\n        .concat(\"+\")\n        .concat(eventUserAddress)\n        .toLocaleLowerCase();\n      const ipfsId = identity.split(\"+\")[1];\n      const channelJson = await ChannelsDataStore.instance.getChannelJsonAsync(\n        eventChannelAddress\n      );\n\n      // Form Gateway URL\n      const url = \"https://ipfs.io/ipfs/\" + ipfsId;\n      fetch(url)\n        .then((result) => result.json())\n        .then(async (result) => {\n          const ipfsNotification = { ...result };\n          const notificationTitle =\n            ipfsNotification.notification.title !== \"\"\n              ? ipfsNotification.notification.title\n              : channelJson.name;\n          const toastMessage = {\n            notificationTitle,\n            notificationBody: ipfsNotification.notification.body,\n          };\n          const notificationObject = {\n            title: notificationTitle,\n            message: ipfsNotification.data.amsg,\n            cta: ipfsNotification.data.acta,\n            app: channelJson.name,\n            icon: channelJson.icon,\n            image: ipfsNotification.data.aimg,\n          };\n\n          if (ipfsNotification.data.type === \"1\") {\n            const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(\n              eventChannelAddress\n            );\n            const isSubscribed = channelSubscribers.find((sub) => {\n              return sub.toLowerCase() === account.toLowerCase();\n            });\n            if (isSubscribed) {\n              console.log(\"message recieved\", notificationObject);\n              showToast(toastMessage);\n              dispatch(addNewNotification(notificationObject));\n            }\n          } else if (userAddress === eventUserAddress) {\n            showToast(toastMessage);\n            dispatch(addNewNotification(notificationObject));\n          }\n        })\n        .catch((err) => {\n          console.log(\n            \"!!!Error, getting new notification data from ipfs --> %o\",\n            err\n          );\n        });\n    };\n    epnsCommReadProvider.on(event, cb);\n    return () => epnsCommReadProvider.off.bind(epnsCommReadProvider, event, cb); //when we unmount we remove the listener\n  };\n\n  //clear toast variable after it is shown\n  React.useEffect(() => {\n    if (toast) {\n      clearToast();\n    }\n  }, [toast]);\n  // toast related section\n\n  /**\n   * Logic to get channel alias and alias verification status as well as create instances of core and comunicator contract\n   */\n  React.useEffect(() => {\n    (async function init() {\n      const coreProvider = onCoreNetwork\n        ? library\n        : ethers.getDefaultProvider(ALLOWED_CORE_NETWORK, {\n            etherscan: config.etherscanToken,\n          });\n      // if we are not on the core network then check for if this account is an alias for another channel\n      if (!onCoreNetwork) {\n        // get the eth address of the alias address, in order to properly render information about the channel\n        const aliasEth = await postReq(\"/channels/get_eth_address\", {\n          aliasAddress: account,\n          op: \"read\",\n        }).then(({ data }) => {\n          console.log({ data });\n          const ethAccount = data;\n          if (ethAccount) {\n            setAliasEthAccount(ethAccount.ethAddress);\n          }\n          return data;\n        });\n        if (aliasEth) {\n          // if an alias exists, check if its verified.\n          await postReq(\"/channels/get_alias_verification_status\", {\n            aliasAddress: account,\n            op: \"read\",\n          }).then(({ data }) => {\n            // if it returns undefined then we need to let them know to verify their channel\n            if (!data) {\n              setAliasVerified(false);\n              return;\n            }\n            const { status } = data;\n            setAliasVerified(status || null);\n            return data;\n          });\n        }\n      }\n      // if we are not on the core network then fetch if there is an alias address from the api\n      // inititalise the read contract for the core network\n      const coreContractInstance = new ethers.Contract(\n        addresses.epnscore,\n        abis.epnscore,\n        coreProvider\n      );\n      // initialise the read contract for the communicator function\n      const commAddress = onCoreNetwork\n        ? addresses.epnsEthComm\n        : addresses.epnsPolyComm;\n      const commContractInstance = new ethers.Contract(\n        commAddress,\n        abis.epnsComm,\n        library\n      );\n      dispatch(setCommunicatorReadProvider(commContractInstance));\n      dispatch(setCoreReadProvider(coreContractInstance));\n      // initialise the read contract for the communicator function\n      if (!!(library && account)) {\n        let signer = library.getSigner(account);\n        const coreSignerInstance = new ethers.Contract(\n          addresses.epnscore,\n          abis.epnscore,\n          signer\n        );\n        const communicatorSignerInstance = new ethers.Contract(\n          commAddress,\n          abis.epnsComm,\n          signer\n        );\n        dispatch(setCoreWriteProvider(coreSignerInstance));\n        dispatch(setCommunicatorWriteProvider(communicatorSignerInstance));\n      }\n    })();\n  }, [account, chainId]);\n\n  /**\n   * When we instantiate the contract instances, fetch basic information about the user\n   * Corresponding channel owned.\n   */\n  React.useEffect(() => {\n    if (!epnsReadProvider || !epnsCommReadProvider) return;\n    // Reset when account refreshes\n    setChannelAdmin(false);\n    dispatch(setUserChannelDetails(null));\n    setAdminStatusLoaded(false);\n    userClickedAt(INITIAL_OPEN_TAB);\n    setChannelJson([]);\n    // save push admin to global state\n    epnsReadProvider.pushChannelAdmin()\n    .then((response) => {\n      dispatch(setPushAdmin(response));\n    })\n    .catch(err =>{\n      console.log({err})\n    });\n\n    // EPNS Read Provider Set\n    if (epnsReadProvider != null && epnsCommReadProvider != null) {\n      // Instantiate Data Stores\n      UsersDataStore.instance.init(\n        account,\n        epnsReadProvider,\n        epnsCommReadProvider\n      );\n      ChannelsDataStore.instance.init(\n        account,\n        epnsReadProvider,\n        epnsCommReadProvider\n      );\n      checkUserForChannelOwnership();\n      listenFornewNotifications();\n      fetchDelegators();\n    }\n  }, [epnsReadProvider, epnsCommReadProvider]);\n\n  // handle user action at control center\n  const userClickedAt = (controlIndex) => {\n    setControlAt(controlIndex);\n  };\n\n  // fetch all the channels who have delegated to this account\n  const fetchDelegators = () => {\n    postReq(\"/channels/delegatee/get_channels\", {\n      delegateAddress: account,\n      op: \"read\",\n    })\n      .then(async ({ data: delegators }) => {\n        // if there are actual delegators\n        // fetch basic information abouot the channels and store it to state\n        if (delegators && delegators.channelOwners) {\n          const channelInformationPromise = [\n            ...new Set([account, ...delegators.channelOwners])//make the accounts unique\n          ].map((channelAddress) =>\n            ChannelsDataStore.instance\n              .getChannelJsonAsync(channelAddress)\n              .then((res) => ({ ...res, address: channelAddress }))\n              .catch(() => false)\n          );\n          const channelInformation = await Promise.all(\n            channelInformationPromise\n          );\n          dispatch(setDelegatees(channelInformation.filter(Boolean)));\n          // fetch the json information about this delegatee channel and add to global state\n        } else {\n          dispatch(setDelegatees([]));\n        }\n      })\n      .catch(async (err) => {\n        console.log({ err });\n      });\n  };\n\n  // Check if a user is a channel or not\n  const checkUserForChannelOwnership = async () => {\n    // Check if account is admin or not and handle accordingly\n    const ownerAccount = !onCoreNetwork ? aliasEthAccount : account;\n    EPNSCoreHelper.getChannelJsonFromUserAddress(ownerAccount, epnsReadProvider)\n      .then(async (response) => {\n        // if channel admin, then get if the channel is verified or not, then also fetch more details about the channel\n        const verificationStatus = await epnsWriteProvider.getChannelVerfication(\n          ownerAccount\n        );\n        const channelJson = await epnsWriteProvider.channels(ownerAccount);\n        const channelSubscribers = await ChannelsDataStore.instance.getChannelSubscribers(\n          ownerAccount\n        );\n        dispatch(\n          setUserChannelDetails({\n            ...response,\n            ...channelJson,\n            subscribers: channelSubscribers,\n          })\n        );\n        dispatch(setCanVerify(Boolean(verificationStatus)));\n        setChannelJson(response);\n        setChannelAdmin(true);\n        setAdminStatusLoaded(true);\n      })\n      .catch((err) => {\n        console.log(\n          \"There was an error [checkUserForChannelOwnership]:\",\n          err.message\n        );\n        setChannelAdmin(false);\n        setAdminStatusLoaded(true);\n      })\n      .finally(() => {\n        setAdminStatusLoaded(true);\n      });\n  };\n\n  // Render\n  return (\n    <Container>\n      <Controls>\n        <ControlButton\n          index={0}\n          active={controlAt == 0 ? 1 : 0}\n          border=\"#e20880\"\n          onClick={() => {\n            userClickedAt(0);\n          }}\n        >\n          <ControlImage\n            src=\"./svg/feedbox.svg\"\n            active={controlAt == 0 ? 1 : 0}\n          />\n          <ControlText active={controlAt == 0 ? 1 : 0}>Inbox</ControlText>\n        </ControlButton>\n\n        <ControlButton\n          index={1}\n          active={controlAt == 1 ? 1 : 0}\n          border=\"#35c5f3\"\n          onClick={() => {\n            userClickedAt(1);\n          }}\n        >\n          <ControlImage\n            src=\"./svg/channel.svg\"\n            active={controlAt == 1 ? 1 : 0}\n          />\n          <ControlText active={controlAt == 1 ? 1 : 0}>Channels</ControlText>\n        </ControlButton>\n\n        <ControlButton\n          index={2}\n          active={controlAt == 2 ? 1 : 0}\n          border=\"#674c9f\"\n          disabled={!adminStatusLoaded}\n          onClick={() => {\n            if (adminStatusLoaded) {\n              // if youre not on kovan and you dont have a channel, you cannot create except on kovan, so throw error\n              if (!channelAdmin && !onCoreNetwork) {\n                return showNetworkToast();\n              }\n              if (channelAdmin && !aliasVerified && !onCoreNetwork) {\n                return setModalOpen(true);\n              }\n              userClickedAt(2);\n            }\n          }}\n        >\n          {!adminStatusLoaded && (\n            <Loader type=\"Oval\" color=\"#674c9f\" height={32} width={32} />\n          )}\n          {channelAdmin &&\n            adminStatusLoaded &&\n            (onCoreNetwork ? true : aliasVerified) && (\n              <ControlChannelContainer>\n                <ControlChannelImage\n                  src={`${channelJson.icon}`}\n                  active={controlAt == 2 ? 1 : 0}\n                />\n                <ControlChannelText active={controlAt == 2 ? 1 : 0}>\n                  {channelJson.name}\n                </ControlChannelText>\n              </ControlChannelContainer>\n            )}\n          {channelAdmin &&\n            adminStatusLoaded &&\n            aliasVerified === false &&\n            !onCoreNetwork && (\n              <ControlChannelContainer>\n                <ControlChannelImage\n                  src={`${channelJson.icon}`}\n                  active={controlAt == 2 ? 1 : 0}\n                />\n                <ControlChannelText active={controlAt == 2 ? 1 : 0}>\n                  Verify channel alias\n                </ControlChannelText>\n              </ControlChannelContainer>\n            )}\n          {channelAdmin &&\n            adminStatusLoaded &&\n            aliasVerified === null &&\n            !onCoreNetwork && (\n              <ControlChannelContainer>\n                <ControlChannelImage\n                  src={`${channelJson.icon}`}\n                  active={controlAt == 2 ? 1 : 0}\n                />\n                <ControlChannelText active={controlAt == 2 ? 1 : 0}>\n                  Contact the admin\n                </ControlChannelText>\n              </ControlChannelContainer>\n            )}\n          {!channelAdmin && adminStatusLoaded && (\n            <>\n              <ControlImage\n                src=\"./svg/channeladmin.svg\"\n                active={controlAt == 2 ? 1 : 0}\n              />\n              <ControlText active={controlAt == 2 ? 1 : 0}>\n                Create Your Channel\n              </ControlText>\n            </>\n          )}\n        </ControlButton>\n\n        <ControlButton\n          index={3}\n          active={controlAt == 3 ? 1 : 0}\n          border=\"#e20880\"\n          onClick={() => {\n            userClickedAt(3);\n          }}\n        >\n          <ControlImage src=\"./svg/share.svg\" active={controlAt == 3 ? 1 : 0} />\n          <ControlText active={controlAt == 3 ? 1 : 0}>\n            Receive Notifs\n          </ControlText>\n        </ControlButton>\n      </Controls>\n      <Interface>\n        {controlAt == 0 && <Feedbox />}\n        {controlAt == 1 && <ViewChannels />}\n        {controlAt == 2 && adminStatusLoaded && <ChannelOwnerDashboard />}\n        {controlAt == 3 && <Info />}\n        {toast && (\n          <NotificationToast notification={toast} clearToast={clearToast} />\n        )}\n        {modalOpen && (\n          <AliasVerificationodal\n            onClose={() => setModalOpen(false)}\n            onSuccess={() => setAliasVerified(true)}\n            verificationStatus={aliasVerified}\n          />\n        )}\n      </Interface>\n    </Container>\n  );\n}\n\n// css style\nconst Container = styled.div`\n  flex: 1;\n  display: block;\n  flex-direction: column;\n  min-height: calc(100vh - 100px);\n`;\n\nconst Controls = styled.div`\n  flex: 0;\n  display: flex;\n  flex-direction: row;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst ControlButton = styled.div`\n  flex: 1 1 21%;\n  height: 120px;\n  min-width: 200px;\n  background: #fff;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225, 225, 225);\n\n  border-bottom: 10px solid rgb(180, 180, 180);\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-bottom: 10px solid\n    ${(props) => (props.active ? props.border : \"rgb(180,180,180)\")};\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`;\n\nconst ControlImage = styled.img`\n  height: 30%;\n  margin-right: 15px;\n  filter: ${(props) => (props.active ? \"brightness(1)\" : \"brightness(0)\")};\n  opacity: ${(props) => (props.active ? \"1\" : \"0.25\")};\n\n  transition: transform 0.2s ease-out;\n  ${(props) =>\n    props.active &&\n    css`\n      transform: scale(3.5) translate(-20px, 0px);\n      opacity: 0.4;\n    `};\n`;\n\nconst ControlText = styled.label`\n  font-size: 16px;\n  font-weight: 200;\n  opacity: ${(props) => (props.active ? \"1\" : \"0.75\")};\n\n  transition: transform 0.2s ease-out;\n  ${(props) =>\n    props.active &&\n    css`\n      transform: scale(1.3) translate(-10px, 0px);\n    `};\n`;\n\nconst ControlChannelContainer = styled.div`\n  margin: 0px 20px;\n  flex-direction: column;\n  align-items: center;\n  display: flex;\n`;\n\nconst ControlChannelImage = styled.img`\n  width: 20%;\n  margin-bottom: 10px;\n  transition: transform 0.2s ease-out;\n  ${(props) =>\n    props.active &&\n    css`\n      transform: scale(3.5) translate(-40px, 5px);\n      opacity: 0.2;\n      z-index: 1;\n    `};\n`;\n\nconst ControlChannelText = styled.label`\n  font-size: 16px;\n  font-weight: 300;\n  opacity: ${(props) => (props.active ? \"1\" : \"0.75\")};\n  transition: transform 0.2s ease-out;\n  background: -webkit-linear-gradient(#db268a, #34c6f3);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  z-index: 2;\n  ${(props) =>\n    props.active &&\n    css`\n      transform: scale(1.1) translate(0px, -20px);\n    `};\n`;\n\nconst Interface = styled.div`\n  flex: 1;\n  display: flex;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 20px;\n  border: 1px solid rgb(225, 225, 225);\n\n  margin: 15px;\n  overflow: hidden;\n`;\n\n// Export Default\nexport default Home;\n","// Usage:\n//   create component file (e.g. BlockiesIdenticon.js) using uncommented code below\n//   npm install blockies-identicon\n//   in the file you want to use the component (e.g. BlockiesIdenticon.js):\n//   import Blockies from \"blockies/react-component\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\nimport React from 'react';\nimport blockies from \"./blockies\";\n\nexport default class BlockiesIdenticon extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  getOpts () {\n    return {\n      seed: this.props.opts.seed || \"foo\",\n      color: this.props.opts.color || \"#dfe\",\n      bgcolor: this.props.opts.bgcolor || \"#a71\",\n      size: this.props.opts.size || 15,\n      scale: this.props.opts.scale || 3,\n      spotcolor: this.props.opts.spotcolor || \"#000\"\n    };\n  }\n  componentDidMount() {\n    this.draw();\n  }\n  componentDidUpdate(prevProps) {\n    // Check for prop change\n    if (this.props.seed !== prevProps.seed) {\n      this.draw();\n    }\n  }\n  draw() {\n    blockies.render({\n      seed: this.props.opts.seed,\n      size: this.props.opts.size,\n      scale: this.props.opts.scale\n    }, this.canvas);\n  }\n  render() {\n    return React.createElement(\"canvas\", {ref: canvas => this.canvas = canvas});\n  }\n}\n","import React from \"react\";\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\n\nimport styled, { css } from 'styled-components';\n\nimport Loader from 'react-loader-spinner'\nimport Blockies from \"components/BlockiesIdenticon\";\n//   <Blockies opts={{seed: \"foo\", color: \"#dfe\", bgcolor: \"#a71\", size: 15, scale: 3, spotcolor: \"#000\"}}/>\n\n// Create Header\nfunction Profile() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [address, setAddress] = React.useState('');\n  const [ens, setENS] = React.useState('');\n  const [ensFetched, setENSFetched] = React.useState(false);\n\n  React.useEffect(() => {\n    if (account && account != '') {\n      // Check if the address is the same\n      if (address !== account) {\n        setENS('');\n        setENSFetched(false);\n\n        // get ens\n        library\n          .lookupAddress(account).then(function(name) {\n            setENS(name);\n            setENSFetched(true);\n            setAddress(account);\n          })\n          .catch(() => {\n            setENSFetched(true);\n            setAddress(account);\n          })\n      }\n\n    }\n  }, [account]);\n\n  // to create blockies\n\n  return (\n    <>\n    {account && account !== '' && !error &&\n      <Container>\n        <Blocky>\n          <BlockyInner>\n             <Blockies seed={account.toLowerCase()} opts={{seed: account.toLowerCase(), size: 7, scale: 7}}/>\n          </BlockyInner>\n        </Blocky>\n        <Wallet>\n        {!ensFetched &&\n          <Loader\n      \t     type=\"Oval\"\n      \t     color=\"#FFF\"\n      \t     height={16}\n      \t     width={16}\n      \t  />\n        }\n        {ensFetched && ens &&\n          <>{ens}</>\n        }\n        {ensFetched && !ens &&\n          <>{account.substring(0, 6)}.....{account.substring(account.length - 6)}</>\n        }\n        </Wallet>\n      </Container>\n    }\n    </>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  margin: 0;\n  padding: 0;\n  background: none;\n  border: 0;\n  outline: 0;\n  justify-content: flex-start;\n  flex: 1,\n  flex-direction: row;\n  align-items: center;\n  display: flex;\n`\n\nconst Blocky = styled.div`\n  position: relative;\n  width: 50px;\n  height: 50px;\n  border-radius: 100%;\n  overflow: hidden;\n  transform: scale(0.85);\n  outline-width: 2px;\n  outline-color: rgba(225,225,225,1);\n`\n\nconst BlockyInner = styled.div`\n`\n\nconst Wallet = styled.span`\n  margin: 0px 10px;\n  padding: 8px 15px;\n  height: 16px;\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  font-weight: bold;\n  font-size: 14px;\n  color: #fff;\n  border-radius: 15px;\n  background: rgb(226,8,128);\n  background: linear-gradient(107deg, rgba(226,8,128,1) 30%, rgba(103,76,159,1) 70%, rgba(53,197,243,1) 100%);\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\n// Export Default\nexport default Profile;\n","import React from \"react\";\nimport styled, { css, keyframes } from 'styled-components';\nimport { AnimateOnChange } from 'react-animation';\n\n// Create Header\nfunction Bell({ badgeCount, bellPressedCB, width, height }) {\n  const [badge, setBadge] = React.useState(0);\n  const [ring, setRing] = React.useState(false);\n\n  React.useEffect(() => {\n    // Set new badge count and ring the bell\n    setBadge(badgeCount);\n\n    if (badge > 0) {\n      setResetRinger();\n    }\n  }, [badgeCount]);\n\n  const setResetRinger = () => {\n    setRing(true);\n\n    setTimeout(() => {\n        setRing(false)\n    }, 500);\n  }\n\n  return (\n    <Container\n      onClick={() => {\n        if (bellPressedCB) {bellPressedCB();}\n      }}\n      width={width}\n      height={height}\n    >\n      <BellImage ring={ring} src=\"./bell.png\" className=\"tadaaa\" ringme={ring} width={width} height={height} />\n      <BellImageAbs src=\"./bellball.png\" width={width} height={height} />\n      <BellImageAbs src=\"./ring.png\" width={width} height={height} />\n      {badge != 0 &&\n        <AnimateOnChange\n          animationIn=\"fadeIn\"\n          animationOut=\"fadeOut\"\n          durationOut={200}\n        >\n          <Badge>{badge}</Badge>\n        </AnimateOnChange>\n      }\n    </Container>\n  );\n}\n\n// css styles\nconst Container = styled.button`\n  border: 0;\n  outline: 0;\n  background: transparent;\n  border: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 10px;\n  position: relative;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n  }\n`\n\nconst tadaaa = keyframes`\n  0% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n\n  10%, 20% {\n    -webkit-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(.98, .98, .98) rotate3d(0, 0, 1, -5deg);\n  }\n\n  30%, 50%, 70%, 90% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 10, 5deg);\n  }\n\n  40%, 60%, 80% {\n    -webkit-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    -ms-transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n    transform: scale3d(1.08, 1.08, 1.08) rotate3d(0, 0, 1, -5deg);\n  }\n\n  100% {\n    -webkit-transform: scale3d(1, 1, 1);\n    -ms-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n  }\n`;\n\nconst BellImage = styled.img`\n  position: absolute;\n  height: ${props => props.height || 40}px;\n  width: ${props => props.width || 40}px;\n\n  transition: transform .2s ease-out;\n  ${ props => props.ringme && css`\n    animation: ${tadaaa} 1s ease-out;\n  `};\n\n\n`\n\nconst BellImageAbs = styled(BellImage)`\n  left: 0,\n`\n\nconst Badge = styled.span`\n  position: absolute;\n  font-size: 10px;\n  color: #fff;\n  padding: 2px 4px;\n  border-radius: 100%;\n  background: rgba(208.0, 44.0, 30.0, 1.0);\n  top: 0px;\n  left: 5px;\n  font-weight: bold;\n`\n\n// Export Default\nexport default Bell;\n","import React from \"react\";\n\nimport styled, { css } from \"styled-components\";\nimport {Section, Item, ItemH, Button} from 'components/SharedStyling';\n\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { Web3Provider } from 'ethers/providers'\n\nimport Profile from 'components/Profile';\nimport Bell from 'components/Bell';\n\n\n// Create Header\nfunction Header() {\n  const context = useWeb3React<Web3Provider>()\n\n  const { active, error } = useWeb3React();\n  const { deactivate } = context\n\n  const [showLoginControls, setShowLoginControls] = React.useState(false);\n\n  function getErrorMessage(error: Error) {\n    if (error instanceof NoEthereumProviderError) {\n      return 'Web3 not enabled, install MetaMask on desktop or visit from a dApp browser on mobile'\n    } else if (error instanceof UnsupportedChainIdError) {\n      return \"Unsupported Network, please connect to the Ethereum mainnet or Polygon network\"\n    } else if (\n      error instanceof UserRejectedRequestErrorInjected\n    ) {\n      return 'Please authorize this website to access the dApp'\n    } else {\n      console.error(error)\n      return 'An unknown error occurred. Check the console for more details'\n    }\n  }\n\n  const bellPressed = () => {\n    setShowLoginControls(!showLoginControls);\n  }\n\n  const disconnect = () => {\n    setShowLoginControls(false);\n    deactivate();\n  }\n\n  return (\n    <HeaderContainer\n      direction=\"row\"\n      padding=\"10px 15px\"\n    >\n      <ItemH\n        justify=\"flex-start\"\n        flex=\"0\"\n      >\n        {active && !error &&\n          <Profile />\n        }\n        {!active &&\n          <Logo src=\"epns.png\" />\n        }\n      </ItemH>\n\n      <ItemH\n        justify=\"flex-end\"\n      >\n        {active && !error &&\n          <Bell\n            badgeCount={0}\n            bellPressedCB={bellPressed}\n            width={32}\n            height={32}\n          />\n        }\n\n        {showLoginControls &&\n          <Item\n            position=\"absolute\"\n          >\n            <Button\n              bg=\"#000\"\n              size=\"12px\"\n              spacing=\"0.2em\"\n              textTransform=\"uppercase\"\n              weight=\"600\"\n              radius=\"20px\"\n              onClick={() => disconnect()}\n            >\n              Disconnect\n            </Button>\n          </Item>\n        }\n\n        <ItemH\n          justify=\"flex-end\"\n          flex=\"initial\"\n        >\n          {!!error &&\n            <PrimaryTheme>{getErrorMessage(error)}</PrimaryTheme>\n          }\n          {!active && !error &&\n            <ThirdTheme>Please connect to a Web3 Network</ThirdTheme>\n          }\n          <Connection phase={active ? 'active' : error ? 'error' : 'waiting'} />\n        </ItemH>\n      </ItemH>\n    </HeaderContainer>\n  );\n}\n\n// CSS Styles\nconst HeaderContainer = styled(Section)`\n  @media (max-width: 1440px) {\n    background: rgb(255,255,255);\n  }\n`\n\nconst Logo = styled.img`\n  height: 40px;\n`\n\nconst Notice = styled.span`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 15px;\n  margin: 10px;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n`\n\nconst PrimaryTheme = styled(Notice)`\n  background: #e20880;\n`\n\nconst ThirdTheme = styled(Notice)`\n  background: #674c9f;\n`\n\nconst Connection = styled.span`\n  height: 10px;\n  width: 10px;\n  border-radius: 100%;\n  flex-shrink: 0;\n\n  ${props => props.phase === 'active' && css`\n    background: #77DD77;\n  `};\n\n  ${props => props.phase === 'waiting' && css`\n    background: #FFAE42;\n  `};\n\n  ${props => props.phase === 'error' && css`\n    background: #DC143C;\n  `};\n`\n\n// Export Default\nexport default Header;\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Web3Provider } from \"ethers/providers\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { AbstractConnector } from \"@web3-react/abstract-connector\";\nimport { useEagerConnect, useInactiveListener } from \"hooks\";\nimport { injected, walletconnect, portis, ledger } from \"connectors\";\nimport Home from \"pages/Home\";\nimport Header from \"segments/Header\";\nimport styled from \"styled-components\";\nimport { Item, ItemH, Span, H2, B, A } from \"components/SharedStyling\";\n\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\n// define the different type of connectors which we use\nconst web3Connectors = {\n  Injected: {\n    obj: injected,\n    logo: \"./svg/login/metamask.svg\",\n    title: \"MetaMask\",\n  },\n  WalletConnect: {\n    obj: walletconnect,\n    logo: \"./svg/login/walletconnect.svg\",\n    title: \"Wallet Connect\",\n  },\n  // Trezor: {obj: trezor, logo: './svg/login/trezor.svg', title: 'Trezor'},\n  Ledger: { obj: ledger, logo: \"./svg/login/ledger.svg\", title: \"Ledger\" },\n  Portis: { obj: portis, logo: \"./svg/login/portis.svg\", title: \"Portis\" },\n};\n\nexport default function App() {\n  const { connector, activate, active, error } = useWeb3React<Web3Provider>();\n  const [activatingConnector, setActivatingConnector] = React.useState<\n    AbstractConnector\n  >();\n\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector]);\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect();\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector);\n  // Initialize GA\n  ReactGA.initialize(\"UA-165415629-5\");\n  ReactGA.pageview(\"/login\");\n  // Initialize GA\n\n  return (\n    <>\n      <HeaderContainer>\n        <Header/>\n      </HeaderContainer>\n\n      <ParentContainer>\n        {active && !error && (\n          <HomeContainer>\n            <Home />\n          </HomeContainer>\n        )}\n\n        {!active && (\n          <Item>\n            <ProviderLogo\n              src=\"./epnshomelogo.png\"\n              srcSet={\"./epnshomelogo@2x.png 2x, ./epnshomelogo@2x.png 3x\"}\n            />\n            <Item\n              bg=\"#fafafa\"\n              border=\"1px solid #ddd\"\n              padding=\"15px\"\n              radius=\"12px\"\n            >\n              <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n                <Span bg=\"#e20880\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\n                  Connect\n                </Span>\n                <Span weight=\"200\"> Your Wallet</Span>\n              </H2>\n\n              <ItemH maxWidth=\"800px\" align=\"stretch\">\n                {Object.keys(web3Connectors).map((name) => {\n                  const currentConnector = web3Connectors[name].obj;\n                  const connected = currentConnector === connector;\n                  const disabled =\n                    !triedEager ||\n                    !!activatingConnector ||\n                    connected ||\n                    !!error;\n                  const image = web3Connectors[name].logo;\n                  const title = web3Connectors[name].title;\n\n                  return (\n                    <ProviderButton\n                      disabled={disabled}\n                      key={name}\n                      onClick={() => {\n                        setActivatingConnector(currentConnector);\n                        activate(currentConnector);\n                      }}\n                      border=\"#35c5f3\"\n                    >\n                      <ProviderImage src={image} />\n\n                      <Span\n                        spacing=\"0.1em\"\n                        textTransform=\"uppercase\"\n                        size=\"12px\"\n                        weight=\"600\"\n                        padding=\"10px\"\n                      >\n                        {title}\n                      </Span>\n                    </ProviderButton>\n                  );\n                })}\n              </ItemH>\n            </Item>\n\n            <Span margin=\"10px\" size=\"14px\">\n              By unlocking your wallet, <B>You agree</B> to our{\" \"}\n              <A href=\"https://epns.io/tos\" target=\"_blank\">\n                Terms of Service\n              </A>{\" \"}\n              and our{\" \"}\n              <A href=\"https://epns.io/privacy\" target=\"_blank\">\n                Privacy Policy\n              </A>\n              .\n            </Span>\n          </Item>\n        )}\n      </ParentContainer>\n\n      <ToastContainer\n        position=\"bottom-right\"\n        autoClose={false}\n        newestOnTop\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n      />\n    </>\n  );\n}\n\n// CSS STYLES\nconst HeaderContainer = styled.header`\n  left: 0;\n  right: 0;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  z-index: 999;\n`;\n\nconst ParentContainer = styled.div`\n  flex-wrap: wrap;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 80px 20px 50px 20px;\n  flex: 1;\n`;\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-self: center;\n  width: 100%;\n  max-width: 1100px;\n`;\n\nconst ProviderLogo = styled.img`\n  width: 15vw;\n  align-self: center;\n  display: flex;\n  margin: 10px 20px 20px 20px;\n  min-width: 200px;\n`;\n\nconst ProviderButton = styled.button`\n  flex: 1 1 0;\n  min-width: 280px;\n  background: #fff;\n  outline: 0;\n\n  box-shadow: 0px 15px 20px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 15px;\n  border: 1px solid rgb(225, 225, 225);\n\n  margin: 20px;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n\n  &:hover {\n    opacity: 0.9;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${(props) => props.border};\n  }\n  &:active {\n    opacity: 0.75;\n    cursor: pointer;\n    pointer: hand;\n    border: 1px solid ${(props) => props.border};\n  }\n`;\n\nconst ProviderImage = styled.img`\n  width: 32px;\n  max-height: 32px;\n  padding: 10px;\n`;\n\nconst ProviderLabel = styled.span`\n  font-size: 12px;\n  margin: 5px;\n`;\n\nconst StyledContainer = styled(ToastContainer).attrs({\n  // custom props\n})`\n  .Toastify__toast-container {\n  }\n  .Toastify__toast {\n  }\n  .Toastify__toast--error {\n  }\n  .Toastify__toast--warning {\n  }\n  .Toastify__toast--success {\n  }\n  .Toastify__toast-body {\n    font-size: 12px;\n  }\n  .Toastify__progress-bar {\n  }\n`;\n","import {configureStore, combineReducers, getDefaultMiddleware} from '@reduxjs/toolkit';\nimport contractReducer from './slices/contractSlice';\nimport channelReducer from './slices/channelSlice';\nimport adminReducer from './slices/adminSlice';\nimport notificationReducer from './slices/notificationSlice';\n\nconst rootReducer = combineReducers({\n\tcontracts: contractReducer,\n    channels: channelReducer,\n    admin: adminReducer,\n\tnotifications: notificationReducer\n});\n\nconst store = configureStore({\n\treducer: rootReducer,\n\tmiddleware: getDefaultMiddleware({\n\t\tserializableCheck: false,\n\t\timmutableCheck: false\n\t})\n});\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ethers } from \"ethers\";\nimport { Provider } from \"react-redux\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport * as dotenv from \"dotenv\";\n\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\n// enable environmental variables across the entire application\ndotenv.config();\n// You should replace this uri with your own and put it into a .env file\nconst client = new ApolloClient({\n  uri: \"https://api.thegraph.com/subgraphs/name/epnsproject/epnsstaging\",\n  cache: new InMemoryCache(),\n});\n\n/**\n * A utility function used to get the provider\n */\nfunction getLibrary(provider) {\n  const gottenProvider = new ethers.providers.Web3Provider(provider, \"any\");\n  // adding this is important to deal with changing networks\n  gottenProvider.on(\"network\", (_, oldNetwork) => {\n    if (oldNetwork) {\n      // when network has been changed, refresh the page\n      window.location.reload();\n    }\n  });\n  return gottenProvider;\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ApolloProvider client={client}>\n      <Web3ReactProvider getLibrary={getLibrary}>\n        <App />\n      </Web3ReactProvider>\n    </ApolloProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport Select from \"react-select\";\nimport styled, { css } from \"styled-components\";\nimport {\n  Section,\n  Content,\n  Item,\n  ItemH,\n  ItemBreak,\n  H1,\n  H2,\n  H3,\n  Image,\n  P,\n  Span,\n  Anchor,\n  Button,\n  Showoff,\n  FormSubmision,\n  Input,\n  TextField,\n} from \"components/SharedStyling\";\n\nimport { FiLink } from \"react-icons/fi\";\n\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport Dropzone from \"react-dropzone-uploader\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Slider from \"@material-ui/core/Slider\";\n\nimport Loader from \"react-loader-spinner\";\n\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\n\nimport { addresses, abis } from \"@project/contracts\";\nconst ethers = require(\"ethers\");\n\nconst ipfs = require(\"ipfs-api\")();\n\nconst minStakeFees = 50;\nconst ALIAS_CHAINS = [{ value: \"POLYGON_TEST_MUMBAI:80001\", label: \"Polygon\" }];\n\n// Create Header\nfunction CreateChannel() {\n  const { active, error, account, library, chainId } = useWeb3React();\n\n  const [processing, setProcessing] = React.useState(0);\n  const [processingInfo, setProcessingInfo] = React.useState(\"\");\n\n  const [uploadDone, setUploadDone] = React.useState(false);\n  const [stakeFeesChoosen, setStakeFeesChoosen] = React.useState(false);\n  const [channelInfoDone, setChannelInfoDone] = React.useState(false);\n\n  const [chainDetails, setChainDetails] = React.useState(\"\");\n  const [channelName, setChannelName] = React.useState(\"\");\n  const [channelAlias, setChannelAlias] = React.useState(\"\");\n  const [channelInfo, setChannelInfo] = React.useState(\"\");\n  const [channelURL, setChannelURL] = React.useState(\"\");\n  const [channelFile, setChannelFile] = React.useState(undefined);\n  const [channelStakeFees, setChannelStakeFees] = React.useState(minStakeFees);\n\n  const [stepFlow, setStepFlow] = React.useState(1);\n\n  React.useEffect(() => {});\n\n  // called every time a file's `status` changes\n  const handleChangeStatus = ({ meta, file }, status) => {\n    console.log(status, meta, file);\n  };\n\n  const onDropHandler = (files) => {\n    //   var file = files[0]\n    //   const reader = new FileReader();\n    //   reader.onload = (event) => {\n    //     console.log(event.target.result);\n    //   };\n    //   reader.readAsDataURL(file);\n    // setChannelFile(file);\n    // console.log(\"Drop Handler\");\n    // console.log(file);\n  };\n\n  // receives array of files that are done uploading when submit button is clicked\n  const handleLogoSubmit = (files, allFiles) => {\n    // console.log(files.map(f => f.meta))\n    allFiles.forEach((f) => {\n      var file = f.file;\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n      // console.log(f.file);\n\n      reader.onloadend = function(e) {\n        // console.log(reader.result);\n        const response = handleLogoSizeLimitation(reader.result);\n        if (response.success) {\n          setStepFlow(2);\n          setProcessing(0);\n          setUploadDone(true);\n          setChannelFile(reader.result);\n        } else {\n          setProcessing(3);\n          setProcessingInfo(response.info);\n        }\n      };\n    });\n  };\n\n  const handleLogoSizeLimitation = (base64) => {\n    // Setup Error on higher size of 128px\n    var sizeOf = require(\"image-size\");\n    var base64Data = base64.split(\";base64,\").pop();\n    var img = Buffer.from(base64Data, \"base64\");\n    var dimensions = sizeOf(img);\n\n    // Only proceed if image is equal to or less than 128\n    if (dimensions.width > 128 || dimensions.height > 128) {\n      console.log(\"Image size check failed... returning\");\n      return {\n        success: 0,\n        info: \"Image size check failed, Image should be 128X128PX\",\n      };\n    }\n\n    // only proceed if png or jpg\n    // This is brilliant: https://stackoverflow.com/questions/27886677/javascript-get-extension-from-base64-image\n    // char(0) => '/' : jpg\n    // char(0) => 'i' : png\n    let fileext;\n    console.log(base64Data.charAt(0));\n    if (base64Data.charAt(0) == \"/\") {\n      return {\n        success: 1,\n        info: \"Image checks passed\",\n      };\n    } else if (base64Data.charAt(0) == \"i\") {\n      return {\n        success: 1,\n        info: \"Image checks passed\",\n      };\n    } else {\n      return {\n        success: 0,\n        info: \"Image extension should be jpg or png\",\n      };\n    }\n  };\n\n  const handleCreateChannel = async (e) => {\n    // Check everything in order\n    // skip this for now\n    e.preventDefault();\n\n    if (\n      isEmpty(channelName) ||\n      isEmpty(channelInfo) ||\n      isEmpty(channelURL) ||\n      isEmpty(channelFile) ||\n      channelAlias\n        ? isEmpty(chainDetails)\n        : chainDetails\n        ? isEmpty(channelAlias)\n        : false\n    ) {\n      setProcessing(3);\n      setProcessingInfo(\"Channel Fields are Empty! Please retry!\");\n\n      return false;\n    }\n\n    // Check complete, start logic\n    setChannelInfoDone(true);\n    setProcessing(1);\n\n    console.log({\n      chainDetails,\n      channelAlias,\n    });\n    var chainDetailsSplit = chainDetails.split(\":\");\n    var blockchain = chainDetailsSplit[0];\n    var chain_id = chainDetailsSplit[1];\n    var address = channelAlias;\n\n    const input = JSON.stringify({\n      name: channelName,\n      info: channelInfo,\n      url: channelURL,\n      icon: channelFile,\n      blockchain: blockchain,\n      chain_id: chain_id,\n      address: address,\n    });\n\n    const ipfs = require(\"nano-ipfs-store\").at(\"https://ipfs.infura.io:5001\");\n\n    setProcessingInfo(\"Uploading Payload...\");\n    const storagePointer = await ipfs.add(input);\n    console.log(\"IPFS storagePointer:\", storagePointer);\n    setProcessingInfo(\"Payload Uploaded, Approval to transfer DAI...\");\n    //console.log(await ipfs.cat(storagePointer));\n\n    // Send Transaction\n    // First Approve DAI\n    var signer = library.getSigner(account);\n\n    let daiContract = new ethers.Contract(addresses.dai, abis.erc20, signer);\n    console.log('\\n\\n\\n\\n');\n    console.log({\n      daiContract,\n      da: addresses.dai,\n    });\n    console.log('\\n\\n\\n\\n');\n\n    // Pick between 50 DAI AND 25K DAI\n    const fees = ethers.utils.parseUnits(channelStakeFees.toString(), 18);\n\n    var sendTransactionPromise = daiContract.approve(addresses.epnscore, fees);\n    const tx = await sendTransactionPromise;\n\n    console.log(tx);\n    console.log(\"waiting for tx to finish\");\n    setProcessingInfo(\"Waiting for Approval TX to finish...\");\n\n    await library.waitForTransaction(tx.hash);\n\n    let contract = new ethers.Contract(\n      addresses.epnscore,\n      abis.epnscore,\n      signer\n    );\n    console.log('\\n\\n\\n\\n');\n    console.log({\n      contract,\n      ca: addresses.epnscore,\n    });\n    console.log('\\n\\n\\n\\n');\n\n    const channelType = 2; // Open Channel\n    const identity = \"1+\" + storagePointer; // IPFS Storage Type and HASH\n    const identityBytes = ethers.utils.toUtf8Bytes(identity);\n\n    var anotherSendTxPromise = contract.createChannelWithFees(\n      channelType,\n      identityBytes,\n      fees\n    );\n\n    setProcessingInfo(\"Creating Channel TX in progress\");\n    anotherSendTxPromise\n      .then(async function(tx) {\n        console.log(tx);\n        console.log(\"Check: \" + account);\n        await library.waitForTransaction(tx.hash);\n        setProcessing(3);\n        setProcessingInfo(\"Channel Created\");\n      })\n      .catch((err) => {\n        console.log(\"Error --> %o\", err);\n        console.log({ err });\n        setProcessing(3);\n        setProcessingInfo(\n          \"!!!PRODUCTION ENV!!! Contact support@epns.io to whitelist your wallet\"\n        );\n      });\n  };\n\n  const isEmpty = (field) => {\n    if (field.trim().length == 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n  //mind Dai\n  const mintDai = async () => {\n    try {\n      var signer = library.getSigner(account);\n      let daiContract = new ethers.Contract(addresses.dai, abis.dai, signer);\n      console.log({\n        daiContract,\n      });\n      console.log(1);\n      let daiAmount = 1000;\n      const amount = ethers.utils.parseUnits(daiAmount.toString(), 18);\n      console.log(2);\n      var mintTransactionPromise = daiContract.mint(amount);\n      console.log(3);\n      const tx = await mintTransactionPromise;\n      console.log(tx);\n      await library.waitForTransaction(tx.hash);\n      console.log(4);\n      setProcessingInfo(\"1000 Dai minted successfully!\");\n      console.log(\"Transaction Completed\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <>\n      <Section>\n        <Content padding=\"10px 20px 20px\">\n          <Item align=\"flex-start\">\n            <H2 textTransform=\"uppercase\" spacing=\"0.1em\">\n              <Span bg=\"#674c9f\" color=\"#fff\" weight=\"600\" padding=\"0px 8px\">\n                Create\n              </Span>\n              <Span weight=\"200\"> Your Channel!</Span>\n            </H2>\n            <H3>\n              <b>Ethereum Push Notification Service</b> (EPNS) makes it\n              extremely easy to open and maintain a genuine channel of\n              communication with your users.\n            </H3>\n          </Item>\n        </Content>\n      </Section>\n\n      <Section>\n        <Content padding=\"0px 20px 20px\">\n          <ItemH justify=\"space-between\">\n            <Step\n              bg=\"#fff\"\n              activeBG=\"#e20880\"\n              type={stepFlow >= 1 ? \"active\" : \"inactive\"}\n            />\n            <Step\n              bg=\"#fff\"\n              activeBG=\"#e20880\"\n              type={stepFlow >= 2 ? \"active\" : \"inactive\"}\n            />\n            <Step\n              bg=\"#fff\"\n              activeBG=\"#e20880\"\n              type={stepFlow >= 3 ? \"active\" : \"inactive\"}\n            />\n            <Line />\n          </ItemH>\n        </Content>\n      </Section>\n\n      {/* Image Upload Section */}\n      {!uploadDone && (\n        <Section>\n          <Content padding=\"50px 20px 20px\">\n            <Item align=\"flex-start\">\n              <H3 color=\"#e20880\">\n                Upload Channel Logo to start the process. Make sure image is\n                128x128px.\n              </H3>\n            </Item>\n\n            <Item margin=\"-10px 0px 20px 0px\">\n              <Dropzone\n                onChangeStatus={handleChangeStatus}\n                onSubmit={handleLogoSubmit}\n                onDrop={onDropHandler}\n                maxFiles={1}\n                multiple={false}\n                accept=\"image/jpeg,image/png\"\n              />\n            </Item>\n            {/* <Item align=\"flex-end\">\n              <Minter\n                onClick={() => {\n                  mintDai();\n                }}\n              >\n                <Pool>\n                  <br></br>\n                  <PoolShare>Get Free DAI for Channel</PoolShare>\n                </Pool>\n              </Minter>\n            </Item> */}\n          </Content>\n        </Section>\n      )}\n\n      {/* Stake Fees Section */}\n      {uploadDone && !stakeFeesChoosen && (\n        <Section>\n          <Content padding=\"50px 0px 0px 0px\">\n            <Item align=\"flex-start\" margin=\"0px 20px\">\n              <H3 color=\"#e20880\">Set your staking fees in DAI</H3>\n            </Item>\n\n            <Item\n              margin=\"-10px 20px 20px 20px\"\n              padding=\"20px 20px 10px 20px\"\n              bg=\"#f1f1f1\"\n            >\n              <Slider\n                defaultValue={minStakeFees}\n                onChangeCommitted={(event, value) => setChannelStakeFees(value)}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                step={minStakeFees}\n                marks\n                min={minStakeFees}\n                max={25000}\n              />\n              <Span\n                weight=\"400\"\n                size=\"1.0em\"\n                textTransform=\"uppercase\"\n                spacing=\"0.2em\"\n              >\n                Amount Staked: {channelStakeFees} DAI\n              </Span>\n            </Item>\n\n            <Item self=\"stretch\" align=\"stretch\" margin=\"20px 0px 0px 0px\">\n              <Button\n                bg=\"#e20880\"\n                color=\"#fff\"\n                flex=\"1\"\n                radius=\"0px\"\n                padding=\"20px 10px\"\n                onClick={() => {\n                  setStakeFeesChoosen(true);\n                  setStepFlow(3);\n                }}\n              >\n                <Span\n                  color=\"#fff\"\n                  weight=\"400\"\n                  textTransform=\"uppercase\"\n                  spacing=\"0.1em\"\n                >\n                  Continue\n                </Span>\n              </Button>\n            </Item>\n          </Content>\n        </Section>\n      )}\n\n      {/* Channel Entry */}\n      {uploadDone && stakeFeesChoosen && !channelInfoDone && (\n        <Section>\n          <Content padding=\"50px 0px 0px 0px\">\n            <Item align=\"flex-start\" margin=\"0px 20px\">\n              <H3 color=\"#e20880\">Setup your Channel Info</H3>\n            </Item>\n\n            <FormSubmision\n              flex=\"1\"\n              direction=\"column\"\n              margin=\"0px\"\n              justify=\"center\"\n              size=\"1.1rem\"\n              onSubmit={handleCreateChannel}\n            >\n              <Item\n                margin=\"-10px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n              >\n                <Input\n                  required\n                  placeholder=\"Your Channel Name\"\n                  maxlength=\"40\"\n                  padding=\"12px\"\n                  border=\"1px solid #000\"\n                  weight=\"400\"\n                  size=\"1.2em\"\n                  bg=\"#fff\"\n                  value={channelName}\n                  onChange={(e) => {\n                    setChannelName(e.target.value);\n                  }}\n                />\n                {channelName.trim().length == 0 && (\n                  <Span\n                    padding=\"4px 10px\"\n                    right=\"0px\"\n                    top=\"0px\"\n                    pos=\"absolute\"\n                    color=\"#fff\"\n                    bg=\"#000\"\n                    size=\"0.7rem\"\n                    z=\"1\"\n                  >\n                    Name of Channel\n                  </Span>\n                )}\n              </Item>\n\n              <Item\n                margin=\"15px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n                style={{ position: \"relative\" }}\n              >\n                <Select\n                  className=\"basic-single\"\n                  classNamePrefix=\"select\"\n                  placeholder=\"Alias network\"\n                  name=\"color\"\n                  options={ALIAS_CHAINS}\n                  theme={(theme) => ({\n                    ...theme,\n                    borderRadius: 0,\n                    colors: {\n                      ...theme.colors,\n                      primary25: \"#e20880\",\n                      primary: \"#e20880\",\n                    },\n                  })}\n                  onChange={(selectedOption) => {\n                    setChainDetails(selectedOption.value);\n                  }}\n                />\n                <Input\n                  placeholder=\"Your Channel's Alias address\"\n                  maxlength=\"40\"\n                  padding=\"12px\"\n                  style={{ paddingLeft: \"22%\" }}\n                  border=\"1px solid #000\"\n                  weight=\"400\"\n                  size=\"1rem\"\n                  bg=\"#fff\"\n                  value={channelAlias}\n                  onChange={(e) => {\n                    setChannelAlias(e.target.value);\n                  }}\n                />\n              </Item>\n              <Item\n                margin=\"15px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n              >\n                <TextField\n                  required\n                  placeholder=\"Your Channel's Short Description (200 Characters)\"\n                  rows=\"4\"\n                  maxlength=\"200\"\n                  radius=\"4px\"\n                  padding=\"12px\"\n                  weight=\"400\"\n                  border=\"1px solid #000\"\n                  bg=\"#fff\"\n                  value={channelInfo}\n                  onChange={(e) => {\n                    setChannelInfo(e.target.value);\n                  }}\n                  autocomplete=\"off\"\n                />\n              </Item>\n\n              <ItemH\n                margin=\"15px 20px 15px 20px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"center\"\n              >\n                <Item flex=\"0\" margin=\"0px 5px 0px 0px\">\n                  <FiLink size={24} color=\"#000\" />\n                </Item>\n                <Item flex=\"1\" margin=\"0px 0px 0px 5px\" align=\"stretch\">\n                  <Input\n                    required\n                    placeholder=\"Call to Action Link\"\n                    padding=\"12px\"\n                    border=\"1px solid #000\"\n                    radius=\"4px\"\n                    weight=\"400\"\n                    bg=\"#f1f1f1\"\n                    value={channelURL}\n                    onChange={(e) => {\n                      setChannelURL(e.target.value);\n                    }}\n                  />\n                  {channelURL.trim().length == 0 && (\n                    <Span\n                      padding=\"4px 10px\"\n                      right=\"0px\"\n                      top=\"0px\"\n                      pos=\"absolute\"\n                      color=\"#fff\"\n                      bg=\"#000\"\n                      size=\"0.7rem\"\n                      z=\"1\"\n                    >\n                      Channel's Website URL\n                    </Span>\n                  )}\n                </Item>\n              </ItemH>\n\n              <Item\n                margin=\"15px 0px 0px 0px\"\n                flex=\"1\"\n                self=\"stretch\"\n                align=\"stretch\"\n              >\n                <Button\n                  bg=\"#e20880\"\n                  color=\"#fff\"\n                  flex=\"1\"\n                  radius=\"0px\"\n                  padding=\"20px 10px\"\n                  disabled={processing == 1 ? true : false}\n                >\n                  {processing == 1 && (\n                    <Loader type=\"Oval\" color=\"#fff\" height={24} width={24} />\n                  )}\n                  {processing != 1 && (\n                    <Input\n                      cursor=\"hand\"\n                      textTransform=\"uppercase\"\n                      color=\"#fff\"\n                      weight=\"400\"\n                      size=\"0.8em\"\n                      spacing=\"0.2em\"\n                      type=\"submit\"\n                      value=\"Setup Channel\"\n                    />\n                  )}\n                </Button>\n              </Item>\n            </FormSubmision>\n          </Content>\n        </Section>\n      )}\n\n      {/* Channel Setup Progress */}\n      {(processing == 1 || processing == 3) && (\n        <Section>\n          <Content padding=\"0px 0px 0px 0px\">\n            {processing == 1 && (\n              <Item margin=\"20px 0px 10px 0px\">\n                <Loader type=\"Oval\" color=\"#000\" height={24} width={24} />\n              </Item>\n            )}\n\n            <Item\n              color=\"#fff\"\n              bg={processing == 1 ? \"#e1087f\" : \"#000\"}\n              padding=\"10px 15px\"\n              margin=\"15px 0px\"\n            >\n              <Span\n                color=\"#fff\"\n                textTransform=\"uppercase\"\n                spacing=\"0.1em\"\n                weight=\"400\"\n                size=\"1em\"\n              >\n                {processingInfo}\n              </Span>\n            </Item>\n          </Content>\n        </Section>\n      )}\n    </>\n  );\n}\n\n// css styles\nconst Step = styled.div`\n  height: 12px;\n  width: 12px;\n  background: ${(props) => props.bg || \"#fff\"};\n  border: 4px solid ${(props) => props.activeBG || \"#000\"};\n  border-radius: 100%;\n\n  ${({ type }) =>\n    type == \"active\" &&\n    css`\n      background: ${(props) => props.activeBG || \"#ddd\"};\n      border: 4px solid #00000022;\n    `};\n`;\n\nconst Line = styled.div`\n  position: absolute;\n  height: 5px;\n  background: #f1f1f1;\n  right: 0;\n  left: 0;\n  margin: 0px 10px;\n  z-index: -1;\n`;\n\nconst Channel = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst Notice = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.h1`\n  color: #674c9f;\n  font-size: 30px;\n  font-weight: 300;\n  margin-top: 0px;\n  margin-bottom: 30px;\n`;\n\nconst Info = styled.label`\n  padding-bottom: 20px;\n  font-size: 14px;\n  color: #000;\n`;\n\nconst Info2 = styled(Info)``;\nconst Name = styled(Input)`\n  border-bottom: 1px solid #e20880;\n  font-size: 24px;\n`;\n\nconst ShortInfo = styled.textarea`\n  outline: 0;\n  border: 0;\n  border-bottom: 1px solid #35c5f3;\n  margin: 10px;\n  font-size: 18px;\n  min-height: 80px;\n  color: #111;\n`;\n\nconst Url = styled(Input)`\n  border-bottom: 1px solid #674c9f;\n  font-size: 1=8px;\n`;\n\nconst Text = styled.span``;\n\nconst Continue = styled.button`\n  border: 0;\n  outline: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  border-radius: 20px;\n  font-size: 14px;\n  background: ${(props) => props.theme || \"#674c9f\"};\n  margin: 30px 0px 0px 0px;\n  border-radius: 8px;\n  padding: 16px;\n  font-size: 16px;\n  font-weight: 400;\n`;\nconst Minter = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 13px;\n`;\n\nconst ChannelMetaBox = styled.label`\n  margin: 0px 5px;\n  color: #fff;\n  font-weight: 600;\n  padding: 10px 20px;\n  border-radius: 10px;\n  font-size: 15px;\n  // font-size: 11px;\n`;\nconst Pool = styled.div`\n  margin: 0px 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst PoolShare = styled(ChannelMetaBox)`\n  background: #e20880;\n  // background: #674c9f;\n`;\n\n// Export Default\nexport default CreateChannel;\n","// This address points to a dummy ERC20 contract deployed on Ethereum Mainnet,\n// Goerli, Kovan, Rinkeby and Ropsten. Replace it with your smart contracts.\nconst addresses = {\n  ceaErc20: \"0xc1C0472c0C80bCcDC7F5D01A376Bd97a734B8815\",\n  epnscore: \"0x840afC1587c42ED1B8a9001414Feaac75E1E10f9\",\n  epnsEthComm: \"0x9c38f74e22c7c3bebba9f23db19f8fbde84693a1\", // the ropsten core contract\n  epnsPolyComm: \"0xfd158f73c1331EE5055fAD91d166804D29236CFb\", // the ploygon comm contract\n  dai: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\", //address for dai\n  aDai: \"0xcB1Fe6F440c49E9290c3eb7f158534c2dC374201\",\n  staking: \"0xd9218bb2a7Ff0131555A9b6F179fF5103a27a286\",\n  yieldFarmPUSH: \"0xFe0bcF750d4042480943CC8bA818CA3482DDf691\",\n  yieldFarmLP: \"0xE65fE4a8BCEB8A71D6A8D06dF2D91a9637081c61\",\n  epnsToken: \"0x38c4A4C7fa26eA48E34C45a9F6bDb5DA3f599c55\",\n  epnsLPToken: \"0x69E12FfD1170d851c096FfEC6A8eF27D26D96c0f\",\n  rockstar: \"0xCD1B6C8DDB9A735AA5961Ab4aa5B513fba23A3a3\", //ropsten address\n  batchMintNFT: \"0x9A20272669BBAa6254358ba4BB0520fFc813691C\", //ropsten address\n  NFTRewards: \"0x1f4CA0b2B0541b942A440A3f6673883eEacb2cb3\", //ropsten address\n  distributor: \"0x4Cd9Fe2E0acb9BC28fA51106b99825bd7a02309e\", //ropsten address\n};\n\nexport default addresses;\n","import erc20Abi from \"./abis/erc20\";\nimport ownableAbi from \"./abis/ownable\";\nimport epnscoreAbi from \"./abis/epnscore\";\nimport daiAbi from \"./abis/dai\";\nimport epnsTokenAbi from \"./abis/EPNS.json\";\nimport stakingAbi from \"./abis/Staking.json\";\nimport yieldFarmingAbi from \"./abis/YieldFarm.json\";\nimport rockstarAbi from \"./abis/Rockstar.json\";\nimport ec721Abi from \"./abis/ERC721.json\";\nimport NFTRewards from \"./abis/NFTRewards.json\";\nimport epnsCommAbi from \"./abis/epnsCommunicator.json\";\nimport MerkleDistributorAbi from \"./abis/MerkleDistributor.json\";\n\nexport const abis = {\n  erc20: erc20Abi,\n  ownable: ownableAbi,\n  epnscore: epnscoreAbi,\n  epnsPolyComm: epnsCommAbi,\n  epnsComm: epnsCommAbi,\n  dai: daiAbi,\n  epnsToken: epnsTokenAbi,\n  staking: stakingAbi,\n  yieldFarming: yieldFarmingAbi,\n  rockstar: rockstarAbi,\n  erc721: ec721Abi,\n  NFTRewards: NFTRewards,\n  distributor: MerkleDistributorAbi,\n};\n\nexport { default as addresses } from \"./addresses\";\n","module.exports = __webpack_public_path__ + \"static/media/searchicon.b68a9429.svg\";","(function() {\n\t// The random number is a js implementation of the Xorshift PRNG\n\tvar randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\n\n\tfunction seedrand(seed) {\n\t\tfor (var i = 0; i < randseed.length; i++) {\n\t\t\trandseed[i] = 0;\n\t\t}\n\t\tfor (var i = 0; i < seed.length; i++) {\n\t\t\trandseed[i%4] = ((randseed[i%4] << 5) - randseed[i%4]) + seed.charCodeAt(i);\n\t\t}\n\t}\n\n\tfunction rand() {\n\t\t// based on Java's String.hashCode(), expanded to 4 32bit values\n\t\tvar t = randseed[0] ^ (randseed[0] << 11);\n\n\t\trandseed[0] = randseed[1];\n\t\trandseed[1] = randseed[2];\n\t\trandseed[2] = randseed[3];\n\t\trandseed[3] = (randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8));\n\n\t\treturn (randseed[3]>>>0) / ((1 << 31)>>>0);\n\t}\n\n\tfunction createColor() {\n\t\t//saturation is the whole color spectrum\n\t\tvar h = Math.floor(rand() * 360);\n\t\t//saturation goes from 40 to 100, it avoids greyish colors\n\t\tvar s = ((rand() * 60) + 40) + '%';\n\t\t//lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\n\t\tvar l = ((rand()+rand()+rand()+rand()) * 25) + '%';\n\n\t\tvar color = 'hsl(' + h + ',' + s + ',' + l + ')';\n\t\treturn color;\n\t}\n\n\tfunction createImageData(size) {\n\t\tvar width = size; // Only support square icons for now\n\t\tvar height = size;\n\n\t\tvar dataWidth = Math.ceil(width / 2);\n\t\tvar mirrorWidth = width - dataWidth;\n\n\t\tvar data = [];\n\t\tfor(var y = 0; y < height; y++) {\n\t\t\tvar row = [];\n\t\t\tfor(var x = 0; x < dataWidth; x++) {\n\t\t\t\t// this makes foreground and background color to have a 43% (1/2.3) probability\n\t\t\t\t// spot color has 13% chance\n\t\t\t\trow[x] = Math.floor(rand()*2.3);\n\t\t\t}\n\t\t\tvar r = row.slice(0, mirrorWidth);\n\t\t\tr.reverse();\n\t\t\trow = row.concat(r);\n\n\t\t\tfor(var i = 0; i < row.length; i++) {\n\t\t\t\tdata.push(row[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tfunction buildOpts(opts) {\n\t\tvar newOpts = {};\n\n\t\tnewOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);\n\n\t\tseedrand(newOpts.seed);\n\n\t\tnewOpts.size = opts.size || 8;\n\t\tnewOpts.scale = opts.scale || 4;\n\t\tnewOpts.color = opts.color || createColor();\n\t\tnewOpts.bgcolor = opts.bgcolor || createColor();\n\t\tnewOpts.spotcolor = opts.spotcolor || createColor();\n\n\t\treturn newOpts;\n\t}\n\n\tfunction renderIcon(opts, canvas) {\n\t\topts = buildOpts(opts || {});\n\t\tvar imageData = createImageData(opts.size);\n\t\tvar width = Math.sqrt(imageData.length);\n\n\t\tcanvas.width = canvas.height = opts.size * opts.scale;\n\n\t\tvar cc = canvas.getContext('2d');\n\t\tcc.fillStyle = opts.bgcolor;\n\t\tcc.fillRect(0, 0, canvas.width, canvas.height);\n\t\tcc.fillStyle = opts.color;\n\n\t\tfor(var i = 0; i < imageData.length; i++) {\n\n\t\t\t// if data is 0, leave the background\n\t\t\tif(imageData[i]) {\n\t\t\t\tvar row = Math.floor(i / width);\n\t\t\t\tvar col = i % width;\n\n\t\t\t\t// if data is 2, choose spot color, if 1 choose foreground\n\t\t\t\tcc.fillStyle = (imageData[i] == 1) ? opts.color : opts.spotcolor;\n\n\t\t\t\tcc.fillRect(col * opts.scale, row * opts.scale, opts.scale, opts.scale);\n\t\t\t}\n\t\t}\n\t\treturn canvas;\n\t}\n\n\tfunction createIcon(opts) {\n\t\tvar canvas = document.createElement('canvas');\n\n\t\trenderIcon(opts, canvas);\n\n\t\treturn canvas;\n\t}\n\n\tvar api = {\n\t\tcreate: createIcon,\n\t\trender: renderIcon\n\t};\n\n\tif (typeof module !== \"undefined\") {\n\t\tmodule.exports = api;\n\t}\n\tif (typeof window !== \"undefined\") {\n\t\t window.blockies = api;\n\t}\n\n})();\n","import styled, { css } from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  align-self: stretch;\n  justify-content: center;\n  align-items: ${props => props.align || 'initial'};\n  flex-direction: ${props => props.direction || 'column'};\n  background: ${props => props.theme || 'transparent'};\n  background: ${props => props.gradient || 'undefined'};\n  margin: ${props => props.margin || '0px'};\n  padding: ${props => props.padding || '0px'};\n  overflow: ${props => props.overflow || 'initial'};\n  flex: 1;\n  position: relative;\n`\n\nexport const SectionFS = styled(Section)`\n  min-height: 100vh;\n`\n\nexport const SectionFSHero = styled(Section)`\n  min-height: 100vh;\n  background: rgb(31,23,47);\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\n`\n\nexport const SectionHero = styled(Section)`\n  background: rgb(31,23,47);\n  background: linear-gradient(283deg, rgba(31,23,47,1) 0%, rgba(62,9,40,1) 45%, rgba(17,58,72,1) 100%);\n`\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: ${props => props.padding || \"40px 0px\"};\n  background: ${props => props.theme || 'transparent'};\n  background: ${props => props.gradient || 'undefined'};\n  position: relative;\n`\n\nexport const ItemBreak = styled.div`\n  flex-basis: 100%;\n`\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: ${props => props.wrap || 'wrap'};\n  position: ${props => props.position || 'relative'};\n  justify-content: center;\n  background: ${props => props.bg || 'transparent'};\n  flex: ${props => props.flex || '1'};\n  flex-direction: ${props => props.direction || 'column'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  padding: ${props => props.padding || \"0px\"};\n  margin: ${props => props.margin || '0px'};\n  min-width: ${props => props.minWidth || 'auto'};\n  max-width: ${props => props.maxWidth || 'initial'};\n  font-size: ${props => props.size || \"inherit\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n  filter: ${props => props.filter || \"none\"};\n\n  width: ${props => props.width || \"auto\" };\n  height: ${props => props.height || \"auto\" };\n\n  border: ${props => props.border || \"none\"};\n\n  border-radius: ${props => props.radius || \"0px\"};\n  overflow: ${props => props.overflow || \"initial\"};\n\n  &:hover & {\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\n  }\n\n  @media (max-width: 768px) {\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\n    text-align: ${props => (props.tabletTextAlign ? props.tabletTextAlign : (props.textAlign ? props.textAlign : \"inherit\")) || \"inherit\"};\n  }\n\n  ${ItemBreak} {\n    width: 0;\n  }\n`\n\nexport const ItemH = styled(Item)`\n  flex-direction: row;\n  flex: ${props => props.flex || '1'};\n\n  ${ItemBreak} {\n    width: auto;\n    height: 0;\n  }\n`\n\nexport const WaveOuter = styled.div`\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: ${props => props.bottom || '-70px'};\n  top: ${props => props.top || 'auto'};\n  transform: ${props => props.transform || 'initial'};\n`;\n\nexport const WaveInner = styled.div`\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  transform: ${props => props.transform || 'initial'};\n`;\n\nexport const Arc = styled.div`\n  position: absolute;\n\toverflow: hidden;\n\twidth: 100%;\n\theight: 300px;\n\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n\n  &:after {\n    content: '';\n    position: absolute;\n  \twidth: 300%;\n  \theight: 300%;\n  \ttop: -25%;\n  \tleft: -100%;\n\n\n    ${ props => props.arcRGB && css`\n      \tbackground: radial-gradient(ellipse at center, ${props.arcRGB}00 0%, ${props.arcRGB}00 50%, ${props.arcRGB}ff 50%, ${props.arcRGB}ff 100%);\n    `};\n  }\n`\n\nexport const H1 = styled.h1`\n  @media (max-width: 480px) {\n    font-size: 2.1rem;\n  }\n`\n\nexport const H2 = styled.h2`\n  color: ${props => props.color || '#000'};\n  font-weight: ${props => props.weight || 600};\n  font-size: ${props => props.size || \"2rem\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n`\n\nexport const H3 = styled.h3`\n  color: ${props => props.color || 'rgb(0 0 0 / 0.5)'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"1rem\"};\n  text-transform: ${props => props.textTransform || \"uppercase\"};\n  margin: ${props => props.margin || \"-15px 0px 20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"0.1em\"};\n  font-family: ${props => props.family || \"'Source Sans Pro', Helvetica, sans-serif\"};\n  text-align: ${props => props.textAlign || \"inherit\"};\n  max-width: ${props => props.maxWidth || 'initial'};\n`\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n  display: flex;\n`\n\nexport const P = styled.p`\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n\n  color: ${props => props.color || '#000'};\n  background: ${props => props.bg || 'transparent'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"20px 0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  text-align: ${props => props.textAlign || \"initial\"};\n`\n\nexport const Para = styled(P)`\n  font-weight: ${props => props.weight || 300};\n  letter-spacing: ${props => props.spacing || \"0.02em\"};\n  font-size: ${props => props.size || \"1.1em\"};\n  color: ${props => props.color || \"#000000ee\"};\n`\n\nexport const Span = styled.span`\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n\n  color: ${props => props.color || '#000'};\n  background: ${props => props.bg || 'transparent'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  text-align: ${props => props.textAlign || \"initial\"};\n\n  position: ${props => props.pos || 'initial'};\n  right: ${props => props.right || 'auto'};\n  left: ${props => props.left || 'auto'};\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n\n  z-index: ${props => props.z || 'auto'};\n`\n\nexport const B = styled.span`\n  color: ${props => props.color || '#000'};\n  font-weight: ${props => props.weight || 'bold'};\n`\n\nexport const UL = styled.ul`\n\n`\n\nexport const LI = styled.li`\n  margin: 10px 0px;\n`\n\nexport const Anchor = styled.a`\n  display: flex;\n  flex-direction: ${props => props.direction || 'row'};\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0\"};\n  padding: ${props => props.padding || \"10px 15px\"};\n  letter-spacing: ${props => props.spacing || \"0.2em\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  width: ${props => props.width || \"initial\" };\n\n  position: relative;\n  text-decoration: none;\n  overflow: ${props => props.overflow || \"hidden\"};\n  z-index: 3;\n\n  filter: ${props => props.filter || \"none\"};\n\n  cursor: pointer;\n  pointer: hand;\n\n  &:hover & {\n    filter: ${props => (props.filterHover ? props.filterHover : (props.hover ? props.hover : \"none\")) || \"none\"};\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\n    display: none;\n    z-index: -1;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hoverBG || \"#000\"};\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover:before {\n    display: block;\n  }\n\n  &:hover:after {\n    opacity: 0.08;\n  }\n  &:active:after {\n    opacity: 0.15;\n  }\n`\n\nexport const A = styled(Anchor)`\n  display: inline;\n  color: #e1087f;\n  background: transparent;\n  padding: 0px;\n  letter-spacing: inherit;\n  text-transform: initial;\n`\n\nexport const Button = styled.button`\n  display: flex;\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"tranparent\"};\n  margin: ${props => props.margin || \"0\"};\n  padding: ${props => props.padding || \"10px 15px\"};\n  letter-spacing: ${props => props.spacing || \"initial\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  text-transform: ${props => props.textTransform || \"initial\"};\n\n  position: relative;\n  text-decoration: none;\n  overflow: ${props => props.overflow || \"hidden\"};\n  z-index: 3;\n\n  cursor: pointer;\n  pointer: hand;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hover || (props.bg ? props.bg : \"transparent\")};\n    display: none;\n    z-index: -1;\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.hoverBG || \"#000\"};\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &:hover:before {\n    display: block;\n  }\n\n  &:hover:after {\n    opacity: 0.08;\n  }\n  &:active:after {\n    opacity: 0.15;\n  }\n\n  & > div {\n    display: flex;\n  }\n`\n\nexport const Showoff = styled.div`\n  position: absolute;\n  right: ${props => props.right || 'auto'};\n  left: ${props => props.left || 'auto'};\n  bottom: ${props => props.bottom || 'auto'};\n  top: ${props => props.top || 'auto'};\n  transform: ${props => props.transform || 'initial'};\n  opacity: ${props => props.opacity || 'initial'};\n\n  @media (max-width: 768px) {\n    align-items: ${props => (props.tabletAlign ? props.tabletAlign : (props.align ? props.align : \"center\")) || \"center\"};\n\n    right: ${props => (props.tabletRight ? props.tabletRight : (props.right ? props.right : \"auto\")) || \"auto\"};\n    left: ${props => (props.tabletLeft ? props.tabletLeft : (props.left ? props.left : \"auto\")) || \"auto\"};\n    top: ${props => (props.tabletTop ? props.tabletTop : (props.top ? props.top : \"auto\")) || \"auto\"};\n    bottom: ${props => (props.tabletBottom ? props.tabletBottom : (props.bottom ? props.bottom : \"auto\")) || \"auto\"};\n\n    transform: ${props => (props.tabletTransform ? props.tabletTransform : (props.transform ? props.transform : \"auto\")) || \"auto\"};\n\n    opacity: ${props => (props.tabletOpacity ? props.tabletOpacity : (props.opacity ? props.opacity : \"auto\")) || \"initial\"};\n  }\n`\n\nexport const FormSubmision = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 400};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#fff\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  position: relative;\n`\n\nexport const Input = styled.input`\n  display: ${props => props.display || 'flex'};\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#000\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  outline: ${props => props.outline || \"none\"};\n  overflow: ${props => props.overflow || \"hidden\"};\n  position: relative;\n\n  cursor: ${props => props.cursor || \"initial\"};\n  pointer: ${props => props.hand || \"initial\"};\n\n  &:focus + span {\n    opacity: 0;\n\n    -webkit-transition: all 0.2s ease-in-out;\n    -moz-transition: all 0.2s ease-in-out;\n    -o-transition: all 0.2s ease-in-out;\n    transition: all 0.2s ease-in-out;\n  }\n`\n\nexport const TextField = styled.textarea`\n  display: flex;\n  flex: ${props => props.flex || 'initial'};\n  align-self: ${props => props.self || 'auto'};\n  align-items: ${props => props.align || 'center'};\n  justify-content: ${props => props.justify || 'center'};\n  font-weight: ${props => props.weight || 300};\n  font-size: ${props => props.size || \"inherit\"};\n  text-transform: ${props => props.textTransform || \"inherit\"};\n  color: ${props => props.color || \"#000\"};\n  background: ${props => props.bg || \"transparent\"};\n  margin: ${props => props.margin || \"0px\"};\n  padding: ${props => props.padding || \"0px\"};\n  letter-spacing: ${props => props.spacing || \"inherit\"};\n  border: ${props => props.border || \"none\"};\n  border-radius: ${props => props.radius || \"0px\"};\n  outline: ${props => props.outline || \"none\"};\n  overflow: ${props => props.overflow || \"hidden\"};\n  position: relative;\n  resize: vertical;\n\n  &:focus + span {\n    opacity: 0;\n\n    -webkit-transition: all 0.2s ease-in-out;\n    -moz-transition: all 0.2s ease-in-out;\n    -o-transition: all 0.2s ease-in-out;\n    transition: all 0.2s ease-in-out;\n  }\n`\n"],"sourceRoot":""}